{
	"id": "98ac128c15c8776e05c01f8aa36361d1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/Kipu-Bank_v2.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.30;\r\n\r\n/// -----------------------------------------------------------------------------------------------\r\n///                                         IMPORTS\r\n/// -----------------------------------------------------------------------------------------------\r\n\r\nimport \"openzeppelin-contracts/contracts/access/Ownable.sol\";\r\nimport \"openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\r\nimport \"openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\";\r\n\r\n/// @title KipuBank - A simple bank with deposit and withdrawal limits\r\n/// @author Santiago Carmenes\r\n/// @notice This contract allows users to deposit and withdraw ETH with security limits\r\ncontract KipuBank is Ownable {\r\n\r\n    /// -----------------------------------------------------------------------------------------------\r\n    ///                                       LIBRARIES\r\n    /// -----------------------------------------------------------------------------------------------\r\n    \r\n    using SafeERC20 for IERC20;\r\n\r\n\r\n    /// -----------------------------------------------------------------------------------------------\r\n    ///                                        CONSTANTS\r\n    /// -----------------------------------------------------------------------------------------------\r\n    \r\n    /// @notice ETH address constant\r\n    address public constant ETH_ADDRESS = address(0);\r\n\r\n    /// @notice The maximum age of a price feed update (e.g., 1 hour)\r\n    uint256 public constant ORACLE_HEARTBEAT = 3600;\r\n    \r\n\r\n    /// -----------------------------------------------------------------------------------------------\r\n    ///                                    STATE VARIABLES\r\n    /// -----------------------------------------------------------------------------------------------\r\n\r\n    /// @notice Total ETH limit that can be stored in the bank\r\n    /// @dev Chose to use uint256 since ERC20 tokens also use uint256 for amounts\r\n    uint256 public immutable i_bankCap;\r\n\r\n    /// @notice ETH limit that can be withdrawn in a single transaction\r\n    uint256 public immutable i_withdrawLimit;\r\n\r\n    /// @notice Total USD value stored in the bank\r\n    uint256 public s_totalUsdValue;\r\n\r\n    /// @notice Total number of historical deposits\r\n    uint32 public s_totalDeposits;\r\n\r\n    /// @notice Total number of historical withdrawals\r\n    uint32 public s_totalWithdrawals;\r\n\r\n    /// @notice Struct to hold all relevant information for a token\r\n    struct TokenInfo {\r\n        address priceFeed;\r\n        uint8 decimals;\r\n    }\r\n\r\n    /// -----------------------------------------------------------------------------------------------\r\n    ///                                        MAPPINGS\r\n    /// -----------------------------------------------------------------------------------------------\r\n\r\n    /// @notice User balances mapping\r\n    /// @dev mapping(TokenAddress => mapping(UserAddress => Amount)) \r\n    mapping(address => mapping(address => uint256)) public s_balances;\r\n\r\n    /// @notice Token information mapping\r\n    /// @dev mapping(TokenAddress => TokenInfo)\r\n    mapping(address => TokenInfo) public s_tokenInfo;\r\n\r\n\r\n    /// -----------------------------------------------------------------------------------------------\r\n    ///                                         EVENTS\r\n    /// -----------------------------------------------------------------------------------------------\r\n\r\n    /// @notice Emitted upon ETH deposit\r\n    event Deposited(address indexed token, address indexed user, uint256 amount);\r\n\r\n    /// @notice Emitted upon ETH withdrawal\r\n    event Withdrawn(address indexed token, address indexed user, uint256 amount);\r\n\r\n    /// @notice Emitted when a price feed is updated\r\n    event PriceFeedUpdated(address indexed token, address indexed feed);\r\n\r\n\r\n    /// -----------------------------------------------------------------------------------------------\r\n    ///                                         ERRORS\r\n    /// -----------------------------------------------------------------------------------------------\r\n\r\n    error KipuBank__ExceedsBankCap(uint256 attempted, uint256 cap);\r\n    error KipuBank__ExceedsWithdrawLimit(uint256 attempted, uint256 limit);\r\n    error KipuBank__InsufficientBalance(address token, uint256 requested, uint256 available);\r\n    error KipuBank__TransferFailed(address to, uint256 amount);\r\n    error KipuBank__NotAToken();\r\n    error KipuBank__AmountMustBeGreaterThanZero();\r\n    error KipuBank__PriceFeedNotSet(address tokenAddress);\r\n    error KipuBank__OracleCompromised();\r\n    error KipuBank__StalePrice();\r\n\r\n\r\n    /// -----------------------------------------------------------------------------------------------\r\n    ///                                       CONSTRUCTOR\r\n    /// -----------------------------------------------------------------------------------------------\r\n\r\n    /// @notice Constructor to initialize bank cap and withdrawal limit\r\n    /// @param _bankCap Total USD limit for the bank\r\n    /// @param _withdrawLimit Maximum withdrawal limit per transaction\r\n    constructor(uint256 _bankCap, uint256 _withdrawLimit) Ownable(msg.sender) {\r\n        i_bankCap = _bankCap;\r\n        i_withdrawLimit = _withdrawLimit;\r\n    }\r\n\r\n\r\n    /// -----------------------------------------------------------------------------------------------\r\n    ///                                        MODIFIERS\r\n    /// -----------------------------------------------------------------------------------------------\r\n\r\n    /// @notice Ensures the deposit does not exceed the total bank cap\r\n    modifier withinBankCap(address _tokenAddress, uint256 _amount) {\r\n        uint256 incomingValue = getValueInUsd(_tokenAddress, _amount);\r\n        \r\n        if (s_totalUsdValue + incomingValue > i_bankCap) {\r\n            revert KipuBank__ExceedsBankCap(s_totalUsdValue + incomingValue, i_bankCap);\r\n        }\r\n        _;\r\n    }\r\n\r\n    /// @notice Ensures the withdrawal does not exceed the per-transaction limit\r\n    modifier withinWithdrawLimit(uint256 _amount) {\r\n        if (_amount > i_withdrawLimit) {\r\n            revert KipuBank__ExceedsWithdrawLimit(_amount, i_withdrawLimit);\r\n        }\r\n        _;\r\n    }\r\n\r\n    /// @notice Ensures the user has sufficient funds\r\n    modifier hasSufficientBalance(address _tokenAddress, uint256 _amount) {\r\n        if (_amount > s_balances[_tokenAddress][msg.sender]) {\r\n            revert KipuBank__InsufficientBalance(_tokenAddress, _amount, s_balances[_tokenAddress][msg.sender]);\r\n        }\r\n        _;\r\n    }\r\n\r\n    /// @notice Ensures the amount is greater than zero\r\n    modifier nonZeroAmount(uint256 _amount) {\r\n        if (_amount == 0) {\r\n            revert KipuBank__AmountMustBeGreaterThanZero();\r\n        }\r\n        _;\r\n    }\r\n\r\n\r\n    /// -----------------------------------------------------------------------------------------------\r\n    ///                                    EXTERNAL FUNCTIONS\r\n    /// -----------------------------------------------------------------------------------------------\r\n\r\n    /// @notice Calls internal deposit function for ETH deposits\r\n    /// @dev Uses withinBankCap modifier to enforce bank cap\r\n    function deposit() external payable withinBankCap(ETH_ADDRESS, msg.value) {\r\n        _deposit(ETH_ADDRESS, msg.sender, msg.value);\r\n    }\r\n\r\n    /// @notice Deposit ERC20 tokens into the bank\r\n    /// @param _tokenAddress Address of the ERC20 token\r\n    /// @param _amount Amount of tokens to deposit\r\n    function depositToken(address _tokenAddress, uint256 _amount) external withinBankCap(_tokenAddress, _amount) {\r\n        if (_tokenAddress == ETH_ADDRESS) {\r\n            revert KipuBank__NotAToken();\r\n        }\r\n        IERC20(_tokenAddress).safeTransferFrom(msg.sender, address(this), _amount);\r\n        _deposit(_tokenAddress, msg.sender, _amount);\r\n    }\r\n\r\n    /// @notice Withdraw ETH from the bank\r\n    /// @param _amount Amount of ETH to withdraw\r\n    /// @dev Uses withinWithdrawLimit and hasSufficientBalance modifiers\r\n    function withdraw(uint256 _amount) external withinWithdrawLimit(_amount) hasSufficientBalance(ETH_ADDRESS, _amount) {\r\n        _withdraw(ETH_ADDRESS, msg.sender, _amount);\r\n    }\r\n\r\n    /// @notice Withdraw ERC20 tokens from the bank\r\n    /// @param _tokenAddress Address of the ERC20 token\r\n    /// @param _amount Amount of tokens to withdraw\r\n    function withdrawToken(address _tokenAddress, uint256 _amount) external hasSufficientBalance(_tokenAddress, _amount) {\r\n        if (_tokenAddress == ETH_ADDRESS) {\r\n            revert KipuBank__NotAToken();\r\n        }\r\n        _withdraw(_tokenAddress, msg.sender, _amount);\r\n    }\r\n\r\n    /// @notice Check your own token balance\r\n    /// @param _tokenAddress Address of the ERC20 token\r\n    /// @return balance Amount of tokens available for the user\r\n    function getMyBalance(address _tokenAddress) external view returns (uint256) {\r\n        return s_balances[_tokenAddress][msg.sender];\r\n    }\r\n\r\n    /// @notice Check the total balance of the bank\r\n    /// @return totalBalance Total ETH stored in the contract\r\n    function getTotalEthBalance() external view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    /// @notice Set the price feed address for a token\r\n    /// @param _tokenAddress Address of the token\r\n    function setPriceFeed(address _tokenAddress, address _priceFeedAddress) external onlyOwner {\r\n        uint8 decimals;\r\n        if (_tokenAddress == ETH_ADDRESS) {\r\n            decimals = 18;\r\n        } else {\r\n            decimals = IERC20Metadata(_tokenAddress).decimals();\r\n        }\r\n\r\n        TokenInfo memory token = TokenInfo({priceFeed: _priceFeedAddress, decimals: decimals});\r\n        s_tokenInfo[_tokenAddress] = token;\r\n        \r\n        emit PriceFeedUpdated(_tokenAddress, _priceFeedAddress);\r\n    }\r\n\r\n\r\n    /// -----------------------------------------------------------------------------------------------\r\n    ///                                     PUBLIC FUNCTIONS\r\n    /// -----------------------------------------------------------------------------------------------\r\n\r\n    /// @notice Get value of a token amount in USD\r\n    /// @param _tokenAddress Address of the token\r\n    /// @param _amount Amount of tokens\r\n    /// @return valueInUsd Value in USD with decimals\r\n    function getValueInUsd(address _tokenAddress, uint256 _amount) public view returns (uint256) {\r\n        TokenInfo memory token = s_tokenInfo[_tokenAddress];\r\n        \r\n        if (token.priceFeed == address(0)) {\r\n            revert KipuBank__PriceFeedNotSet(_tokenAddress);\r\n        }\r\n        \r\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(token.priceFeed);\r\n        (, int256 price, , uint256 updatedAt, ) = priceFeed.latestRoundData();\r\n\r\n        if (price <= 0) {\r\n            revert KipuBank__OracleCompromised();\r\n        }\r\n        if (block.timestamp - updatedAt > ORACLE_HEARTBEAT) {\r\n            revert KipuBank__StalePrice();\r\n        }\r\n\r\n        // Usamos los decimales leídos desde la struct\r\n        return (_amount * uint256(price)) / (10**uint256(token.decimals));\r\n    }\r\n\r\n\r\n    /// -----------------------------------------------------------------------------------------------\r\n    ///                                    INTERNAL FUNCTIONS\r\n    /// -----------------------------------------------------------------------------------------------\r\n    \r\n    /// @notice Updates user balance upon deposit\r\n    /// @param _tokenAddress Token address\r\n    /// @param _user User address\r\n    /// @param _amount Amount to deposit\r\n    function _deposit(address _tokenAddress, address _user, uint256 _amount) internal nonZeroAmount(_amount) {\r\n        s_balances[_tokenAddress][_user] += _amount;\r\n        _updateCounters(true);\r\n\r\n        uint256 value = getValueInUsd(_tokenAddress, _amount);\r\n        s_totalUsdValue += value;\r\n\r\n        emit Deposited(_tokenAddress, _user, _amount);\r\n    }\r\n    \r\n    /// @notice Updates user balance upon withdrawal\r\n    /// @param _tokenAddress Token address\r\n    /// @param _user User address\r\n    /// @param _amount Amount to withdraw\r\n    function _withdraw(address _tokenAddress, address _user, uint256 _amount) internal nonZeroAmount(_amount) {\r\n        s_balances[_tokenAddress][_user] -= _amount;\r\n        _updateCounters(false);\r\n\r\n        uint256 value = getValueInUsd(_tokenAddress, _amount);\r\n        s_totalUsdValue -= value;\r\n\r\n        if (_tokenAddress == ETH_ADDRESS) {\r\n            _safeTransferEth(_user, _amount);\r\n        } else {\r\n            IERC20(_tokenAddress).safeTransfer(_user, _amount);\r\n        }\r\n\r\n        emit Withdrawn(_tokenAddress, _user, _amount);\r\n    }\r\n\r\n\r\n    /// -----------------------------------------------------------------------------------------------\r\n    ///                                     PRIVATE FUNCTIONS\r\n    /// -----------------------------------------------------------------------------------------------\r\n    \r\n    /// @notice Updates the deposit and withdrawal counters\r\n    /// @param isDeposit True for deposit, false for withdrawal\r\n    function _updateCounters(bool isDeposit) private {\r\n        if (isDeposit) {\r\n            s_totalDeposits += 1;\r\n        } else {\r\n            s_totalWithdrawals += 1;\r\n        }\r\n    }\r\n\r\n    /// @notice Safe ETH transfer\r\n    /// @param to Recipient's address\r\n    /// @param amount ETH amount to send\r\n    function _safeTransferEth(address to, uint256 amount) private {\r\n        (bool sent, ) = to.call{value: amount}(\"\");\r\n        if (!sent) {\r\n            revert KipuBank__TransferFailed(to, amount);\r\n        }\r\n    }\r\n\r\n\r\n    /// -----------------------------------------------------------------------------------------------\r\n    ///                                 RECEIVE & FALLBACK FUNCTIONS\r\n    /// -----------------------------------------------------------------------------------------------\r\n    \r\n    /// @notice Receive function to handle direct ETH transfers\r\n    /// @dev The use of this.deposit is because deposit() is external\r\n    receive() external payable {\r\n        this.deposit();\r\n    }\r\n\r\n    fallback() external payable {\r\n        this.deposit();\r\n    }\r\n}"
			},
			"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n// solhint-disable-next-line interface-starts-with-i\r\ninterface AggregatorV3Interface {\r\n  function decimals() external view returns (uint8);\r\n\r\n  function description() external view returns (string memory);\r\n\r\n  function version() external view returns (uint256);\r\n\r\n  function getRoundData(\r\n    uint80 _roundId\r\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\r\n\r\n  function latestRoundData()\r\n    external\r\n    view\r\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC20} from \"../IERC20.sol\";\r\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    /**\r\n     * @dev An operation with an ERC-20 token failed.\r\n     */\r\n    error SafeERC20FailedOperation(address token);\r\n\r\n    /**\r\n     * @dev Indicates a failed `decreaseAllowance` request.\r\n     */\r\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\r\n\r\n    /**\r\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\r\n     * non-reverting calls are assumed to be successful.\r\n     */\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        if (!_safeTransfer(token, to, value, true)) {\r\n            revert SafeERC20FailedOperation(address(token));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\r\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\r\n     */\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        if (!_safeTransferFrom(token, from, to, value, true)) {\r\n            revert SafeERC20FailedOperation(address(token));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\r\n     */\r\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\r\n        return _safeTransfer(token, to, value, false);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\r\n     */\r\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\r\n        return _safeTransferFrom(token, from, to, value, false);\r\n    }\r\n\r\n    /**\r\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\r\n     * non-reverting calls are assumed to be successful.\r\n     *\r\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\r\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\r\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\r\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\r\n     */\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 oldAllowance = token.allowance(address(this), spender);\r\n        forceApprove(token, spender, oldAllowance + value);\r\n    }\r\n\r\n    /**\r\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\r\n     * value, non-reverting calls are assumed to be successful.\r\n     *\r\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\r\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\r\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\r\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\r\n     */\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\r\n        unchecked {\r\n            uint256 currentAllowance = token.allowance(address(this), spender);\r\n            if (currentAllowance < requestedDecrease) {\r\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\r\n            }\r\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\r\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\r\n     * to be set to zero before setting it to a non-zero value, such as USDT.\r\n     *\r\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\r\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\r\n     * set here.\r\n     */\r\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\r\n        if (!_safeApprove(token, spender, value, false)) {\r\n            if (!_safeApprove(token, spender, 0, true)) revert SafeERC20FailedOperation(address(token));\r\n            if (!_safeApprove(token, spender, value, true)) revert SafeERC20FailedOperation(address(token));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\r\n     * code. This can be used to implement an {ERC721}-like safe transfer that relies on {ERC1363} checks when\r\n     * targeting contracts.\r\n     *\r\n     * Reverts if the returned value is other than `true`.\r\n     */\r\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\r\n        if (to.code.length == 0) {\r\n            safeTransfer(token, to, value);\r\n        } else if (!token.transferAndCall(to, value, data)) {\r\n            revert SafeERC20FailedOperation(address(token));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\r\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that relies on {ERC1363} checks when\r\n     * targeting contracts.\r\n     *\r\n     * Reverts if the returned value is other than `true`.\r\n     */\r\n    function transferFromAndCallRelaxed(\r\n        IERC1363 token,\r\n        address from,\r\n        address to,\r\n        uint256 value,\r\n        bytes memory data\r\n    ) internal {\r\n        if (to.code.length == 0) {\r\n            safeTransferFrom(token, from, to, value);\r\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\r\n            revert SafeERC20FailedOperation(address(token));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\r\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\r\n     * targeting contracts.\r\n     *\r\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\r\n     * Oppositely, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\r\n     * once without retrying, and relies on the returned value to be true.\r\n     *\r\n     * Reverts if the returned value is other than `true`.\r\n     */\r\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\r\n        if (to.code.length == 0) {\r\n            forceApprove(token, to, value);\r\n        } else if (!token.approveAndCall(to, value, data)) {\r\n            revert SafeERC20FailedOperation(address(token));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity `token.transfer(to, value)` call, relaxing the requirement on the return value: the\r\n     * return value is optional (but if data is returned, it must not be false).\r\n     *\r\n     * @param token The token targeted by the call.\r\n     * @param to The recipient of the tokens\r\n     * @param value The amount of token to transfer\r\n     * @param bubble Behavior switch if the transfer call reverts: bubble the revert reason or return a false boolean.\r\n     */\r\n    function _safeTransfer(IERC20 token, address to, uint256 value, bool bubble) private returns (bool success) {\r\n        bytes4 selector = IERC20.transfer.selector;\r\n\r\n        assembly (\"memory-safe\") {\r\n            let fmp := mload(0x40)\r\n            mstore(0x00, selector)\r\n            mstore(0x04, and(to, shr(96, not(0))))\r\n            mstore(0x24, value)\r\n            success := call(gas(), token, 0, 0x00, 0x44, 0x00, 0x20)\r\n            // if call success and return is true, all is good.\r\n            // otherwise (not success or return is not true), we need to perform further checks\r\n            if iszero(and(success, eq(mload(0x00), 1))) {\r\n                // if the call was a failure and bubble is enabled, bubble the error\r\n                if and(iszero(success), bubble) {\r\n                    returndatacopy(fmp, 0x00, returndatasize())\r\n                    revert(fmp, returndatasize())\r\n                }\r\n                // if the return value is not true, then the call is only successful if:\r\n                // - the token address has code\r\n                // - the returndata is empty\r\n                success := and(success, and(iszero(returndatasize()), gt(extcodesize(token), 0)))\r\n            }\r\n            mstore(0x40, fmp)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity `token.transferFrom(from, to, value)` call, relaxing the requirement on the return\r\n     * value: the return value is optional (but if data is returned, it must not be false).\r\n     *\r\n     * @param token The token targeted by the call.\r\n     * @param from The sender of the tokens\r\n     * @param to The recipient of the tokens\r\n     * @param value The amount of token to transfer\r\n     * @param bubble Behavior switch if the transfer call reverts: bubble the revert reason or return a false boolean.\r\n     */\r\n    function _safeTransferFrom(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value,\r\n        bool bubble\r\n    ) private returns (bool success) {\r\n        bytes4 selector = IERC20.transferFrom.selector;\r\n\r\n        assembly (\"memory-safe\") {\r\n            let fmp := mload(0x40)\r\n            mstore(0x00, selector)\r\n            mstore(0x04, and(from, shr(96, not(0))))\r\n            mstore(0x24, and(to, shr(96, not(0))))\r\n            mstore(0x44, value)\r\n            success := call(gas(), token, 0, 0x00, 0x64, 0x00, 0x20)\r\n            // if call success and return is true, all is good.\r\n            // otherwise (not success or return is not true), we need to perform further checks\r\n            if iszero(and(success, eq(mload(0x00), 1))) {\r\n                // if the call was a failure and bubble is enabled, bubble the error\r\n                if and(iszero(success), bubble) {\r\n                    returndatacopy(fmp, 0x00, returndatasize())\r\n                    revert(fmp, returndatasize())\r\n                }\r\n                // if the return value is not true, then the call is only successful if:\r\n                // - the token address has code\r\n                // - the returndata is empty\r\n                success := and(success, and(iszero(returndatasize()), gt(extcodesize(token), 0)))\r\n            }\r\n            mstore(0x40, fmp)\r\n            mstore(0x60, 0)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity `token.approve(spender, value)` call, relaxing the requirement on the return value:\r\n     * the return value is optional (but if data is returned, it must not be false).\r\n     *\r\n     * @param token The token targeted by the call.\r\n     * @param spender The spender of the tokens\r\n     * @param value The amount of token to transfer\r\n     * @param bubble Behavior switch if the transfer call reverts: bubble the revert reason or return a false boolean.\r\n     */\r\n    function _safeApprove(IERC20 token, address spender, uint256 value, bool bubble) private returns (bool success) {\r\n        bytes4 selector = IERC20.approve.selector;\r\n\r\n        assembly (\"memory-safe\") {\r\n            let fmp := mload(0x40)\r\n            mstore(0x00, selector)\r\n            mstore(0x04, and(spender, shr(96, not(0))))\r\n            mstore(0x24, value)\r\n            success := call(gas(), token, 0, 0x00, 0x44, 0x00, 0x20)\r\n            // if call success and return is true, all is good.\r\n            // otherwise (not success or return is not true), we need to perform further checks\r\n            if iszero(and(success, eq(mload(0x00), 1))) {\r\n                // if the call was a failure and bubble is enabled, bubble the error\r\n                if and(iszero(success), bubble) {\r\n                    returndatacopy(fmp, 0x00, returndatasize())\r\n                    revert(fmp, returndatasize())\r\n                }\r\n                // if the return value is not true, then the call is only successful if:\r\n                // - the token address has code\r\n                // - the returndata is empty\r\n                success := and(success, and(iszero(returndatasize()), gt(extcodesize(token), 0)))\r\n            }\r\n            mstore(0x40, fmp)\r\n        }\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity >=0.6.2;\r\n\r\nimport {IERC20} from \"../IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Context} from \"../utils/Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * The initial owner is set to the address provided by the deployer. This can\r\n * later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    /**\r\n     * @dev The caller account is not authorized to perform an operation.\r\n     */\r\n    error OwnableUnauthorizedAccount(address account);\r\n\r\n    /**\r\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\r\n     */\r\n    error OwnableInvalidOwner(address owner);\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\r\n     */\r\n    constructor(address initialOwner) {\r\n        if (initialOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(initialOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        if (owner() != _msgSender()) {\r\n            revert OwnableUnauthorizedAccount(_msgSender());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby disabling any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        if (newOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\r\n\r\npragma solidity >=0.6.2;\r\n\r\nimport {IERC20} from \"./IERC20.sol\";\r\nimport {IERC165} from \"./IERC165.sol\";\r\n\r\n/**\r\n * @title IERC1363\r\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\r\n *\r\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\r\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\r\n */\r\ninterface IERC1363 is IERC20, IERC165 {\r\n    /*\r\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\r\n     * 0xb0202a11 ===\r\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\r\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\r\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\r\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\r\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\r\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\r\n     */\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\r\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\r\n     * @param to The address which you want to transfer to.\r\n     * @param value The amount of tokens to be transferred.\r\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\r\n     */\r\n    function transferAndCall(address to, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\r\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\r\n     * @param to The address which you want to transfer to.\r\n     * @param value The amount of tokens to be transferred.\r\n     * @param data Additional data with no specified format, sent in call to `to`.\r\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\r\n     */\r\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\r\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\r\n     * @param from The address which you want to send tokens from.\r\n     * @param to The address which you want to transfer to.\r\n     * @param value The amount of tokens to be transferred.\r\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\r\n     */\r\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\r\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\r\n     * @param from The address which you want to send tokens from.\r\n     * @param to The address which you want to transfer to.\r\n     * @param value The amount of tokens to be transferred.\r\n     * @param data Additional data with no specified format, sent in call to `to`.\r\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\r\n     */\r\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\r\n\r\n    /**\r\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\r\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\r\n     * @param spender The address which will spend the funds.\r\n     * @param value The amount of tokens to be spent.\r\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\r\n     */\r\n    function approveAndCall(address spender, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\r\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\r\n     * @param spender The address which will spend the funds.\r\n     * @param value The amount of tokens to be spent.\r\n     * @param data Additional data with no specified format, sent in call to `spender`.\r\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\r\n     */\r\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity >=0.4.16;\r\n\r\n/**\r\n * @dev Interface of the ERC-20 standard as defined in the ERC.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\r\n     * caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\r\n     * allowance mechanism. `value` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    function _contextSuffixLength() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\r\n\r\npragma solidity >=0.4.16;\r\n\r\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\r\n"
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\r\n\r\npragma solidity >=0.4.16;\r\n\r\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\r\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\r\n\r\npragma solidity >=0.4.16;\r\n\r\n/**\r\n * @dev Interface of the ERC-165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
				"chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/",
				"erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
				"forge-std/=lib/forge-std/src/",
				"halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
				"openzeppelin-contracts/=lib/openzeppelin-contracts/",
				"kipubank/=src/"
			]
		}
	},
	"output": {
		"contracts": {
			"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":kipubank/=src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf9510b93a8b01dac3ac6b4f0acc347b0361b4bcb0482a15c2bcf0dcd8f68e2fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8d1c366bfb117b6094402363a8a8d09abc483c33d1d704bd4a61282888a28de\",\"dweb:/ipfs/QmNQwmbRwpzhoh7FET1VwVHMZq9LPpf3Ag7tpVrhxSgrez\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":kipubank/=src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe889e9f6b8469155c967f403ad7508eaa66af8cad1cb9a003536a8e4f281d348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e32c81c8d84199eda0de40d33bb77c7acbb482e3f545d5cfba8195af0a88e0\",\"dweb:/ipfs/Qmaf1WAinzjYWGNxRzCTmn2QABFWS912HwC8eiD7cyTgis\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 54,
								"contract": "lib/openzeppelin-contracts/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":kipubank/=src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x27d48fb11259528345803c0aa48dde8e2d495bb96cfd244191505dbd80d9cf5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://137014f0ec2156eeb5472b07eafba7630e39db6648ca7627afbb87f023676b9e\",\"dweb:/ipfs/QmYhDHgKSUmDyWnqFGq8UbaYATsUVCHkdG5EgwrUVsZuUC\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xc6ebdb3497d4662bd3aa8bc48bf356f7912a5fa42f9bb4f8584817cadf165784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8caaa17034e30866b5df3b1f0ebd60abcda8757e3aa141962b5c07a69608ffae\",\"dweb:/ipfs/QmW3bspXQY8Khz4c63uUcRCnprSKcWJT8avaKqvkWo9NF4\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xc708c0fc983c4e74902c46b56f09d08688cf59561e819a069ea7bcdb506cf0f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edac73f72cd3359f06b188458c74036ac06a586886db3345cc4c12b527a5bc7d\",\"dweb:/ipfs/QmUkZZp9x8UnzHgGj6otpwYYVaxo6ZHSKH8Yr97wFu8Ydc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa2d847c6ad19f5b8ac7c6f4c462bb4c1fd76307cb17478c49743354cf122f77f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcb88894b8d6c2967694114eceba85a4dd40d7adea390e20e766657cb6d5d4be\",\"dweb:/ipfs/QmQQVNAzL8PnhUCYzSvSoiEzuqNtEroBmyBgqCJ9hbKJ5B\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x564310f4788f096e1c1e77edd645999aa7fbad46dd545d7a722f70d5cfe19033\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://844ba854105b8a3e4cfb2cc37de926020beb97b238e85e00df05b79be953cec9\",\"dweb:/ipfs/QmWG5HLDsFRNe3A2ZxvKcB79tqJN9V5yTwcBUjUPYhDki3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":kipubank/=src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa2d847c6ad19f5b8ac7c6f4c462bb4c1fd76307cb17478c49743354cf122f77f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcb88894b8d6c2967694114eceba85a4dd40d7adea390e20e766657cb6d5d4be\",\"dweb:/ipfs/QmQQVNAzL8PnhUCYzSvSoiEzuqNtEroBmyBgqCJ9hbKJ5B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":kipubank/=src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa2d847c6ad19f5b8ac7c6f4c462bb4c1fd76307cb17478c49743354cf122f77f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcb88894b8d6c2967694114eceba85a4dd40d7adea390e20e766657cb6d5d4be\",\"dweb:/ipfs/QmQQVNAzL8PnhUCYzSvSoiEzuqNtEroBmyBgqCJ9hbKJ5B\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x720e6c9abddab40e1c4801517e852b641acc71b599857038dcc55d6d932ed174\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9272084af787a62081ef3243bbc80c9eecc17ca453dba80a5582645ac12415e4\",\"dweb:/ipfs/QmaVBuLsASZy3QYj8AxTRuR483sJJTYspvy7sB3epRcYTA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":715:13592  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":715:13592  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220f6af56b07752f2ecf01c6e75da5ef112fe8fecf7f05bc2a4cfb62730637c902864736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220f6af56b07752f2ecf01c6e75da5ef112fe8fecf7f05bc2a4cfb62730637c902864736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0xAF JUMP 0xB0 PUSH24 0x52F2ECF01C6E75DA5EF112FE8FECF7F05BC2A4CFB6273063 PUSH29 0x902864736F6C634300081E003300000000000000000000000000000000 ",
							"sourceMap": "715:12877:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220f6af56b07752f2ecf01c6e75da5ef112fe8fecf7f05bc2a4cfb62730637c902864736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0xAF JUMP 0xB0 PUSH24 0x52F2ECF01C6E75DA5EF112FE8FECF7F05BC2A4CFB6273063 PUSH29 0x902864736F6C634300081E003300000000000000000000000000000000 ",
							"sourceMap": "715:12877:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_safeApprove(contract IERC20,address,uint256,bool)": "infinite",
								"_safeTransfer(contract IERC20,address,uint256,bool)": "infinite",
								"_safeTransferFrom(contract IERC20,address,address,uint256,bool)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 715,
									"end": 13592,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 715,
									"end": 13592,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f6af56b07752f2ecf01c6e75da5ef112fe8fecf7f05bc2a4cfb62730637c902864736f6c634300081e0033",
									".code": [
										{
											"begin": 715,
											"end": 13592,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 715,
											"end": 13592,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 715,
											"end": 13592,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 715,
											"end": 13592,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 715,
											"end": 13592,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 13592,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 715,
											"end": 13592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 13592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 13592,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"lib/openzeppelin-contracts/contracts/access/Ownable.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"src/Kipu-Bank_v2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":kipubank/=src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x27d48fb11259528345803c0aa48dde8e2d495bb96cfd244191505dbd80d9cf5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://137014f0ec2156eeb5472b07eafba7630e39db6648ca7627afbb87f023676b9e\",\"dweb:/ipfs/QmYhDHgKSUmDyWnqFGq8UbaYATsUVCHkdG5EgwrUVsZuUC\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xc6ebdb3497d4662bd3aa8bc48bf356f7912a5fa42f9bb4f8584817cadf165784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8caaa17034e30866b5df3b1f0ebd60abcda8757e3aa141962b5c07a69608ffae\",\"dweb:/ipfs/QmW3bspXQY8Khz4c63uUcRCnprSKcWJT8avaKqvkWo9NF4\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xc708c0fc983c4e74902c46b56f09d08688cf59561e819a069ea7bcdb506cf0f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edac73f72cd3359f06b188458c74036ac06a586886db3345cc4c12b527a5bc7d\",\"dweb:/ipfs/QmUkZZp9x8UnzHgGj6otpwYYVaxo6ZHSKH8Yr97wFu8Ydc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa2d847c6ad19f5b8ac7c6f4c462bb4c1fd76307cb17478c49743354cf122f77f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcb88894b8d6c2967694114eceba85a4dd40d7adea390e20e766657cb6d5d4be\",\"dweb:/ipfs/QmQQVNAzL8PnhUCYzSvSoiEzuqNtEroBmyBgqCJ9hbKJ5B\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x773c2fd57770fb2dfb89ef76d4fad4a25d143b5d0ac26c8172cb947bff56ed3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0663124601928d5f570f7e86f9f918e143f4a0b065f3512f3378bdc0fcd6e514\",\"dweb:/ipfs/QmTi6ZMYnaHgiscJhyxA7Ebf6dsABGYgciQT9vMHa2ewrA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x564310f4788f096e1c1e77edd645999aa7fbad46dd545d7a722f70d5cfe19033\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://844ba854105b8a3e4cfb2cc37de926020beb97b238e85e00df05b79be953cec9\",\"dweb:/ipfs/QmWG5HLDsFRNe3A2ZxvKcB79tqJN9V5yTwcBUjUPYhDki3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":kipubank/=src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":kipubank/=src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x564310f4788f096e1c1e77edd645999aa7fbad46dd545d7a722f70d5cfe19033\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://844ba854105b8a3e4cfb2cc37de926020beb97b238e85e00df05b79be953cec9\",\"dweb:/ipfs/QmWG5HLDsFRNe3A2ZxvKcB79tqJN9V5yTwcBUjUPYhDki3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/Kipu-Bank_v2.sol": {
				"KipuBank": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bankCap",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_withdrawLimit",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "KipuBank__AmountMustBeGreaterThanZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "attempted",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "KipuBank__ExceedsBankCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "attempted",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								}
							],
							"name": "KipuBank__ExceedsWithdrawLimit",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "requested",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "available",
									"type": "uint256"
								}
							],
							"name": "KipuBank__InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "KipuBank__NotAToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "KipuBank__OracleCompromised",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"name": "KipuBank__PriceFeedNotSet",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "KipuBank__StalePrice",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "KipuBank__TransferFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "feed",
									"type": "address"
								}
							],
							"name": "PriceFeedUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "ETH_ADDRESS",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ORACLE_HEARTBEAT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "depositToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"name": "getMyBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalEthBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "getValueInUsd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "i_bankCap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "i_withdrawLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "s_balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "s_tokenInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "priceFeed",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_totalDeposits",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_totalUsdValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_totalWithdrawals",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_priceFeedAddress",
									"type": "address"
								}
							],
							"name": "setPriceFeed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"author": "Santiago Carmenes",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_bankCap": "Total USD limit for the bank",
									"_withdrawLimit": "Maximum withdrawal limit per transaction"
								}
							},
							"deposit()": {
								"details": "Uses withinBankCap modifier to enforce bank cap"
							},
							"depositToken(address,uint256)": {
								"params": {
									"_amount": "Amount of tokens to deposit",
									"_tokenAddress": "Address of the ERC20 token"
								}
							},
							"getMyBalance(address)": {
								"params": {
									"_tokenAddress": "Address of the ERC20 token"
								},
								"returns": {
									"_0": "balance Amount of tokens available for the user"
								}
							},
							"getTotalEthBalance()": {
								"returns": {
									"_0": "totalBalance Total ETH stored in the contract"
								}
							},
							"getValueInUsd(address,uint256)": {
								"params": {
									"_amount": "Amount of tokens",
									"_tokenAddress": "Address of the token"
								},
								"returns": {
									"_0": "valueInUsd Value in USD with decimals"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setPriceFeed(address,address)": {
								"params": {
									"_tokenAddress": "Address of the token"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(uint256)": {
								"details": "Uses withinWithdrawLimit and hasSufficientBalance modifiers",
								"params": {
									"_amount": "Amount of ETH to withdraw"
								}
							},
							"withdrawToken(address,uint256)": {
								"params": {
									"_amount": "Amount of tokens to withdraw",
									"_tokenAddress": "Address of the ERC20 token"
								}
							}
						},
						"stateVariables": {
							"i_bankCap": {
								"details": "Chose to use uint256 since ERC20 tokens also use uint256 for amounts"
							},
							"s_balances": {
								"details": "mapping(TokenAddress => mapping(UserAddress => Amount)) "
							},
							"s_tokenInfo": {
								"details": "mapping(TokenAddress => TokenInfo)"
							}
						},
						"title": "KipuBank - A simple bank with deposit and withdrawal limits",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Kipu-Bank_v2.sol\":838:14332  contract KipuBank is Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"src/Kipu-Bank_v2.sol\":5238:5394  constructor(uint256 _bankCap, uint256 _withdrawLimit) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/Kipu-Bank_v2.sol\":5300:5310  msg.sender */\n  caller\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1335:1336  0 */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1311:1337  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1311:1323  initialOwner */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1311:1337  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1307:1404  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1389:1390  0 */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1361:1392  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1307:1404  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1414:1446  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1433:1445  initialOwner */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1414:1432  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1414:1446  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1262:1454  constructor(address initialOwner) {... */\n  pop\n    /* \"src/Kipu-Bank_v2.sol\":5335:5343  _bankCap */\n  dup2\n    /* \"src/Kipu-Bank_v2.sol\":5323:5343  i_bankCap = _bankCap */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/Kipu-Bank_v2.sol\":5372:5386  _withdrawLimit */\n  dup1\n    /* \"src/Kipu-Bank_v2.sol\":5354:5386  i_withdrawLimit = _withdrawLimit */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/Kipu-Bank_v2.sol\":5238:5394  constructor(uint256 _bankCap, uint256 _withdrawLimit) Ownable(msg.sender) {... */\n  pop\n  pop\n    /* \"src/Kipu-Bank_v2.sol\":838:14332  contract KipuBank is Ownable {... */\n  jump(tag_13)\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3006:3197  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3080:3096  address oldOwner */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3099:3105  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3080:3105  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3125:3133  newOwner */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3116:3122  _owner */\n  0x00\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3116:3133  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3180:3188  newOwner */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3170:3178  oldOwner */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3069:3197  {... */\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3006:3197  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_19:\n    /* \"#utility.yul\":490:514   */\n  tag_30\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_18\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_31:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_20:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_33\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_19\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1201   */\ntag_3:\n    /* \"#utility.yul\":773:779   */\n  0x00\n    /* \"#utility.yul\":781:787   */\n  0x00\n    /* \"#utility.yul\":830:832   */\n  0x40\n    /* \"#utility.yul\":818:827   */\n  dup4\n    /* \"#utility.yul\":809:816   */\n  dup6\n    /* \"#utility.yul\":805:828   */\n  sub\n    /* \"#utility.yul\":801:833   */\n  slt\n    /* \"#utility.yul\":798:917   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":836:915   */\n  tag_36\n  tag_16\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":798:917   */\ntag_35:\n    /* \"#utility.yul\":956:957   */\n  0x00\n    /* \"#utility.yul\":981:1045   */\n  tag_37\n    /* \"#utility.yul\":1037:1044   */\n  dup6\n    /* \"#utility.yul\":1028:1034   */\n  dup3\n    /* \"#utility.yul\":1017:1026   */\n  dup7\n    /* \"#utility.yul\":1013:1035   */\n  add\n    /* \"#utility.yul\":981:1045   */\n  tag_20\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":971:1045   */\n  swap3\n  pop\n    /* \"#utility.yul\":927:1055   */\n  pop\n    /* \"#utility.yul\":1094:1096   */\n  0x20\n    /* \"#utility.yul\":1120:1184   */\n  tag_38\n    /* \"#utility.yul\":1176:1183   */\n  dup6\n    /* \"#utility.yul\":1167:1173   */\n  dup3\n    /* \"#utility.yul\":1156:1165   */\n  dup7\n    /* \"#utility.yul\":1152:1174   */\n  add\n    /* \"#utility.yul\":1120:1184   */\n  tag_20\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1110:1184   */\n  swap2\n  pop\n    /* \"#utility.yul\":1065:1194   */\n  pop\n    /* \"#utility.yul\":694:1201   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1207:1333   */\ntag_21:\n    /* \"#utility.yul\":1244:1251   */\n  0x00\n    /* \"#utility.yul\":1284:1326   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1277:1282   */\n  dup3\n    /* \"#utility.yul\":1273:1327   */\n  and\n    /* \"#utility.yul\":1262:1327   */\n  swap1\n  pop\n    /* \"#utility.yul\":1207:1333   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1339:1435   */\ntag_22:\n    /* \"#utility.yul\":1376:1383   */\n  0x00\n    /* \"#utility.yul\":1405:1429   */\n  tag_41\n    /* \"#utility.yul\":1423:1428   */\n  dup3\n    /* \"#utility.yul\":1405:1429   */\n  tag_21\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1394:1429   */\n  swap1\n  pop\n    /* \"#utility.yul\":1339:1435   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1441:1559   */\ntag_23:\n    /* \"#utility.yul\":1528:1552   */\n  tag_43\n    /* \"#utility.yul\":1546:1551   */\n  dup2\n    /* \"#utility.yul\":1528:1552   */\n  tag_22\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1523:1526   */\n  dup3\n    /* \"#utility.yul\":1516:1553   */\n  mstore\n    /* \"#utility.yul\":1441:1559   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1565:1787   */\ntag_9:\n    /* \"#utility.yul\":1658:1662   */\n  0x00\n    /* \"#utility.yul\":1696:1698   */\n  0x20\n    /* \"#utility.yul\":1685:1694   */\n  dup3\n    /* \"#utility.yul\":1681:1699   */\n  add\n    /* \"#utility.yul\":1673:1699   */\n  swap1\n  pop\n    /* \"#utility.yul\":1709:1780   */\n  tag_45\n    /* \"#utility.yul\":1777:1778   */\n  0x00\n    /* \"#utility.yul\":1766:1775   */\n  dup4\n    /* \"#utility.yul\":1762:1779   */\n  add\n    /* \"#utility.yul\":1753:1759   */\n  dup5\n    /* \"#utility.yul\":1709:1780   */\n  tag_23\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1565:1787   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/Kipu-Bank_v2.sol\":838:14332  contract KipuBank is Ownable {... */\ntag_13:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xfcac3a328906cd87f9d71e44cbced3f71903964f2eaa0b58019ffefc2172c181\")\n  0x00\n  assignImmutable(\"0x7375017ea568916b57e2ed473624235a6147b80f0dede68541a577eedcecf3b8\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/Kipu-Bank_v2.sol\":838:14332  contract KipuBank is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xdccd58e3\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xdccd58e3\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf3db702c\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf6687af7\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xfe3192f6\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9e281a98\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa734f06e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc801fb40\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x4a83c3b7\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x4a83c3b7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x52963c2b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x76e11286\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7e3ef7cd\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x287cc96b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x338b5dea\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3b1a4ec4\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x432017ca\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"src/Kipu-Bank_v2.sol\":14238:14242  this */\n      address\n        /* \"src/Kipu-Bank_v2.sol\":14238:14250  this.deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0e30db0\n        /* \"src/Kipu-Bank_v2.sol\":14238:14252  this.deposit() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_30\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_30:\n      stop\n        /* \"src/Kipu-Bank_v2.sol\":838:14332  contract KipuBank is Ownable {... */\n    tag_2:\n        /* \"src/Kipu-Bank_v2.sol\":14307:14311  this */\n      address\n        /* \"src/Kipu-Bank_v2.sol\":14307:14319  this.deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0e30db0\n        /* \"src/Kipu-Bank_v2.sol\":14307:14321  this.deposit() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      revert(0x00, 0x00)\n    tag_33:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_35:\n      stop\n        /* \"src/Kipu-Bank_v2.sol\":9247:9356  function getTotalEthBalance() external view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      revert(0x00, 0x00)\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Kipu-Bank_v2.sol\":8178:8356  function withdraw(uint256 _amount) external withinWithdrawLimit(_amount) hasSufficientBalance(ETH_ADDRESS, _amount) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      revert(0x00, 0x00)\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"src/Kipu-Bank_v2.sol\":7646:8002  function depositToken(address _tokenAddress, uint256 _amount) external withinBankCap(_tokenAddress, _amount) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      revert(0x00, 0x00)\n    tag_46:\n      pop\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"src/Kipu-Bank_v2.sol\":2324:2354  uint256 public s_totalUsdValue */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      revert(0x00, 0x00)\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Kipu-Bank_v2.sol\":3251:3299  mapping(address => TokenInfo) public s_tokenInfo */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      revert(0x00, 0x00)\n    tag_55:\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_60\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Kipu-Bank_v2.sol\":1626:1673  uint256 public constant ORACLE_HEARTBEAT = 3600 */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      revert(0x00, 0x00)\n    tag_62:\n      pop\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Kipu-Bank_v2.sol\":2416:2445  uint32 public s_totalDeposits */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      revert(0x00, 0x00)\n    tag_66:\n      pop\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2368:2471  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      revert(0x00, 0x00)\n    tag_71:\n      pop\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      stop\n        /* \"src/Kipu-Bank_v2.sol\":9471:9983  function setPriceFeed(address _tokenAddress, address _priceFeedAddress) external onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      revert(0x00, 0x00)\n    tag_74:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"src/Kipu-Bank_v2.sol\":8983:9123  function getMyBalance(address _tokenAddress) external view returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      revert(0x00, 0x00)\n    tag_79:\n      pop\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1693:1780  function owner() public view virtual returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      revert(0x00, 0x00)\n    tag_84:\n      pop\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Kipu-Bank_v2.sol\":8527:8807  function withdrawToken(address _tokenAddress, uint256 _amount) external hasSufficientBalance(_tokenAddress, _amount) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      revert(0x00, 0x00)\n    tag_89:\n      pop\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"src/Kipu-Bank_v2.sol\":1498:1546  address public constant ETH_ADDRESS = address(0) */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      revert(0x00, 0x00)\n    tag_93:\n      pop\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Kipu-Bank_v2.sol\":2223:2263  uint256 public immutable i_withdrawLimit */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      revert(0x00, 0x00)\n    tag_97:\n      pop\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Kipu-Bank_v2.sol\":7340:7477  function deposit() external payable withinBankCap(ETH_ADDRESS, msg.value) {... */\n    tag_17:\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      stop\n        /* \"src/Kipu-Bank_v2.sol\":3085:3150  mapping(address => mapping(address => uint256)) public s_balances */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      revert(0x00, 0x00)\n    tag_103:\n      pop\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2626:2846  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      revert(0x00, 0x00)\n    tag_108:\n      pop\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      stop\n        /* \"src/Kipu-Bank_v2.sol\":2510:2542  uint32 public s_totalWithdrawals */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      revert(0x00, 0x00)\n    tag_112:\n      pop\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Kipu-Bank_v2.sol\":2107:2141  uint256 public immutable i_bankCap */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      revert(0x00, 0x00)\n    tag_116:\n      pop\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Kipu-Bank_v2.sol\":10466:11275  function getValueInUsd(address _tokenAddress, uint256 _amount) public view returns (uint256) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      revert(0x00, 0x00)\n    tag_120:\n      pop\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Kipu-Bank_v2.sol\":9247:9356  function getTotalEthBalance() external view returns (uint256) {... */\n    tag_38:\n        /* \"src/Kipu-Bank_v2.sol\":9300:9307  uint256 */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":9327:9348  address(this).balance */\n      selfbalance\n        /* \"src/Kipu-Bank_v2.sol\":9320:9348  return address(this).balance */\n      swap1\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":9247:9356  function getTotalEthBalance() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"src/Kipu-Bank_v2.sol\":8178:8356  function withdraw(uint256 _amount) external withinWithdrawLimit(_amount) hasSufficientBalance(ETH_ADDRESS, _amount) {... */\n    tag_45:\n        /* \"src/Kipu-Bank_v2.sol\":8242:8249  _amount */\n      dup1\n        /* \"src/Kipu-Bank_v2.sol\":6233:6248  i_withdrawLimit */\n      immutable(\"0xfcac3a328906cd87f9d71e44cbced3f71903964f2eaa0b58019ffefc2172c181\")\n        /* \"src/Kipu-Bank_v2.sol\":6223:6230  _amount */\n      dup2\n        /* \"src/Kipu-Bank_v2.sol\":6223:6248  _amount > i_withdrawLimit */\n      gt\n        /* \"src/Kipu-Bank_v2.sol\":6219:6340  if (_amount > i_withdrawLimit) {... */\n      iszero\n      tag_127\n      jumpi\n        /* \"src/Kipu-Bank_v2.sol\":6303:6310  _amount */\n      dup1\n        /* \"src/Kipu-Bank_v2.sol\":6312:6327  i_withdrawLimit */\n      immutable(\"0xfcac3a328906cd87f9d71e44cbced3f71903964f2eaa0b58019ffefc2172c181\")\n        /* \"src/Kipu-Bank_v2.sol\":6272:6328  KipuBank__ExceedsWithdrawLimit(_amount, i_withdrawLimit) */\n      mload(0x40)\n      0x6310199600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap3\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Kipu-Bank_v2.sol\":6219:6340  if (_amount > i_withdrawLimit) {... */\n    tag_127:\n        /* \"src/Kipu-Bank_v2.sol\":1544:1545  0 */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":8285:8292  _amount */\n      dup3\n        /* \"src/Kipu-Bank_v2.sol\":6517:6527  s_balances */\n      0x03\n        /* \"src/Kipu-Bank_v2.sol\":6517:6542  s_balances[_tokenAddress] */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":6528:6541  _tokenAddress */\n      dup4\n        /* \"src/Kipu-Bank_v2.sol\":6517:6542  s_balances[_tokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Kipu-Bank_v2.sol\":6517:6554  s_balances[_tokenAddress][msg.sender] */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":6543:6553  msg.sender */\n      caller\n        /* \"src/Kipu-Bank_v2.sol\":6517:6554  s_balances[_tokenAddress][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/Kipu-Bank_v2.sol\":6507:6514  _amount */\n      dup2\n        /* \"src/Kipu-Bank_v2.sol\":6507:6554  _amount > s_balances[_tokenAddress][msg.sender] */\n      gt\n        /* \"src/Kipu-Bank_v2.sol\":6503:6682  if (_amount > s_balances[_tokenAddress][msg.sender]) {... */\n      iszero\n      tag_131\n      jumpi\n        /* \"src/Kipu-Bank_v2.sol\":6608:6621  _tokenAddress */\n      dup2\n        /* \"src/Kipu-Bank_v2.sol\":6623:6630  _amount */\n      dup2\n        /* \"src/Kipu-Bank_v2.sol\":6632:6642  s_balances */\n      0x03\n        /* \"src/Kipu-Bank_v2.sol\":6632:6657  s_balances[_tokenAddress] */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":6643:6656  _tokenAddress */\n      dup6\n        /* \"src/Kipu-Bank_v2.sol\":6632:6657  s_balances[_tokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Kipu-Bank_v2.sol\":6632:6669  s_balances[_tokenAddress][msg.sender] */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":6658:6668  msg.sender */\n      caller\n        /* \"src/Kipu-Bank_v2.sol\":6632:6669  s_balances[_tokenAddress][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/Kipu-Bank_v2.sol\":6578:6670  KipuBank__InsufficientBalance(_tokenAddress, _amount, s_balances[_tokenAddress][msg.sender]) */\n      mload(0x40)\n      0x5fedab0900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Kipu-Bank_v2.sol\":6503:6682  if (_amount > s_balances[_tokenAddress][msg.sender]) {... */\n    tag_131:\n        /* \"src/Kipu-Bank_v2.sol\":8305:8348  _withdraw(ETH_ADDRESS, msg.sender, _amount) */\n      tag_135\n        /* \"src/Kipu-Bank_v2.sol\":1544:1545  0 */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":8328:8338  msg.sender */\n      caller\n        /* \"src/Kipu-Bank_v2.sol\":8340:8347  _amount */\n      dup7\n        /* \"src/Kipu-Bank_v2.sol\":8305:8314  _withdraw */\n      tag_136\n        /* \"src/Kipu-Bank_v2.sol\":8305:8348  _withdraw(ETH_ADDRESS, msg.sender, _amount) */\n      jump\t// in\n    tag_135:\n        /* \"src/Kipu-Bank_v2.sol\":6350:6351  _ */\n      pop\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":8178:8356  function withdraw(uint256 _amount) external withinWithdrawLimit(_amount) hasSufficientBalance(ETH_ADDRESS, _amount) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/Kipu-Bank_v2.sol\":7646:8002  function depositToken(address _tokenAddress, uint256 _amount) external withinBankCap(_tokenAddress, _amount) {... */\n    tag_50:\n        /* \"src/Kipu-Bank_v2.sol\":7731:7744  _tokenAddress */\n      dup2\n        /* \"src/Kipu-Bank_v2.sol\":7746:7753  _amount */\n      dup2\n        /* \"src/Kipu-Bank_v2.sol\":5820:5841  uint256 incomingValue */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":5844:5881  getValueInUsd(_tokenAddress, _amount) */\n      tag_138\n        /* \"src/Kipu-Bank_v2.sol\":5858:5871  _tokenAddress */\n      dup4\n        /* \"src/Kipu-Bank_v2.sol\":5873:5880  _amount */\n      dup4\n        /* \"src/Kipu-Bank_v2.sol\":5844:5857  getValueInUsd */\n      tag_123\n        /* \"src/Kipu-Bank_v2.sol\":5844:5881  getValueInUsd(_tokenAddress, _amount) */\n      jump\t// in\n    tag_138:\n        /* \"src/Kipu-Bank_v2.sol\":5820:5881  uint256 incomingValue = getValueInUsd(_tokenAddress, _amount) */\n      swap1\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":5940:5949  i_bankCap */\n      immutable(\"0x7375017ea568916b57e2ed473624235a6147b80f0dede68541a577eedcecf3b8\")\n        /* \"src/Kipu-Bank_v2.sol\":5924:5937  incomingValue */\n      dup2\n        /* \"src/Kipu-Bank_v2.sol\":5906:5921  s_totalUsdValue */\n      sload(0x01)\n        /* \"src/Kipu-Bank_v2.sol\":5906:5937  s_totalUsdValue + incomingValue */\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"src/Kipu-Bank_v2.sol\":5906:5949  s_totalUsdValue + incomingValue > i_bankCap */\n      gt\n        /* \"src/Kipu-Bank_v2.sol\":5902:6053  if (s_totalUsdValue + incomingValue > i_bankCap) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \"src/Kipu-Bank_v2.sol\":6016:6029  incomingValue */\n      dup1\n        /* \"src/Kipu-Bank_v2.sol\":5998:6013  s_totalUsdValue */\n      sload(0x01)\n        /* \"src/Kipu-Bank_v2.sol\":5998:6029  s_totalUsdValue + incomingValue */\n      tag_142\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_142:\n        /* \"src/Kipu-Bank_v2.sol\":6031:6040  i_bankCap */\n      immutable(\"0x7375017ea568916b57e2ed473624235a6147b80f0dede68541a577eedcecf3b8\")\n        /* \"src/Kipu-Bank_v2.sol\":5973:6041  KipuBank__ExceedsBankCap(s_totalUsdValue + incomingValue, i_bankCap) */\n      mload(0x40)\n      0xf6167f4e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap3\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Kipu-Bank_v2.sol\":5902:6053  if (s_totalUsdValue + incomingValue > i_bankCap) {... */\n    tag_141:\n        /* \"src/Kipu-Bank_v2.sol\":1544:1545  0 */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":7770:7798  _tokenAddress == ETH_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Kipu-Bank_v2.sol\":7770:7783  _tokenAddress */\n      dup6\n        /* \"src/Kipu-Bank_v2.sol\":7770:7798  _tokenAddress == ETH_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/Kipu-Bank_v2.sol\":7766:7855  if (_tokenAddress == ETH_ADDRESS) {... */\n      tag_145\n      jumpi\n        /* \"src/Kipu-Bank_v2.sol\":7822:7843  KipuBank__NotAToken() */\n      mload(0x40)\n      0x7cb522e900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Kipu-Bank_v2.sol\":7766:7855  if (_tokenAddress == ETH_ADDRESS) {... */\n    tag_145:\n        /* \"src/Kipu-Bank_v2.sol\":7865:7939  IERC20(_tokenAddress).safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_146\n        /* \"src/Kipu-Bank_v2.sol\":7904:7914  msg.sender */\n      caller\n        /* \"src/Kipu-Bank_v2.sol\":7924:7928  this */\n      address\n        /* \"src/Kipu-Bank_v2.sol\":7931:7938  _amount */\n      dup7\n        /* \"src/Kipu-Bank_v2.sol\":7872:7885  _tokenAddress */\n      dup9\n        /* \"src/Kipu-Bank_v2.sol\":7865:7903  IERC20(_tokenAddress).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_147\n      swap1\n        /* \"src/Kipu-Bank_v2.sol\":7865:7939  IERC20(_tokenAddress).safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_146:\n        /* \"src/Kipu-Bank_v2.sol\":7950:7994  _deposit(_tokenAddress, msg.sender, _amount) */\n      tag_148\n        /* \"src/Kipu-Bank_v2.sol\":7959:7972  _tokenAddress */\n      dup6\n        /* \"src/Kipu-Bank_v2.sol\":7974:7984  msg.sender */\n      caller\n        /* \"src/Kipu-Bank_v2.sol\":7986:7993  _amount */\n      dup7\n        /* \"src/Kipu-Bank_v2.sol\":7950:7958  _deposit */\n      tag_149\n        /* \"src/Kipu-Bank_v2.sol\":7950:7994  _deposit(_tokenAddress, msg.sender, _amount) */\n      jump\t// in\n    tag_148:\n        /* \"src/Kipu-Bank_v2.sol\":5809:6072  {... */\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":7646:8002  function depositToken(address _tokenAddress, uint256 _amount) external withinBankCap(_tokenAddress, _amount) {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Kipu-Bank_v2.sol\":2324:2354  uint256 public s_totalUsdValue */\n    tag_53:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"src/Kipu-Bank_v2.sol\":3251:3299  mapping(address => TokenInfo) public s_tokenInfo */\n    tag_59:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"src/Kipu-Bank_v2.sol\":1626:1673  uint256 public constant ORACLE_HEARTBEAT = 3600 */\n    tag_64:\n        /* \"src/Kipu-Bank_v2.sol\":1669:1673  3600 */\n      0x0e10\n        /* \"src/Kipu-Bank_v2.sol\":1626:1673  uint256 public constant ORACLE_HEARTBEAT = 3600 */\n      dup2\n      jump\t// out\n        /* \"src/Kipu-Bank_v2.sol\":2416:2445  uint32 public s_totalDeposits */\n    tag_68:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2368:2471  function renounceOwnership() public virtual onlyOwner {... */\n    tag_73:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      tag_151\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1590  _checkOwner */\n      tag_152\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      jump\t// in\n    tag_151:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2433:2463  _transferOwnership(address(0)) */\n      tag_154\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2460:2461  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2433:2451  _transferOwnership */\n      tag_155\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2433:2463  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_154:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2368:2471  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"src/Kipu-Bank_v2.sol\":9471:9983  function setPriceFeed(address _tokenAddress, address _priceFeedAddress) external onlyOwner {... */\n    tag_78:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      tag_157\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1590  _checkOwner */\n      tag_152\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      jump\t// in\n    tag_157:\n        /* \"src/Kipu-Bank_v2.sol\":9573:9587  uint8 decimals */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":1544:1545  0 */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":9602:9630  _tokenAddress == ETH_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Kipu-Bank_v2.sol\":9602:9615  _tokenAddress */\n      dup4\n        /* \"src/Kipu-Bank_v2.sol\":9602:9630  _tokenAddress == ETH_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/Kipu-Bank_v2.sol\":9598:9756  if (_tokenAddress == ETH_ADDRESS) {... */\n      tag_159\n      jumpi\n        /* \"src/Kipu-Bank_v2.sol\":9658:9660  18 */\n      0x12\n        /* \"src/Kipu-Bank_v2.sol\":9647:9660  decimals = 18 */\n      swap1\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":9598:9756  if (_tokenAddress == ETH_ADDRESS) {... */\n      jump(tag_160)\n    tag_159:\n        /* \"src/Kipu-Bank_v2.sol\":9719:9732  _tokenAddress */\n      dup3\n        /* \"src/Kipu-Bank_v2.sol\":9704:9742  IERC20Metadata(_tokenAddress).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"src/Kipu-Bank_v2.sol\":9704:9744  IERC20Metadata(_tokenAddress).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_163\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"src/Kipu-Bank_v2.sol\":9693:9744  decimals = IERC20Metadata(_tokenAddress).decimals() */\n      swap1\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":9598:9756  if (_tokenAddress == ETH_ADDRESS) {... */\n    tag_160:\n        /* \"src/Kipu-Bank_v2.sol\":9768:9790  TokenInfo memory token */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":9793:9854  TokenInfo({priceFeed: _priceFeedAddress, decimals: decimals}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"src/Kipu-Bank_v2.sol\":9815:9832  _priceFeedAddress */\n      dup5\n        /* \"src/Kipu-Bank_v2.sol\":9793:9854  TokenInfo({priceFeed: _priceFeedAddress, decimals: decimals}) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/Kipu-Bank_v2.sol\":9844:9852  decimals */\n      dup4\n        /* \"src/Kipu-Bank_v2.sol\":9793:9854  TokenInfo({priceFeed: _priceFeedAddress, decimals: decimals}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":9768:9854  TokenInfo memory token = TokenInfo({priceFeed: _priceFeedAddress, decimals: decimals}) */\n      swap1\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":9894:9899  token */\n      dup1\n        /* \"src/Kipu-Bank_v2.sol\":9865:9876  s_tokenInfo */\n      0x04\n        /* \"src/Kipu-Bank_v2.sol\":9865:9891  s_tokenInfo[_tokenAddress] */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":9877:9890  _tokenAddress */\n      dup7\n        /* \"src/Kipu-Bank_v2.sol\":9865:9891  s_tokenInfo[_tokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Kipu-Bank_v2.sol\":9865:9899  s_tokenInfo[_tokenAddress] = token */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":9957:9974  _priceFeedAddress */\n      dup3\n        /* \"src/Kipu-Bank_v2.sol\":9925:9975  PriceFeedUpdated(_tokenAddress, _priceFeedAddress) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Kipu-Bank_v2.sol\":9942:9955  _tokenAddress */\n      dup5\n        /* \"src/Kipu-Bank_v2.sol\":9925:9975  PriceFeedUpdated(_tokenAddress, _priceFeedAddress) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa8abe0398416476db5b05737cd4da3b3cbde5012d978a6a6c3fd49d321753536\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/Kipu-Bank_v2.sol\":9562:9983  {... */\n      pop\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":9471:9983  function setPriceFeed(address _tokenAddress, address _priceFeedAddress) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/Kipu-Bank_v2.sol\":8983:9123  function getMyBalance(address _tokenAddress) external view returns (uint256) {... */\n    tag_82:\n        /* \"src/Kipu-Bank_v2.sol\":9051:9058  uint256 */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":9078:9088  s_balances */\n      0x03\n        /* \"src/Kipu-Bank_v2.sol\":9078:9103  s_balances[_tokenAddress] */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":9089:9102  _tokenAddress */\n      dup4\n        /* \"src/Kipu-Bank_v2.sol\":9078:9103  s_balances[_tokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Kipu-Bank_v2.sol\":9078:9115  s_balances[_tokenAddress][msg.sender] */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":9104:9114  msg.sender */\n      caller\n        /* \"src/Kipu-Bank_v2.sol\":9078:9115  s_balances[_tokenAddress][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/Kipu-Bank_v2.sol\":9071:9115  return s_balances[_tokenAddress][msg.sender] */\n      swap1\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":8983:9123  function getMyBalance(address _tokenAddress) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1693:1780  function owner() public view virtual returns (address) {... */\n    tag_86:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1739:1746  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1766:1772  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1759:1772  return _owner */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1693:1780  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"src/Kipu-Bank_v2.sol\":8527:8807  function withdrawToken(address _tokenAddress, uint256 _amount) external hasSufficientBalance(_tokenAddress, _amount) {... */\n    tag_92:\n        /* \"src/Kipu-Bank_v2.sol\":8620:8633  _tokenAddress */\n      dup2\n        /* \"src/Kipu-Bank_v2.sol\":8635:8642  _amount */\n      dup2\n        /* \"src/Kipu-Bank_v2.sol\":6517:6527  s_balances */\n      0x03\n        /* \"src/Kipu-Bank_v2.sol\":6517:6542  s_balances[_tokenAddress] */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":6528:6541  _tokenAddress */\n      dup4\n        /* \"src/Kipu-Bank_v2.sol\":6517:6542  s_balances[_tokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Kipu-Bank_v2.sol\":6517:6554  s_balances[_tokenAddress][msg.sender] */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":6543:6553  msg.sender */\n      caller\n        /* \"src/Kipu-Bank_v2.sol\":6517:6554  s_balances[_tokenAddress][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/Kipu-Bank_v2.sol\":6507:6514  _amount */\n      dup2\n        /* \"src/Kipu-Bank_v2.sol\":6507:6554  _amount > s_balances[_tokenAddress][msg.sender] */\n      gt\n        /* \"src/Kipu-Bank_v2.sol\":6503:6682  if (_amount > s_balances[_tokenAddress][msg.sender]) {... */\n      iszero\n      tag_168\n      jumpi\n        /* \"src/Kipu-Bank_v2.sol\":6608:6621  _tokenAddress */\n      dup2\n        /* \"src/Kipu-Bank_v2.sol\":6623:6630  _amount */\n      dup2\n        /* \"src/Kipu-Bank_v2.sol\":6632:6642  s_balances */\n      0x03\n        /* \"src/Kipu-Bank_v2.sol\":6632:6657  s_balances[_tokenAddress] */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":6643:6656  _tokenAddress */\n      dup6\n        /* \"src/Kipu-Bank_v2.sol\":6632:6657  s_balances[_tokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Kipu-Bank_v2.sol\":6632:6669  s_balances[_tokenAddress][msg.sender] */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":6658:6668  msg.sender */\n      caller\n        /* \"src/Kipu-Bank_v2.sol\":6632:6669  s_balances[_tokenAddress][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/Kipu-Bank_v2.sol\":6578:6670  KipuBank__InsufficientBalance(_tokenAddress, _amount, s_balances[_tokenAddress][msg.sender]) */\n      mload(0x40)\n      0x5fedab0900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Kipu-Bank_v2.sol\":6503:6682  if (_amount > s_balances[_tokenAddress][msg.sender]) {... */\n    tag_168:\n        /* \"src/Kipu-Bank_v2.sol\":1544:1545  0 */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":8659:8687  _tokenAddress == ETH_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Kipu-Bank_v2.sol\":8659:8672  _tokenAddress */\n      dup5\n        /* \"src/Kipu-Bank_v2.sol\":8659:8687  _tokenAddress == ETH_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/Kipu-Bank_v2.sol\":8655:8744  if (_tokenAddress == ETH_ADDRESS) {... */\n      tag_171\n      jumpi\n        /* \"src/Kipu-Bank_v2.sol\":8711:8732  KipuBank__NotAToken() */\n      mload(0x40)\n      0x7cb522e900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Kipu-Bank_v2.sol\":8655:8744  if (_tokenAddress == ETH_ADDRESS) {... */\n    tag_171:\n        /* \"src/Kipu-Bank_v2.sol\":8754:8799  _withdraw(_tokenAddress, msg.sender, _amount) */\n      tag_172\n        /* \"src/Kipu-Bank_v2.sol\":8764:8777  _tokenAddress */\n      dup5\n        /* \"src/Kipu-Bank_v2.sol\":8779:8789  msg.sender */\n      caller\n        /* \"src/Kipu-Bank_v2.sol\":8791:8798  _amount */\n      dup6\n        /* \"src/Kipu-Bank_v2.sol\":8754:8763  _withdraw */\n      tag_136\n        /* \"src/Kipu-Bank_v2.sol\":8754:8799  _withdraw(_tokenAddress, msg.sender, _amount) */\n      jump\t// in\n    tag_172:\n        /* \"src/Kipu-Bank_v2.sol\":8527:8807  function withdrawToken(address _tokenAddress, uint256 _amount) external hasSufficientBalance(_tokenAddress, _amount) {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Kipu-Bank_v2.sol\":1498:1546  address public constant ETH_ADDRESS = address(0) */\n    tag_95:\n        /* \"src/Kipu-Bank_v2.sol\":1544:1545  0 */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":1498:1546  address public constant ETH_ADDRESS = address(0) */\n      dup2\n      jump\t// out\n        /* \"src/Kipu-Bank_v2.sol\":2223:2263  uint256 public immutable i_withdrawLimit */\n    tag_99:\n      immutable(\"0xfcac3a328906cd87f9d71e44cbced3f71903964f2eaa0b58019ffefc2172c181\")\n      dup2\n      jump\t// out\n        /* \"src/Kipu-Bank_v2.sol\":7340:7477  function deposit() external payable withinBankCap(ETH_ADDRESS, msg.value) {... */\n    tag_102:\n        /* \"src/Kipu-Bank_v2.sol\":1544:1545  0 */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":7403:7412  msg.value */\n      callvalue\n        /* \"src/Kipu-Bank_v2.sol\":5820:5841  uint256 incomingValue */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":5844:5881  getValueInUsd(_tokenAddress, _amount) */\n      tag_174\n        /* \"src/Kipu-Bank_v2.sol\":5858:5871  _tokenAddress */\n      dup4\n        /* \"src/Kipu-Bank_v2.sol\":5873:5880  _amount */\n      dup4\n        /* \"src/Kipu-Bank_v2.sol\":5844:5857  getValueInUsd */\n      tag_123\n        /* \"src/Kipu-Bank_v2.sol\":5844:5881  getValueInUsd(_tokenAddress, _amount) */\n      jump\t// in\n    tag_174:\n        /* \"src/Kipu-Bank_v2.sol\":5820:5881  uint256 incomingValue = getValueInUsd(_tokenAddress, _amount) */\n      swap1\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":5940:5949  i_bankCap */\n      immutable(\"0x7375017ea568916b57e2ed473624235a6147b80f0dede68541a577eedcecf3b8\")\n        /* \"src/Kipu-Bank_v2.sol\":5924:5937  incomingValue */\n      dup2\n        /* \"src/Kipu-Bank_v2.sol\":5906:5921  s_totalUsdValue */\n      sload(0x01)\n        /* \"src/Kipu-Bank_v2.sol\":5906:5937  s_totalUsdValue + incomingValue */\n      tag_175\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_175:\n        /* \"src/Kipu-Bank_v2.sol\":5906:5949  s_totalUsdValue + incomingValue > i_bankCap */\n      gt\n        /* \"src/Kipu-Bank_v2.sol\":5902:6053  if (s_totalUsdValue + incomingValue > i_bankCap) {... */\n      iszero\n      tag_176\n      jumpi\n        /* \"src/Kipu-Bank_v2.sol\":6016:6029  incomingValue */\n      dup1\n        /* \"src/Kipu-Bank_v2.sol\":5998:6013  s_totalUsdValue */\n      sload(0x01)\n        /* \"src/Kipu-Bank_v2.sol\":5998:6029  s_totalUsdValue + incomingValue */\n      tag_177\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_177:\n        /* \"src/Kipu-Bank_v2.sol\":6031:6040  i_bankCap */\n      immutable(\"0x7375017ea568916b57e2ed473624235a6147b80f0dede68541a577eedcecf3b8\")\n        /* \"src/Kipu-Bank_v2.sol\":5973:6041  KipuBank__ExceedsBankCap(s_totalUsdValue + incomingValue, i_bankCap) */\n      mload(0x40)\n      0xf6167f4e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap3\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Kipu-Bank_v2.sol\":5902:6053  if (s_totalUsdValue + incomingValue > i_bankCap) {... */\n    tag_176:\n        /* \"src/Kipu-Bank_v2.sol\":7425:7469  _deposit(ETH_ADDRESS, msg.sender, msg.value) */\n      tag_180\n        /* \"src/Kipu-Bank_v2.sol\":1544:1545  0 */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":7447:7457  msg.sender */\n      caller\n        /* \"src/Kipu-Bank_v2.sol\":7459:7468  msg.value */\n      callvalue\n        /* \"src/Kipu-Bank_v2.sol\":7425:7433  _deposit */\n      tag_149\n        /* \"src/Kipu-Bank_v2.sol\":7425:7469  _deposit(ETH_ADDRESS, msg.sender, msg.value) */\n      jump\t// in\n    tag_180:\n        /* \"src/Kipu-Bank_v2.sol\":5809:6072  {... */\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":7340:7477  function deposit() external payable withinBankCap(ETH_ADDRESS, msg.value) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/Kipu-Bank_v2.sol\":3085:3150  mapping(address => mapping(address => uint256)) public s_balances */\n    tag_106:\n      mstore(0x20, 0x03)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2626:2846  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_111:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      tag_182\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1590  _checkOwner */\n      tag_152\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      jump\t// in\n    tag_182:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2731:2732  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2711:2733  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2711:2719  newOwner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2711:2733  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2707:2800  if (newOwner == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2785:2786  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2757:2788  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2707:2800  if (newOwner == address(0)) {... */\n    tag_184:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2810:2838  _transferOwnership(newOwner) */\n      tag_186\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2829:2837  newOwner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2810:2828  _transferOwnership */\n      tag_155\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2810:2838  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_186:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2626:2846  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"src/Kipu-Bank_v2.sol\":2510:2542  uint32 public s_totalWithdrawals */\n    tag_114:\n      0x02\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/Kipu-Bank_v2.sol\":2107:2141  uint256 public immutable i_bankCap */\n    tag_118:\n      immutable(\"0x7375017ea568916b57e2ed473624235a6147b80f0dede68541a577eedcecf3b8\")\n      dup2\n      jump\t// out\n        /* \"src/Kipu-Bank_v2.sol\":10466:11275  function getValueInUsd(address _tokenAddress, uint256 _amount) public view returns (uint256) {... */\n    tag_123:\n        /* \"src/Kipu-Bank_v2.sol\":10550:10557  uint256 */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":10570:10592  TokenInfo memory token */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":10595:10606  s_tokenInfo */\n      0x04\n        /* \"src/Kipu-Bank_v2.sol\":10595:10621  s_tokenInfo[_tokenAddress] */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":10607:10620  _tokenAddress */\n      dup6\n        /* \"src/Kipu-Bank_v2.sol\":10595:10621  s_tokenInfo[_tokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Kipu-Bank_v2.sol\":10570:10621  TokenInfo memory token = s_tokenInfo[_tokenAddress] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":10673:10674  0 */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":10646:10675  token.priceFeed == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Kipu-Bank_v2.sol\":10646:10651  token */\n      dup2\n        /* \"src/Kipu-Bank_v2.sol\":10646:10661  token.priceFeed */\n      0x00\n      add\n      mload\n        /* \"src/Kipu-Bank_v2.sol\":10646:10675  token.priceFeed == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/Kipu-Bank_v2.sol\":10642:10751  if (token.priceFeed == address(0)) {... */\n      tag_188\n      jumpi\n        /* \"src/Kipu-Bank_v2.sol\":10725:10738  _tokenAddress */\n      dup4\n        /* \"src/Kipu-Bank_v2.sol\":10699:10739  KipuBank__PriceFeedNotSet(_tokenAddress) */\n      mload(0x40)\n      0xc25bec5600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Kipu-Bank_v2.sol\":10642:10751  if (token.priceFeed == address(0)) {... */\n    tag_188:\n        /* \"src/Kipu-Bank_v2.sol\":10771:10802  AggregatorV3Interface priceFeed */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":10827:10832  token */\n      dup2\n        /* \"src/Kipu-Bank_v2.sol\":10827:10842  token.priceFeed */\n      0x00\n      add\n      mload\n        /* \"src/Kipu-Bank_v2.sol\":10771:10843  AggregatorV3Interface priceFeed = AggregatorV3Interface(token.priceFeed) */\n      swap1\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":10857:10869  int256 price */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":10873:10890  uint256 updatedAt */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":10896:10905  priceFeed */\n      dup3\n        /* \"src/Kipu-Bank_v2.sol\":10896:10921  priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"src/Kipu-Bank_v2.sol\":10896:10923  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_191\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_192\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"src/Kipu-Bank_v2.sol\":10854:10923  (, int256 price, , uint256 updatedAt, ) = priceFeed.latestRoundData() */\n      pop\n      swap4\n      pop\n      pop\n      swap3\n      pop\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":10949:10950  0 */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":10940:10945  price */\n      dup3\n        /* \"src/Kipu-Bank_v2.sol\":10940:10950  price <= 0 */\n      sgt\n        /* \"src/Kipu-Bank_v2.sol\":10936:11015  if (price <= 0) {... */\n      tag_194\n      jumpi\n        /* \"src/Kipu-Bank_v2.sol\":10974:11003  KipuBank__OracleCompromised() */\n      mload(0x40)\n      0x780cfa4700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Kipu-Bank_v2.sol\":10936:11015  if (price <= 0) {... */\n    tag_194:\n        /* \"src/Kipu-Bank_v2.sol\":1669:1673  3600 */\n      0x0e10\n        /* \"src/Kipu-Bank_v2.sol\":11047:11056  updatedAt */\n      dup2\n        /* \"src/Kipu-Bank_v2.sol\":11029:11044  block.timestamp */\n      timestamp\n        /* \"src/Kipu-Bank_v2.sol\":11029:11056  block.timestamp - updatedAt */\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"src/Kipu-Bank_v2.sol\":11029:11075  block.timestamp - updatedAt > ORACLE_HEARTBEAT */\n      gt\n        /* \"src/Kipu-Bank_v2.sol\":11025:11133  if (block.timestamp - updatedAt > ORACLE_HEARTBEAT) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"src/Kipu-Bank_v2.sol\":11099:11121  KipuBank__StalePrice() */\n      mload(0x40)\n      0x71a821df00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Kipu-Bank_v2.sol\":11025:11133  if (block.timestamp - updatedAt > ORACLE_HEARTBEAT) {... */\n    tag_197:\n        /* \"src/Kipu-Bank_v2.sol\":11251:11256  token */\n      dup4\n        /* \"src/Kipu-Bank_v2.sol\":11251:11265  token.decimals */\n      0x20\n      add\n      mload\n        /* \"src/Kipu-Bank_v2.sol\":11243:11266  uint256(token.decimals) */\n      0xff\n      and\n        /* \"src/Kipu-Bank_v2.sol\":11239:11241  10 */\n      0x0a\n        /* \"src/Kipu-Bank_v2.sol\":11239:11266  10**uint256(token.decimals) */\n      tag_198\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"src/Kipu-Bank_v2.sol\":11228:11233  price */\n      dup3\n        /* \"src/Kipu-Bank_v2.sol\":11210:11217  _amount */\n      dup8\n        /* \"src/Kipu-Bank_v2.sol\":11210:11234  _amount * uint256(price) */\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"src/Kipu-Bank_v2.sol\":11209:11267  (_amount * uint256(price)) / (10**uint256(token.decimals)) */\n      tag_202\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"src/Kipu-Bank_v2.sol\":11202:11267  return (_amount * uint256(price)) / (10**uint256(token.decimals)) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":10466:11275  function getValueInUsd(address _tokenAddress, uint256 _amount) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/Kipu-Bank_v2.sol\":12282:12830  function _withdraw(address _tokenAddress, address _user, uint256 _amount) internal nonZeroAmount(_amount) {... */\n    tag_136:\n        /* \"src/Kipu-Bank_v2.sol\":12379:12386  _amount */\n      dup1\n        /* \"src/Kipu-Bank_v2.sol\":6832:6833  0 */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":6821:6828  _amount */\n      dup2\n        /* \"src/Kipu-Bank_v2.sol\":6821:6833  _amount == 0 */\n      sub\n        /* \"src/Kipu-Bank_v2.sol\":6817:6908  if (_amount == 0) {... */\n      tag_205\n      jumpi\n        /* \"src/Kipu-Bank_v2.sol\":6857:6896  KipuBank__AmountMustBeGreaterThanZero() */\n      mload(0x40)\n      0xfa4e609e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Kipu-Bank_v2.sol\":6817:6908  if (_amount == 0) {... */\n    tag_205:\n        /* \"src/Kipu-Bank_v2.sol\":12435:12442  _amount */\n      dup2\n        /* \"src/Kipu-Bank_v2.sol\":12399:12409  s_balances */\n      0x03\n        /* \"src/Kipu-Bank_v2.sol\":12399:12424  s_balances[_tokenAddress] */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":12410:12423  _tokenAddress */\n      dup7\n        /* \"src/Kipu-Bank_v2.sol\":12399:12424  s_balances[_tokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Kipu-Bank_v2.sol\":12399:12431  s_balances[_tokenAddress][_user] */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":12425:12430  _user */\n      dup6\n        /* \"src/Kipu-Bank_v2.sol\":12399:12431  s_balances[_tokenAddress][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":12399:12442  s_balances[_tokenAddress][_user] -= _amount */\n      dup3\n      dup3\n      sload\n      tag_207\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_207:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":12453:12475  _updateCounters(false) */\n      tag_208\n        /* \"src/Kipu-Bank_v2.sol\":12469:12474  false */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":12453:12468  _updateCounters */\n      tag_209\n        /* \"src/Kipu-Bank_v2.sol\":12453:12475  _updateCounters(false) */\n      jump\t// in\n    tag_208:\n        /* \"src/Kipu-Bank_v2.sol\":12488:12501  uint256 value */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":12504:12541  getValueInUsd(_tokenAddress, _amount) */\n      tag_210\n        /* \"src/Kipu-Bank_v2.sol\":12518:12531  _tokenAddress */\n      dup6\n        /* \"src/Kipu-Bank_v2.sol\":12533:12540  _amount */\n      dup5\n        /* \"src/Kipu-Bank_v2.sol\":12504:12517  getValueInUsd */\n      tag_123\n        /* \"src/Kipu-Bank_v2.sol\":12504:12541  getValueInUsd(_tokenAddress, _amount) */\n      jump\t// in\n    tag_210:\n        /* \"src/Kipu-Bank_v2.sol\":12488:12541  uint256 value = getValueInUsd(_tokenAddress, _amount) */\n      swap1\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":12571:12576  value */\n      dup1\n        /* \"src/Kipu-Bank_v2.sol\":12552:12567  s_totalUsdValue */\n      0x01\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":12552:12576  s_totalUsdValue -= value */\n      dup3\n      dup3\n      sload\n      tag_211\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_211:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":1544:1545  0 */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":12593:12621  _tokenAddress == ETH_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Kipu-Bank_v2.sol\":12593:12606  _tokenAddress */\n      dup6\n        /* \"src/Kipu-Bank_v2.sol\":12593:12621  _tokenAddress == ETH_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/Kipu-Bank_v2.sol\":12589:12765  if (_tokenAddress == ETH_ADDRESS) {... */\n      tag_212\n      jumpi\n        /* \"src/Kipu-Bank_v2.sol\":12638:12670  _safeTransferEth(_user, _amount) */\n      tag_213\n        /* \"src/Kipu-Bank_v2.sol\":12655:12660  _user */\n      dup5\n        /* \"src/Kipu-Bank_v2.sol\":12662:12669  _amount */\n      dup5\n        /* \"src/Kipu-Bank_v2.sol\":12638:12654  _safeTransferEth */\n      tag_214\n        /* \"src/Kipu-Bank_v2.sol\":12638:12670  _safeTransferEth(_user, _amount) */\n      jump\t// in\n    tag_213:\n        /* \"src/Kipu-Bank_v2.sol\":12589:12765  if (_tokenAddress == ETH_ADDRESS) {... */\n      jump(tag_215)\n    tag_212:\n        /* \"src/Kipu-Bank_v2.sol\":12703:12753  IERC20(_tokenAddress).safeTransfer(_user, _amount) */\n      tag_216\n        /* \"src/Kipu-Bank_v2.sol\":12738:12743  _user */\n      dup5\n        /* \"src/Kipu-Bank_v2.sol\":12745:12752  _amount */\n      dup5\n        /* \"src/Kipu-Bank_v2.sol\":12710:12723  _tokenAddress */\n      dup8\n        /* \"src/Kipu-Bank_v2.sol\":12703:12737  IERC20(_tokenAddress).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_217\n      swap1\n        /* \"src/Kipu-Bank_v2.sol\":12703:12753  IERC20(_tokenAddress).safeTransfer(_user, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_216:\n        /* \"src/Kipu-Bank_v2.sol\":12589:12765  if (_tokenAddress == ETH_ADDRESS) {... */\n    tag_215:\n        /* \"src/Kipu-Bank_v2.sol\":12807:12812  _user */\n      dup4\n        /* \"src/Kipu-Bank_v2.sol\":12782:12822  Withdrawn(_tokenAddress, _user, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Kipu-Bank_v2.sol\":12792:12805  _tokenAddress */\n      dup6\n        /* \"src/Kipu-Bank_v2.sol\":12782:12822  Withdrawn(_tokenAddress, _user, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb\n        /* \"src/Kipu-Bank_v2.sol\":12814:12821  _amount */\n      dup6\n        /* \"src/Kipu-Bank_v2.sol\":12782:12822  Withdrawn(_tokenAddress, _user, _amount) */\n      mload(0x40)\n      tag_218\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/Kipu-Bank_v2.sol\":12388:12830  {... */\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":12282:12830  function _withdraw(address _tokenAddress, address _user, uint256 _amount) internal nonZeroAmount(_amount) {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1704:1940  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_147:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1810:1857  _safeTransferFrom(token, from, to, value, true) */\n      tag_220\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1828:1833  token */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1835:1839  from */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1841:1843  to */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1845:1850  value */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1852:1856  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1810:1827  _safeTransferFrom */\n      tag_221\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1810:1857  _safeTransferFrom(token, from, to, value, true) */\n      jump\t// in\n    tag_220:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1805:1933  if (!_safeTransferFrom(token, from, to, value, true)) {... */\n      tag_222\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1914:1919  token */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1881:1921  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1805:1933  if (!_safeTransferFrom(token, from, to, value, true)) {... */\n    tag_222:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1704:1940  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Kipu-Bank_v2.sol\":11736:12094  function _deposit(address _tokenAddress, address _user, uint256 _amount) internal nonZeroAmount(_amount) {... */\n    tag_149:\n        /* \"src/Kipu-Bank_v2.sol\":11832:11839  _amount */\n      dup1\n        /* \"src/Kipu-Bank_v2.sol\":6832:6833  0 */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":6821:6828  _amount */\n      dup2\n        /* \"src/Kipu-Bank_v2.sol\":6821:6833  _amount == 0 */\n      sub\n        /* \"src/Kipu-Bank_v2.sol\":6817:6908  if (_amount == 0) {... */\n      tag_225\n      jumpi\n        /* \"src/Kipu-Bank_v2.sol\":6857:6896  KipuBank__AmountMustBeGreaterThanZero() */\n      mload(0x40)\n      0xfa4e609e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Kipu-Bank_v2.sol\":6817:6908  if (_amount == 0) {... */\n    tag_225:\n        /* \"src/Kipu-Bank_v2.sol\":11888:11895  _amount */\n      dup2\n        /* \"src/Kipu-Bank_v2.sol\":11852:11862  s_balances */\n      0x03\n        /* \"src/Kipu-Bank_v2.sol\":11852:11877  s_balances[_tokenAddress] */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":11863:11876  _tokenAddress */\n      dup7\n        /* \"src/Kipu-Bank_v2.sol\":11852:11877  s_balances[_tokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Kipu-Bank_v2.sol\":11852:11884  s_balances[_tokenAddress][_user] */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":11878:11883  _user */\n      dup6\n        /* \"src/Kipu-Bank_v2.sol\":11852:11884  s_balances[_tokenAddress][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":11852:11895  s_balances[_tokenAddress][_user] += _amount */\n      dup3\n      dup3\n      sload\n      tag_227\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_227:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":11906:11927  _updateCounters(true) */\n      tag_228\n        /* \"src/Kipu-Bank_v2.sol\":11922:11926  true */\n      0x01\n        /* \"src/Kipu-Bank_v2.sol\":11906:11921  _updateCounters */\n      tag_209\n        /* \"src/Kipu-Bank_v2.sol\":11906:11927  _updateCounters(true) */\n      jump\t// in\n    tag_228:\n        /* \"src/Kipu-Bank_v2.sol\":11940:11953  uint256 value */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":11956:11993  getValueInUsd(_tokenAddress, _amount) */\n      tag_229\n        /* \"src/Kipu-Bank_v2.sol\":11970:11983  _tokenAddress */\n      dup6\n        /* \"src/Kipu-Bank_v2.sol\":11985:11992  _amount */\n      dup5\n        /* \"src/Kipu-Bank_v2.sol\":11956:11969  getValueInUsd */\n      tag_123\n        /* \"src/Kipu-Bank_v2.sol\":11956:11993  getValueInUsd(_tokenAddress, _amount) */\n      jump\t// in\n    tag_229:\n        /* \"src/Kipu-Bank_v2.sol\":11940:11993  uint256 value = getValueInUsd(_tokenAddress, _amount) */\n      swap1\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":12023:12028  value */\n      dup1\n        /* \"src/Kipu-Bank_v2.sol\":12004:12019  s_totalUsdValue */\n      0x01\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":12004:12028  s_totalUsdValue += value */\n      dup3\n      dup3\n      sload\n      tag_230\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_230:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":12071:12076  _user */\n      dup4\n        /* \"src/Kipu-Bank_v2.sol\":12046:12086  Deposited(_tokenAddress, _user, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Kipu-Bank_v2.sol\":12056:12069  _tokenAddress */\n      dup6\n        /* \"src/Kipu-Bank_v2.sol\":12046:12086  Deposited(_tokenAddress, _user, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a7\n        /* \"src/Kipu-Bank_v2.sol\":12078:12085  _amount */\n      dup6\n        /* \"src/Kipu-Bank_v2.sol\":12046:12086  Deposited(_tokenAddress, _user, _amount) */\n      mload(0x40)\n      tag_231\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/Kipu-Bank_v2.sol\":11841:12094  {... */\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":11736:12094  function _deposit(address _tokenAddress, address _user, uint256 _amount) internal nonZeroAmount(_amount) {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1858:2024  function _checkOwner() internal view virtual {... */\n    tag_152:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1929:1941  _msgSender() */\n      tag_233\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1929:1939  _msgSender */\n      tag_234\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1929:1941  _msgSender() */\n      jump\t// in\n    tag_233:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1918:1941  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1918:1925  owner() */\n      tag_235\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1918:1923  owner */\n      tag_86\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1918:1925  owner() */\n      jump\t// in\n    tag_235:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1918:1941  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1914:2017  if (owner() != _msgSender()) {... */\n      tag_236\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1992:2004  _msgSender() */\n      tag_237\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1992:2002  _msgSender */\n      tag_234\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1992:2004  _msgSender() */\n      jump\t// in\n    tag_237:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1965:2005  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1914:2017  if (owner() != _msgSender()) {... */\n    tag_236:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1858:2024  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3006:3197  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_155:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3080:3096  address oldOwner */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3099:3105  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3080:3105  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3125:3133  newOwner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3116:3122  _owner */\n      0x00\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3116:3133  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3180:3188  newOwner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3170:3178  oldOwner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3069:3197  {... */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3006:3197  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"src/Kipu-Bank_v2.sol\":13245:13430  function _updateCounters(bool isDeposit) private {... */\n    tag_209:\n        /* \"src/Kipu-Bank_v2.sol\":13309:13318  isDeposit */\n      dup1\n        /* \"src/Kipu-Bank_v2.sol\":13305:13423  if (isDeposit) {... */\n      iszero\n      tag_241\n      jumpi\n        /* \"src/Kipu-Bank_v2.sol\":13354:13355  1 */\n      0x01\n        /* \"src/Kipu-Bank_v2.sol\":13335:13350  s_totalDeposits */\n      0x02\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":13335:13355  s_totalDeposits += 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      tag_242\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":13305:13423  if (isDeposit) {... */\n      jump(tag_244)\n    tag_241:\n        /* \"src/Kipu-Bank_v2.sol\":13410:13411  1 */\n      0x01\n        /* \"src/Kipu-Bank_v2.sol\":13388:13406  s_totalWithdrawals */\n      0x02\n      0x04\n        /* \"src/Kipu-Bank_v2.sol\":13388:13411  s_totalWithdrawals += 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      tag_245\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_245:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":13305:13423  if (isDeposit) {... */\n    tag_244:\n        /* \"src/Kipu-Bank_v2.sol\":13245:13430  function _updateCounters(bool isDeposit) private {... */\n      pop\n      jump\t// out\n        /* \"src/Kipu-Bank_v2.sol\":13554:13768  function _safeTransferEth(address to, uint256 amount) private {... */\n    tag_214:\n        /* \"src/Kipu-Bank_v2.sol\":13628:13637  bool sent */\n      0x00\n        /* \"src/Kipu-Bank_v2.sol\":13643:13645  to */\n      dup3\n        /* \"src/Kipu-Bank_v2.sol\":13643:13650  to.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Kipu-Bank_v2.sol\":13658:13664  amount */\n      dup3\n        /* \"src/Kipu-Bank_v2.sol\":13643:13669  to.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_247\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_251\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_250)\n    tag_251:\n      0x60\n      swap2\n      pop\n    tag_250:\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":13627:13669  (bool sent, ) = to.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":13685:13689  sent */\n      dup1\n        /* \"src/Kipu-Bank_v2.sol\":13680:13761  if (!sent) {... */\n      tag_252\n      jumpi\n        /* \"src/Kipu-Bank_v2.sol\":13738:13740  to */\n      dup3\n        /* \"src/Kipu-Bank_v2.sol\":13742:13748  amount */\n      dup3\n        /* \"src/Kipu-Bank_v2.sol\":13713:13749  KipuBank__TransferFailed(to, amount) */\n      mload(0x40)\n      0xa36a1dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap3\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Kipu-Bank_v2.sol\":13680:13761  if (!sent) {... */\n    tag_252:\n        /* \"src/Kipu-Bank_v2.sol\":13616:13768  {... */\n      pop\n        /* \"src/Kipu-Bank_v2.sol\":13554:13768  function _safeTransferEth(address to, uint256 amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1251:1459  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_217:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1339:1376  _safeTransfer(token, to, value, true) */\n      tag_256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1358  token */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1371:1375  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1339:1352  _safeTransfer */\n      tag_257\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1339:1376  _safeTransfer(token, to, value, true) */\n      jump\t// in\n    tag_256:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1334:1452  if (!_safeTransfer(token, to, value, true)) {... */\n      tag_258\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1433:1438  token */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1400:1440  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1334:1452  if (!_safeTransfer(token, to, value, true)) {... */\n    tag_258:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1251:1459  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10376:11801  function _safeTransferFrom(... */\n    tag_221:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10540:10552  bool success */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10565:10580  bytes4 selector */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10583:10611  IERC20.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10565:10611  bytes4 selector = IERC20.transferFrom.selector */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10681:10685  0x40 */\n      0x40\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10675:10686  mload(0x40) */\n      mload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10713:10721  selector */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10707:10711  0x00 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10700:10722  mstore(0x00, selector) */\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10771:10772  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10767:10773  not(0) */\n      not\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10763:10765  96 */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10759:10774  shr(96, not(0)) */\n      shr\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10753:10757  from */\n      dup8\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10749:10775  and(from, shr(96, not(0))) */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10743:10747  0x04 */\n      0x04\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10736:10776  mstore(0x04, and(from, shr(96, not(0)))) */\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10823:10824  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10819:10825  not(0) */\n      not\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10815:10817  96 */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10811:10826  shr(96, not(0)) */\n      shr\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10807:10809  to */\n      dup7\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10803:10827  and(to, shr(96, not(0))) */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10797:10801  0x24 */\n      0x24\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10790:10828  mstore(0x24, and(to, shr(96, not(0)))) */\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10855:10860  value */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10849:10853  0x44 */\n      0x44\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10842:10861  mstore(0x44, value) */\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10926:10930  0x20 */\n      0x20\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10920:10924  0x00 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10914:10918  0x64 */\n      0x64\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10908:10912  0x00 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10905:10906  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10898:10903  token */\n      dup13\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10891:10896  gas() */\n      gas\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10886:10931  call(gas(), token, 0, 0x00, 0x64, 0x00, 0x20) */\n      call\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10875:10931  success := call(gas(), token, 0, 0x00, 0x64, 0x00, 0x20) */\n      swap3\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11146:11147  1 */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11139:11143  0x00 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11133:11144  mload(0x00) */\n      mload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11130:11148  eq(mload(0x00), 1) */\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11121:11128  success */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11117:11149  and(success, eq(mload(0x00), 1)) */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11107:11723  if iszero(and(success, eq(mload(0x00), 1))) {... */\n      tag_261\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11280:11286  bubble */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11270:11277  success */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11263:11278  iszero(success) */\n      iszero\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11259:11287  and(iszero(success), bubble) */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11256:11424  if and(iszero(success), bubble) {... */\n      iszero\n      tag_262\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11337:11353  returndatasize() */\n      returndatasize\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11331:11335  0x00 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11326:11329  fmp */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11311:11354  returndatacopy(fmp, 0x00, returndatasize()) */\n      returndatacopy\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11388:11404  returndatasize() */\n      returndatasize\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11383:11386  fmp */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11376:11405  revert(fmp, returndatasize()) */\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11256:11424  if and(iszero(success), bubble) {... */\n    tag_262:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11704:11705  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11696:11701  token */\n      dup9\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11684:11702  extcodesize(token) */\n      extcodesize\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11681:11706  gt(extcodesize(token), 0) */\n      gt\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11662:11678  returndatasize() */\n      returndatasize\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11655:11679  iszero(returndatasize()) */\n      iszero\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11651:11707  and(iszero(returndatasize()), gt(extcodesize(token), 0)) */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11642:11649  success */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11638:11708  and(success, and(iszero(returndatasize()), gt(extcodesize(token), 0))) */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11627:11708  success := and(success, and(iszero(returndatasize()), gt(extcodesize(token), 0))) */\n      swap3\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11107:11723  if iszero(and(success, eq(mload(0x00), 1))) {... */\n    tag_261:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11750:11753  fmp */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11744:11748  0x40 */\n      0x40\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11737:11754  mstore(0x40, fmp) */\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11781:11782  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11775:11779  0x60 */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":11768:11783  mstore(0x60, 0) */\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10649:11794  {... */\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":10376:11801  function _safeTransferFrom(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":672:770  function _msgSender() internal view virtual returns (address) {... */\n    tag_234:\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":725:732  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":752:762  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":745:762  return msg.sender */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":672:770  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8548:9816  function _safeTransfer(IERC20 token, address to, uint256 value, bool bubble) private returns (bool success) {... */\n    tag_257:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8642:8654  bool success */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8667:8682  bytes4 selector */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8685:8709  IERC20.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8667:8709  bytes4 selector = IERC20.transfer.selector */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8779:8783  0x40 */\n      0x40\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8773:8784  mload(0x40) */\n      mload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8811:8819  selector */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8805:8809  0x00 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8798:8820  mstore(0x00, selector) */\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8867:8868  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8863:8869  not(0) */\n      not\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8859:8861  96 */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8855:8870  shr(96, not(0)) */\n      shr\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8851:8853  to */\n      dup7\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8847:8871  and(to, shr(96, not(0))) */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8841:8845  0x04 */\n      0x04\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8834:8872  mstore(0x04, and(to, shr(96, not(0)))) */\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8899:8904  value */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8893:8897  0x24 */\n      0x24\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8886:8905  mstore(0x24, value) */\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8970:8974  0x20 */\n      0x20\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8964:8968  0x00 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8958:8962  0x44 */\n      0x44\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8952:8956  0x00 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8949:8950  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8947  token */\n      dup12\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8935:8940  gas() */\n      gas\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8930:8975  call(gas(), token, 0, 0x00, 0x44, 0x00, 0x20) */\n      call\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8919:8975  success := call(gas(), token, 0, 0x00, 0x44, 0x00, 0x20) */\n      swap3\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9190:9191  1 */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9183:9187  0x00 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9177:9188  mload(0x00) */\n      mload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9174:9192  eq(mload(0x00), 1) */\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9165:9172  success */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9161:9193  and(success, eq(mload(0x00), 1)) */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9151:9767  if iszero(and(success, eq(mload(0x00), 1))) {... */\n      tag_265\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9324:9330  bubble */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9314:9321  success */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9307:9322  iszero(success) */\n      iszero\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9303:9331  and(iszero(success), bubble) */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9300:9468  if and(iszero(success), bubble) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9381:9397  returndatasize() */\n      returndatasize\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9375:9379  0x00 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9370:9373  fmp */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9355:9398  returndatacopy(fmp, 0x00, returndatasize()) */\n      returndatacopy\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9432:9448  returndatasize() */\n      returndatasize\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9427:9430  fmp */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9420:9449  revert(fmp, returndatasize()) */\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9300:9468  if and(iszero(success), bubble) {... */\n    tag_266:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9748:9749  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9740:9745  token */\n      dup8\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9728:9746  extcodesize(token) */\n      extcodesize\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9725:9750  gt(extcodesize(token), 0) */\n      gt\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9706:9722  returndatasize() */\n      returndatasize\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9699:9723  iszero(returndatasize()) */\n      iszero\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9695:9751  and(iszero(returndatasize()), gt(extcodesize(token), 0)) */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9686:9693  success */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9682:9752  and(success, and(iszero(returndatasize()), gt(extcodesize(token), 0))) */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9671:9752  success := and(success, and(iszero(returndatasize()), gt(extcodesize(token), 0))) */\n      swap3\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9151:9767  if iszero(and(success, eq(mload(0x00), 1))) {... */\n    tag_265:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9794:9797  fmp */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9788:9792  0x40 */\n      0x40\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":9781:9798  mstore(0x40, fmp) */\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8747:9809  {... */\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8548:9816  function _safeTransfer(IERC20 token, address to, uint256 value, bool bubble) private returns (bool success) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_267:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_268:\n        /* \"#utility.yul\":177:201   */\n      tag_303\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_267\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_40:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_305\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_268\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_270:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      0x00\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_272:\n        /* \"#utility.yul\":842:866   */\n      tag_310\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_267\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      0x00\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_311:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_273:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_313\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_272\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_44:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_316\n      tag_270\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":1118:1237   */\n    tag_315:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_317\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_273\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_274:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_275:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_320\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_274\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_276:\n        /* \"#utility.yul\":1684:1708   */\n      tag_322\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_275\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_323:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_277:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_325\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_276\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2358   */\n    tag_49:\n        /* \"#utility.yul\":1952:1958   */\n      0x00\n        /* \"#utility.yul\":1960:1966   */\n      0x00\n        /* \"#utility.yul\":2009:2011   */\n      0x40\n        /* \"#utility.yul\":1997:2006   */\n      dup4\n        /* \"#utility.yul\":1988:1995   */\n      dup6\n        /* \"#utility.yul\":1984:2007   */\n      sub\n        /* \"#utility.yul\":1980:2012   */\n      slt\n        /* \"#utility.yul\":1977:2096   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":2015:2094   */\n      tag_328\n      tag_270\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":1977:2096   */\n    tag_327:\n        /* \"#utility.yul\":2135:2136   */\n      0x00\n        /* \"#utility.yul\":2160:2213   */\n      tag_329\n        /* \"#utility.yul\":2205:2212   */\n      dup6\n        /* \"#utility.yul\":2196:2202   */\n      dup3\n        /* \"#utility.yul\":2185:2194   */\n      dup7\n        /* \"#utility.yul\":2181:2203   */\n      add\n        /* \"#utility.yul\":2160:2213   */\n      tag_277\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2150:2213   */\n      swap3\n      pop\n        /* \"#utility.yul\":2106:2223   */\n      pop\n        /* \"#utility.yul\":2262:2264   */\n      0x20\n        /* \"#utility.yul\":2288:2341   */\n      tag_330\n        /* \"#utility.yul\":2333:2340   */\n      dup6\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup7\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_273\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2233:2351   */\n      pop\n        /* \"#utility.yul\":1884:2358   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2693   */\n    tag_58:\n        /* \"#utility.yul\":2423:2429   */\n      0x00\n        /* \"#utility.yul\":2472:2474   */\n      0x20\n        /* \"#utility.yul\":2460:2469   */\n      dup3\n        /* \"#utility.yul\":2451:2458   */\n      dup5\n        /* \"#utility.yul\":2447:2470   */\n      sub\n        /* \"#utility.yul\":2443:2475   */\n      slt\n        /* \"#utility.yul\":2440:2559   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":2478:2557   */\n      tag_333\n      tag_270\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2440:2559   */\n    tag_332:\n        /* \"#utility.yul\":2598:2599   */\n      0x00\n        /* \"#utility.yul\":2623:2676   */\n      tag_334\n        /* \"#utility.yul\":2668:2675   */\n      dup5\n        /* \"#utility.yul\":2659:2665   */\n      dup3\n        /* \"#utility.yul\":2648:2657   */\n      dup6\n        /* \"#utility.yul\":2644:2666   */\n      add\n        /* \"#utility.yul\":2623:2676   */\n      tag_277\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":2613:2676   */\n      swap2\n      pop\n        /* \"#utility.yul\":2569:2686   */\n      pop\n        /* \"#utility.yul\":2364:2693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2699:2817   */\n    tag_278:\n        /* \"#utility.yul\":2786:2810   */\n      tag_336\n        /* \"#utility.yul\":2804:2809   */\n      dup2\n        /* \"#utility.yul\":2786:2810   */\n      tag_275\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":2781:2784   */\n      dup3\n        /* \"#utility.yul\":2774:2811   */\n      mstore\n        /* \"#utility.yul\":2699:2817   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2823:2909   */\n    tag_279:\n        /* \"#utility.yul\":2858:2865   */\n      0x00\n        /* \"#utility.yul\":2898:2902   */\n      0xff\n        /* \"#utility.yul\":2891:2896   */\n      dup3\n        /* \"#utility.yul\":2887:2903   */\n      and\n        /* \"#utility.yul\":2876:2903   */\n      swap1\n      pop\n        /* \"#utility.yul\":2823:2909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2915:3027   */\n    tag_280:\n        /* \"#utility.yul\":2998:3020   */\n      tag_339\n        /* \"#utility.yul\":3014:3019   */\n      dup2\n        /* \"#utility.yul\":2998:3020   */\n      tag_279\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":2993:2996   */\n      dup3\n        /* \"#utility.yul\":2986:3021   */\n      mstore\n        /* \"#utility.yul\":2915:3027   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3033:3357   */\n    tag_61:\n        /* \"#utility.yul\":3150:3154   */\n      0x00\n        /* \"#utility.yul\":3188:3190   */\n      0x40\n        /* \"#utility.yul\":3177:3186   */\n      dup3\n        /* \"#utility.yul\":3173:3191   */\n      add\n        /* \"#utility.yul\":3165:3191   */\n      swap1\n      pop\n        /* \"#utility.yul\":3201:3272   */\n      tag_341\n        /* \"#utility.yul\":3269:3270   */\n      0x00\n        /* \"#utility.yul\":3258:3267   */\n      dup4\n        /* \"#utility.yul\":3254:3271   */\n      add\n        /* \"#utility.yul\":3245:3251   */\n      dup6\n        /* \"#utility.yul\":3201:3272   */\n      tag_278\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":3282:3350   */\n      tag_342\n        /* \"#utility.yul\":3346:3348   */\n      0x20\n        /* \"#utility.yul\":3335:3344   */\n      dup4\n        /* \"#utility.yul\":3331:3349   */\n      add\n        /* \"#utility.yul\":3322:3328   */\n      dup5\n        /* \"#utility.yul\":3282:3350   */\n      tag_280\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":3033:3357   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3363:3456   */\n    tag_281:\n        /* \"#utility.yul\":3399:3406   */\n      0x00\n        /* \"#utility.yul\":3439:3449   */\n      0xffffffff\n        /* \"#utility.yul\":3432:3437   */\n      dup3\n        /* \"#utility.yul\":3428:3450   */\n      and\n        /* \"#utility.yul\":3417:3450   */\n      swap1\n      pop\n        /* \"#utility.yul\":3363:3456   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3462:3577   */\n    tag_282:\n        /* \"#utility.yul\":3547:3570   */\n      tag_345\n        /* \"#utility.yul\":3564:3569   */\n      dup2\n        /* \"#utility.yul\":3547:3570   */\n      tag_281\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":3542:3545   */\n      dup3\n        /* \"#utility.yul\":3535:3571   */\n      mstore\n        /* \"#utility.yul\":3462:3577   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3583:3801   */\n    tag_70:\n        /* \"#utility.yul\":3674:3678   */\n      0x00\n        /* \"#utility.yul\":3712:3714   */\n      0x20\n        /* \"#utility.yul\":3701:3710   */\n      dup3\n        /* \"#utility.yul\":3697:3715   */\n      add\n        /* \"#utility.yul\":3689:3715   */\n      swap1\n      pop\n        /* \"#utility.yul\":3725:3794   */\n      tag_347\n        /* \"#utility.yul\":3791:3792   */\n      0x00\n        /* \"#utility.yul\":3780:3789   */\n      dup4\n        /* \"#utility.yul\":3776:3793   */\n      add\n        /* \"#utility.yul\":3767:3773   */\n      dup5\n        /* \"#utility.yul\":3725:3794   */\n      tag_282\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":3583:3801   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3807:4281   */\n    tag_77:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      0x00\n        /* \"#utility.yul\":3932:3934   */\n      0x40\n        /* \"#utility.yul\":3920:3929   */\n      dup4\n        /* \"#utility.yul\":3911:3918   */\n      dup6\n        /* \"#utility.yul\":3907:3930   */\n      sub\n        /* \"#utility.yul\":3903:3935   */\n      slt\n        /* \"#utility.yul\":3900:4019   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":3938:4017   */\n      tag_350\n      tag_270\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":3900:4019   */\n    tag_349:\n        /* \"#utility.yul\":4058:4059   */\n      0x00\n        /* \"#utility.yul\":4083:4136   */\n      tag_351\n        /* \"#utility.yul\":4128:4135   */\n      dup6\n        /* \"#utility.yul\":4119:4125   */\n      dup3\n        /* \"#utility.yul\":4108:4117   */\n      dup7\n        /* \"#utility.yul\":4104:4126   */\n      add\n        /* \"#utility.yul\":4083:4136   */\n      tag_277\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4073:4136   */\n      swap3\n      pop\n        /* \"#utility.yul\":4029:4146   */\n      pop\n        /* \"#utility.yul\":4185:4187   */\n      0x20\n        /* \"#utility.yul\":4211:4264   */\n      tag_352\n        /* \"#utility.yul\":4256:4263   */\n      dup6\n        /* \"#utility.yul\":4247:4253   */\n      dup3\n        /* \"#utility.yul\":4236:4245   */\n      dup7\n        /* \"#utility.yul\":4232:4254   */\n      add\n        /* \"#utility.yul\":4211:4264   */\n      tag_277\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":4201:4264   */\n      swap2\n      pop\n        /* \"#utility.yul\":4156:4274   */\n      pop\n        /* \"#utility.yul\":3807:4281   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4287:4509   */\n    tag_88:\n        /* \"#utility.yul\":4380:4384   */\n      0x00\n        /* \"#utility.yul\":4418:4420   */\n      0x20\n        /* \"#utility.yul\":4407:4416   */\n      dup3\n        /* \"#utility.yul\":4403:4421   */\n      add\n        /* \"#utility.yul\":4395:4421   */\n      swap1\n      pop\n        /* \"#utility.yul\":4431:4502   */\n      tag_354\n        /* \"#utility.yul\":4499:4500   */\n      0x00\n        /* \"#utility.yul\":4488:4497   */\n      dup4\n        /* \"#utility.yul\":4484:4501   */\n      add\n        /* \"#utility.yul\":4475:4481   */\n      dup5\n        /* \"#utility.yul\":4431:4502   */\n      tag_278\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4287:4509   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4847   */\n    tag_129:\n        /* \"#utility.yul\":4636:4640   */\n      0x00\n        /* \"#utility.yul\":4674:4676   */\n      0x40\n        /* \"#utility.yul\":4663:4672   */\n      dup3\n        /* \"#utility.yul\":4659:4677   */\n      add\n        /* \"#utility.yul\":4651:4677   */\n      swap1\n      pop\n        /* \"#utility.yul\":4687:4758   */\n      tag_356\n        /* \"#utility.yul\":4755:4756   */\n      0x00\n        /* \"#utility.yul\":4744:4753   */\n      dup4\n        /* \"#utility.yul\":4740:4757   */\n      add\n        /* \"#utility.yul\":4731:4737   */\n      dup6\n        /* \"#utility.yul\":4687:4758   */\n      tag_268\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4768:4840   */\n      tag_357\n        /* \"#utility.yul\":4836:4838   */\n      0x20\n        /* \"#utility.yul\":4825:4834   */\n      dup4\n        /* \"#utility.yul\":4821:4839   */\n      add\n        /* \"#utility.yul\":4812:4818   */\n      dup5\n        /* \"#utility.yul\":4768:4840   */\n      tag_268\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":4515:4847   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5295   */\n    tag_133:\n        /* \"#utility.yul\":5002:5006   */\n      0x00\n        /* \"#utility.yul\":5040:5042   */\n      0x60\n        /* \"#utility.yul\":5029:5038   */\n      dup3\n        /* \"#utility.yul\":5025:5043   */\n      add\n        /* \"#utility.yul\":5017:5043   */\n      swap1\n      pop\n        /* \"#utility.yul\":5053:5124   */\n      tag_359\n        /* \"#utility.yul\":5121:5122   */\n      0x00\n        /* \"#utility.yul\":5110:5119   */\n      dup4\n        /* \"#utility.yul\":5106:5123   */\n      add\n        /* \"#utility.yul\":5097:5103   */\n      dup7\n        /* \"#utility.yul\":5053:5124   */\n      tag_278\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5134:5206   */\n      tag_360\n        /* \"#utility.yul\":5202:5204   */\n      0x20\n        /* \"#utility.yul\":5191:5200   */\n      dup4\n        /* \"#utility.yul\":5187:5205   */\n      add\n        /* \"#utility.yul\":5178:5184   */\n      dup6\n        /* \"#utility.yul\":5134:5206   */\n      tag_268\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":5216:5288   */\n      tag_361\n        /* \"#utility.yul\":5284:5286   */\n      0x40\n        /* \"#utility.yul\":5273:5282   */\n      dup4\n        /* \"#utility.yul\":5269:5287   */\n      add\n        /* \"#utility.yul\":5260:5266   */\n      dup5\n        /* \"#utility.yul\":5216:5288   */\n      tag_268\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":4853:5295   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5301:5481   */\n    tag_283:\n        /* \"#utility.yul\":5349:5426   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5346:5347   */\n      0x00\n        /* \"#utility.yul\":5339:5427   */\n      mstore\n        /* \"#utility.yul\":5446:5450   */\n      0x11\n        /* \"#utility.yul\":5443:5444   */\n      0x04\n        /* \"#utility.yul\":5436:5451   */\n      mstore\n        /* \"#utility.yul\":5470:5474   */\n      0x24\n        /* \"#utility.yul\":5467:5468   */\n      0x00\n        /* \"#utility.yul\":5460:5475   */\n      revert\n        /* \"#utility.yul\":5487:5678   */\n    tag_140:\n        /* \"#utility.yul\":5527:5530   */\n      0x00\n        /* \"#utility.yul\":5546:5566   */\n      tag_364\n        /* \"#utility.yul\":5564:5565   */\n      dup3\n        /* \"#utility.yul\":5546:5566   */\n      tag_267\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":5541:5566   */\n      swap2\n      pop\n        /* \"#utility.yul\":5580:5600   */\n      tag_365\n        /* \"#utility.yul\":5598:5599   */\n      dup4\n        /* \"#utility.yul\":5580:5600   */\n      tag_267\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5575:5600   */\n      swap3\n      pop\n        /* \"#utility.yul\":5623:5624   */\n      dup3\n        /* \"#utility.yul\":5620:5621   */\n      dup3\n        /* \"#utility.yul\":5616:5625   */\n      add\n        /* \"#utility.yul\":5609:5625   */\n      swap1\n      pop\n        /* \"#utility.yul\":5644:5647   */\n      dup1\n        /* \"#utility.yul\":5641:5642   */\n      dup3\n        /* \"#utility.yul\":5638:5648   */\n      gt\n        /* \"#utility.yul\":5635:5671   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":5651:5669   */\n      tag_367\n      tag_283\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":5635:5671   */\n    tag_366:\n        /* \"#utility.yul\":5487:5678   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5684:5802   */\n    tag_284:\n        /* \"#utility.yul\":5755:5777   */\n      tag_369\n        /* \"#utility.yul\":5771:5776   */\n      dup2\n        /* \"#utility.yul\":5755:5777   */\n      tag_279\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":5748:5753   */\n      dup2\n        /* \"#utility.yul\":5745:5778   */\n      eq\n        /* \"#utility.yul\":5735:5796   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":5792:5793   */\n      0x00\n        /* \"#utility.yul\":5789:5790   */\n      0x00\n        /* \"#utility.yul\":5782:5794   */\n      revert\n        /* \"#utility.yul\":5735:5796   */\n    tag_370:\n        /* \"#utility.yul\":5684:5802   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5808:5947   */\n    tag_285:\n        /* \"#utility.yul\":5863:5868   */\n      0x00\n        /* \"#utility.yul\":5894:5900   */\n      dup2\n        /* \"#utility.yul\":5888:5901   */\n      mload\n        /* \"#utility.yul\":5879:5901   */\n      swap1\n      pop\n        /* \"#utility.yul\":5910:5941   */\n      tag_372\n        /* \"#utility.yul\":5935:5940   */\n      dup2\n        /* \"#utility.yul\":5910:5941   */\n      tag_284\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":5808:5947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5953:6300   */\n    tag_164:\n        /* \"#utility.yul\":6021:6027   */\n      0x00\n        /* \"#utility.yul\":6070:6072   */\n      0x20\n        /* \"#utility.yul\":6058:6067   */\n      dup3\n        /* \"#utility.yul\":6049:6056   */\n      dup5\n        /* \"#utility.yul\":6045:6068   */\n      sub\n        /* \"#utility.yul\":6041:6073   */\n      slt\n        /* \"#utility.yul\":6038:6157   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":6076:6155   */\n      tag_375\n      tag_270\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6038:6157   */\n    tag_374:\n        /* \"#utility.yul\":6196:6197   */\n      0x00\n        /* \"#utility.yul\":6221:6283   */\n      tag_376\n        /* \"#utility.yul\":6275:6282   */\n      dup5\n        /* \"#utility.yul\":6266:6272   */\n      dup3\n        /* \"#utility.yul\":6255:6264   */\n      dup6\n        /* \"#utility.yul\":6251:6273   */\n      add\n        /* \"#utility.yul\":6221:6283   */\n      tag_285\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":6211:6283   */\n      swap2\n      pop\n        /* \"#utility.yul\":6167:6293   */\n      pop\n        /* \"#utility.yul\":5953:6300   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6306:6411   */\n    tag_286:\n        /* \"#utility.yul\":6342:6349   */\n      0x00\n        /* \"#utility.yul\":6382:6404   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":6375:6380   */\n      dup3\n        /* \"#utility.yul\":6371:6405   */\n      and\n        /* \"#utility.yul\":6360:6405   */\n      swap1\n      pop\n        /* \"#utility.yul\":6306:6411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6417:6537   */\n    tag_287:\n        /* \"#utility.yul\":6489:6512   */\n      tag_379\n        /* \"#utility.yul\":6506:6511   */\n      dup2\n        /* \"#utility.yul\":6489:6512   */\n      tag_286\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":6482:6487   */\n      dup2\n        /* \"#utility.yul\":6479:6513   */\n      eq\n        /* \"#utility.yul\":6469:6531   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":6527:6528   */\n      0x00\n        /* \"#utility.yul\":6524:6525   */\n      0x00\n        /* \"#utility.yul\":6517:6529   */\n      revert\n        /* \"#utility.yul\":6469:6531   */\n    tag_380:\n        /* \"#utility.yul\":6417:6537   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6543:6684   */\n    tag_288:\n        /* \"#utility.yul\":6599:6604   */\n      0x00\n        /* \"#utility.yul\":6630:6636   */\n      dup2\n        /* \"#utility.yul\":6624:6637   */\n      mload\n        /* \"#utility.yul\":6615:6637   */\n      swap1\n      pop\n        /* \"#utility.yul\":6646:6678   */\n      tag_382\n        /* \"#utility.yul\":6672:6677   */\n      dup2\n        /* \"#utility.yul\":6646:6678   */\n      tag_287\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":6543:6684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6690:6766   */\n    tag_289:\n        /* \"#utility.yul\":6726:6733   */\n      0x00\n        /* \"#utility.yul\":6755:6760   */\n      dup2\n        /* \"#utility.yul\":6744:6760   */\n      swap1\n      pop\n        /* \"#utility.yul\":6690:6766   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6772:6892   */\n    tag_290:\n        /* \"#utility.yul\":6844:6867   */\n      tag_385\n        /* \"#utility.yul\":6861:6866   */\n      dup2\n        /* \"#utility.yul\":6844:6867   */\n      tag_289\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":6837:6842   */\n      dup2\n        /* \"#utility.yul\":6834:6868   */\n      eq\n        /* \"#utility.yul\":6824:6886   */\n      tag_386\n      jumpi\n        /* \"#utility.yul\":6882:6883   */\n      0x00\n        /* \"#utility.yul\":6879:6880   */\n      0x00\n        /* \"#utility.yul\":6872:6884   */\n      revert\n        /* \"#utility.yul\":6824:6886   */\n    tag_386:\n        /* \"#utility.yul\":6772:6892   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6898:7039   */\n    tag_291:\n        /* \"#utility.yul\":6954:6959   */\n      0x00\n        /* \"#utility.yul\":6985:6991   */\n      dup2\n        /* \"#utility.yul\":6979:6992   */\n      mload\n        /* \"#utility.yul\":6970:6992   */\n      swap1\n      pop\n        /* \"#utility.yul\":7001:7033   */\n      tag_388\n        /* \"#utility.yul\":7027:7032   */\n      dup2\n        /* \"#utility.yul\":7001:7033   */\n      tag_290\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":6898:7039   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7045:7188   */\n    tag_292:\n        /* \"#utility.yul\":7102:7107   */\n      0x00\n        /* \"#utility.yul\":7133:7139   */\n      dup2\n        /* \"#utility.yul\":7127:7140   */\n      mload\n        /* \"#utility.yul\":7118:7140   */\n      swap1\n      pop\n        /* \"#utility.yul\":7149:7182   */\n      tag_390\n        /* \"#utility.yul\":7176:7181   */\n      dup2\n        /* \"#utility.yul\":7149:7182   */\n      tag_272\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":7045:7188   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7194:8165   */\n    tag_193:\n        /* \"#utility.yul\":7297:7303   */\n      0x00\n        /* \"#utility.yul\":7305:7311   */\n      0x00\n        /* \"#utility.yul\":7313:7319   */\n      0x00\n        /* \"#utility.yul\":7321:7327   */\n      0x00\n        /* \"#utility.yul\":7329:7335   */\n      0x00\n        /* \"#utility.yul\":7378:7381   */\n      0xa0\n        /* \"#utility.yul\":7366:7375   */\n      dup7\n        /* \"#utility.yul\":7357:7364   */\n      dup9\n        /* \"#utility.yul\":7353:7376   */\n      sub\n        /* \"#utility.yul\":7349:7382   */\n      slt\n        /* \"#utility.yul\":7346:7466   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":7385:7464   */\n      tag_393\n      tag_270\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":7346:7466   */\n    tag_392:\n        /* \"#utility.yul\":7505:7506   */\n      0x00\n        /* \"#utility.yul\":7530:7593   */\n      tag_394\n        /* \"#utility.yul\":7585:7592   */\n      dup9\n        /* \"#utility.yul\":7576:7582   */\n      dup3\n        /* \"#utility.yul\":7565:7574   */\n      dup10\n        /* \"#utility.yul\":7561:7583   */\n      add\n        /* \"#utility.yul\":7530:7593   */\n      tag_288\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":7520:7593   */\n      swap6\n      pop\n        /* \"#utility.yul\":7476:7603   */\n      pop\n        /* \"#utility.yul\":7642:7644   */\n      0x20\n        /* \"#utility.yul\":7668:7731   */\n      tag_395\n        /* \"#utility.yul\":7723:7730   */\n      dup9\n        /* \"#utility.yul\":7714:7720   */\n      dup3\n        /* \"#utility.yul\":7703:7712   */\n      dup10\n        /* \"#utility.yul\":7699:7721   */\n      add\n        /* \"#utility.yul\":7668:7731   */\n      tag_291\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":7658:7731   */\n      swap5\n      pop\n        /* \"#utility.yul\":7613:7741   */\n      pop\n        /* \"#utility.yul\":7780:7782   */\n      0x40\n        /* \"#utility.yul\":7806:7870   */\n      tag_396\n        /* \"#utility.yul\":7862:7869   */\n      dup9\n        /* \"#utility.yul\":7853:7859   */\n      dup3\n        /* \"#utility.yul\":7842:7851   */\n      dup10\n        /* \"#utility.yul\":7838:7860   */\n      add\n        /* \"#utility.yul\":7806:7870   */\n      tag_292\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":7796:7870   */\n      swap4\n      pop\n        /* \"#utility.yul\":7751:7880   */\n      pop\n        /* \"#utility.yul\":7919:7921   */\n      0x60\n        /* \"#utility.yul\":7945:8009   */\n      tag_397\n        /* \"#utility.yul\":8001:8008   */\n      dup9\n        /* \"#utility.yul\":7992:7998   */\n      dup3\n        /* \"#utility.yul\":7981:7990   */\n      dup10\n        /* \"#utility.yul\":7977:7999   */\n      add\n        /* \"#utility.yul\":7945:8009   */\n      tag_292\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":7935:8009   */\n      swap3\n      pop\n        /* \"#utility.yul\":7890:8019   */\n      pop\n        /* \"#utility.yul\":8058:8061   */\n      0x80\n        /* \"#utility.yul\":8085:8148   */\n      tag_398\n        /* \"#utility.yul\":8140:8147   */\n      dup9\n        /* \"#utility.yul\":8131:8137   */\n      dup3\n        /* \"#utility.yul\":8120:8129   */\n      dup10\n        /* \"#utility.yul\":8116:8138   */\n      add\n        /* \"#utility.yul\":8085:8148   */\n      tag_288\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":8075:8148   */\n      swap2\n      pop\n        /* \"#utility.yul\":8029:8158   */\n      pop\n        /* \"#utility.yul\":7194:8165   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8171:8365   */\n    tag_196:\n        /* \"#utility.yul\":8211:8215   */\n      0x00\n        /* \"#utility.yul\":8231:8251   */\n      tag_400\n        /* \"#utility.yul\":8249:8250   */\n      dup3\n        /* \"#utility.yul\":8231:8251   */\n      tag_267\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":8226:8251   */\n      swap2\n      pop\n        /* \"#utility.yul\":8265:8285   */\n      tag_401\n        /* \"#utility.yul\":8283:8284   */\n      dup4\n        /* \"#utility.yul\":8265:8285   */\n      tag_267\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":8260:8285   */\n      swap3\n      pop\n        /* \"#utility.yul\":8309:8310   */\n      dup3\n        /* \"#utility.yul\":8306:8307   */\n      dup3\n        /* \"#utility.yul\":8302:8311   */\n      sub\n        /* \"#utility.yul\":8294:8311   */\n      swap1\n      pop\n        /* \"#utility.yul\":8333:8334   */\n      dup2\n        /* \"#utility.yul\":8327:8331   */\n      dup2\n        /* \"#utility.yul\":8324:8335   */\n      gt\n        /* \"#utility.yul\":8321:8358   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":8338:8356   */\n      tag_403\n      tag_283\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":8321:8358   */\n    tag_402:\n        /* \"#utility.yul\":8171:8365   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8371:8473   */\n    tag_293:\n        /* \"#utility.yul\":8413:8421   */\n      0x00\n        /* \"#utility.yul\":8460:8465   */\n      dup2\n        /* \"#utility.yul\":8457:8458   */\n      0x01\n        /* \"#utility.yul\":8453:8466   */\n      shr\n        /* \"#utility.yul\":8432:8466   */\n      swap1\n      pop\n        /* \"#utility.yul\":8371:8473   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8479:9327   */\n    tag_294:\n        /* \"#utility.yul\":8540:8545   */\n      0x00\n        /* \"#utility.yul\":8547:8551   */\n      0x00\n        /* \"#utility.yul\":8571:8577   */\n      dup3\n        /* \"#utility.yul\":8562:8577   */\n      swap2\n      pop\n        /* \"#utility.yul\":8595:8600   */\n      dup4\n        /* \"#utility.yul\":8586:8600   */\n      swap1\n      pop\n        /* \"#utility.yul\":8609:9321   */\n    tag_406:\n        /* \"#utility.yul\":8630:8631   */\n      0x01\n        /* \"#utility.yul\":8620:8628   */\n      dup6\n        /* \"#utility.yul\":8617:8632   */\n      gt\n        /* \"#utility.yul\":8609:9321   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":8725:8729   */\n      dup1\n        /* \"#utility.yul\":8720:8723   */\n      dup7\n        /* \"#utility.yul\":8716:8730   */\n      div\n        /* \"#utility.yul\":8710:8714   */\n      dup2\n        /* \"#utility.yul\":8707:8731   */\n      gt\n        /* \"#utility.yul\":8704:8754   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":8734:8752   */\n      tag_410\n      tag_283\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":8704:8754   */\n    tag_409:\n        /* \"#utility.yul\":8784:8785   */\n      0x01\n        /* \"#utility.yul\":8774:8782   */\n      dup6\n        /* \"#utility.yul\":8770:8786   */\n      and\n        /* \"#utility.yul\":8767:9218   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":9199:9203   */\n      dup1\n        /* \"#utility.yul\":9192:9197   */\n      dup3\n        /* \"#utility.yul\":9188:9204   */\n      mul\n        /* \"#utility.yul\":9179:9204   */\n      swap2\n      pop\n        /* \"#utility.yul\":8767:9218   */\n    tag_411:\n        /* \"#utility.yul\":9249:9253   */\n      dup1\n        /* \"#utility.yul\":9243:9247   */\n      dup2\n        /* \"#utility.yul\":9239:9254   */\n      mul\n        /* \"#utility.yul\":9231:9254   */\n      swap1\n      pop\n        /* \"#utility.yul\":9279:9311   */\n      tag_412\n        /* \"#utility.yul\":9302:9310   */\n      dup6\n        /* \"#utility.yul\":9279:9311   */\n      tag_293\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":9267:9311   */\n      swap5\n      pop\n        /* \"#utility.yul\":8609:9321   */\n      jump(tag_406)\n    tag_408:\n        /* \"#utility.yul\":8479:9327   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9333:10406   */\n    tag_295:\n        /* \"#utility.yul\":9387:9392   */\n      0x00\n        /* \"#utility.yul\":9578:9586   */\n      dup3\n        /* \"#utility.yul\":9568:9608   */\n      tag_414\n      jumpi\n        /* \"#utility.yul\":9599:9600   */\n      0x01\n        /* \"#utility.yul\":9590:9600   */\n      swap1\n      pop\n        /* \"#utility.yul\":9601:9606   */\n      jump(tag_413)\n        /* \"#utility.yul\":9568:9608   */\n    tag_414:\n        /* \"#utility.yul\":9627:9631   */\n      dup2\n        /* \"#utility.yul\":9617:9653   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":9644:9645   */\n      0x00\n        /* \"#utility.yul\":9635:9645   */\n      swap1\n      pop\n        /* \"#utility.yul\":9646:9651   */\n      jump(tag_413)\n        /* \"#utility.yul\":9617:9653   */\n    tag_415:\n        /* \"#utility.yul\":9713:9717   */\n      dup2\n        /* \"#utility.yul\":9761:9762   */\n      0x01\n        /* \"#utility.yul\":9756:9783   */\n      dup2\n      eq\n      tag_417\n      jumpi\n        /* \"#utility.yul\":9797:9798   */\n      0x02\n        /* \"#utility.yul\":9792:9983   */\n      dup2\n      eq\n      tag_418\n      jumpi\n        /* \"#utility.yul\":9706:9983   */\n      jump(tag_416)\n        /* \"#utility.yul\":9756:9783   */\n    tag_417:\n        /* \"#utility.yul\":9774:9775   */\n      0x01\n        /* \"#utility.yul\":9765:9775   */\n      swap2\n      pop\n        /* \"#utility.yul\":9776:9781   */\n      pop\n      jump(tag_413)\n        /* \"#utility.yul\":9792:9983   */\n    tag_418:\n        /* \"#utility.yul\":9837:9840   */\n      0xff\n        /* \"#utility.yul\":9827:9835   */\n      dup5\n        /* \"#utility.yul\":9824:9841   */\n      gt\n        /* \"#utility.yul\":9821:9864   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":9844:9862   */\n      tag_420\n      tag_283\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":9821:9864   */\n    tag_419:\n        /* \"#utility.yul\":9893:9901   */\n      dup4\n        /* \"#utility.yul\":9890:9891   */\n      0x02\n        /* \"#utility.yul\":9886:9902   */\n      exp\n        /* \"#utility.yul\":9877:9902   */\n      swap2\n      pop\n        /* \"#utility.yul\":9928:9931   */\n      dup5\n        /* \"#utility.yul\":9921:9926   */\n      dup3\n        /* \"#utility.yul\":9918:9932   */\n      gt\n        /* \"#utility.yul\":9915:9955   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":9935:9953   */\n      tag_422\n      tag_283\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":9915:9955   */\n    tag_421:\n        /* \"#utility.yul\":9968:9973   */\n      pop\n      jump(tag_413)\n        /* \"#utility.yul\":9706:9983   */\n    tag_416:\n      pop\n        /* \"#utility.yul\":10092:10094   */\n      0x20\n        /* \"#utility.yul\":10082:10090   */\n      dup4\n        /* \"#utility.yul\":10079:10095   */\n      lt\n        /* \"#utility.yul\":10073:10076   */\n      0x0133\n        /* \"#utility.yul\":10067:10071   */\n      dup4\n        /* \"#utility.yul\":10064:10077   */\n      lt\n        /* \"#utility.yul\":10060:10096   */\n      and\n        /* \"#utility.yul\":10042:10044   */\n      0x4e\n        /* \"#utility.yul\":10032:10040   */\n      dup5\n        /* \"#utility.yul\":10029:10045   */\n      lt\n        /* \"#utility.yul\":10024:10026   */\n      0x0b\n        /* \"#utility.yul\":10018:10022   */\n      dup5\n        /* \"#utility.yul\":10015:10027   */\n      lt\n        /* \"#utility.yul\":10011:10046   */\n      and\n        /* \"#utility.yul\":9995:10106   */\n      or\n        /* \"#utility.yul\":9992:10238   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":10148:10156   */\n      dup3\n        /* \"#utility.yul\":10142:10146   */\n      dup3\n        /* \"#utility.yul\":10138:10157   */\n      exp\n        /* \"#utility.yul\":10129:10157   */\n      swap1\n      pop\n        /* \"#utility.yul\":10183:10186   */\n      dup4\n        /* \"#utility.yul\":10176:10181   */\n      dup2\n        /* \"#utility.yul\":10173:10187   */\n      gt\n        /* \"#utility.yul\":10170:10210   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":10190:10208   */\n      tag_425\n      tag_283\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":10170:10210   */\n    tag_424:\n        /* \"#utility.yul\":10223:10228   */\n      jump(tag_413)\n        /* \"#utility.yul\":9992:10238   */\n    tag_423:\n        /* \"#utility.yul\":10263:10305   */\n      tag_426\n        /* \"#utility.yul\":10301:10304   */\n      dup5\n        /* \"#utility.yul\":10291:10299   */\n      dup5\n        /* \"#utility.yul\":10285:10289   */\n      dup5\n        /* \"#utility.yul\":10282:10283   */\n      0x01\n        /* \"#utility.yul\":10263:10305   */\n      tag_294\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":10248:10305   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":10337:10341   */\n      dup2\n        /* \"#utility.yul\":10332:10335   */\n      dup5\n        /* \"#utility.yul\":10328:10342   */\n      div\n        /* \"#utility.yul\":10321:10326   */\n      dup2\n        /* \"#utility.yul\":10318:10343   */\n      gt\n        /* \"#utility.yul\":10315:10366   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":10346:10364   */\n      tag_428\n      tag_283\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":10315:10366   */\n    tag_427:\n        /* \"#utility.yul\":10395:10399   */\n      dup2\n        /* \"#utility.yul\":10388:10393   */\n      dup2\n        /* \"#utility.yul\":10384:10400   */\n      mul\n        /* \"#utility.yul\":10375:10400   */\n      swap1\n      pop\n        /* \"#utility.yul\":9333:10406   */\n    tag_413:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10412:10697   */\n    tag_199:\n        /* \"#utility.yul\":10472:10477   */\n      0x00\n        /* \"#utility.yul\":10496:10519   */\n      tag_430\n        /* \"#utility.yul\":10514:10518   */\n      dup3\n        /* \"#utility.yul\":10496:10519   */\n      tag_267\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":10488:10519   */\n      swap2\n      pop\n        /* \"#utility.yul\":10540:10567   */\n      tag_431\n        /* \"#utility.yul\":10558:10566   */\n      dup4\n        /* \"#utility.yul\":10540:10567   */\n      tag_267\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":10528:10567   */\n      swap3\n      pop\n        /* \"#utility.yul\":10586:10690   */\n      tag_432\n        /* \"#utility.yul\":10623:10689   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10613:10621   */\n      dup5\n        /* \"#utility.yul\":10607:10611   */\n      dup5\n        /* \"#utility.yul\":10586:10690   */\n      tag_295\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":10577:10690   */\n      swap1\n      pop\n        /* \"#utility.yul\":10412:10697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10703:11113   */\n    tag_201:\n        /* \"#utility.yul\":10743:10750   */\n      0x00\n        /* \"#utility.yul\":10766:10786   */\n      tag_434\n        /* \"#utility.yul\":10784:10785   */\n      dup3\n        /* \"#utility.yul\":10766:10786   */\n      tag_267\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10761:10786   */\n      swap2\n      pop\n        /* \"#utility.yul\":10800:10820   */\n      tag_435\n        /* \"#utility.yul\":10818:10819   */\n      dup4\n        /* \"#utility.yul\":10800:10820   */\n      tag_267\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":10795:10820   */\n      swap3\n      pop\n        /* \"#utility.yul\":10855:10856   */\n      dup3\n        /* \"#utility.yul\":10852:10853   */\n      dup3\n        /* \"#utility.yul\":10848:10857   */\n      mul\n        /* \"#utility.yul\":10877:10907   */\n      tag_436\n        /* \"#utility.yul\":10895:10906   */\n      dup2\n        /* \"#utility.yul\":10877:10907   */\n      tag_267\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10866:10907   */\n      swap2\n      pop\n        /* \"#utility.yul\":11056:11057   */\n      dup3\n        /* \"#utility.yul\":11047:11054   */\n      dup3\n        /* \"#utility.yul\":11043:11058   */\n      div\n        /* \"#utility.yul\":11040:11041   */\n      dup5\n        /* \"#utility.yul\":11037:11059   */\n      eq\n        /* \"#utility.yul\":11017:11018   */\n      dup4\n        /* \"#utility.yul\":11010:11019   */\n      iszero\n        /* \"#utility.yul\":10990:11073   */\n      or\n        /* \"#utility.yul\":10967:11106   */\n      tag_437\n      jumpi\n        /* \"#utility.yul\":11086:11104   */\n      tag_438\n      tag_283\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":10967:11106   */\n    tag_437:\n        /* \"#utility.yul\":10751:11113   */\n      pop\n        /* \"#utility.yul\":10703:11113   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11119:11299   */\n    tag_296:\n        /* \"#utility.yul\":11167:11244   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11164:11165   */\n      0x00\n        /* \"#utility.yul\":11157:11245   */\n      mstore\n        /* \"#utility.yul\":11264:11268   */\n      0x12\n        /* \"#utility.yul\":11261:11262   */\n      0x04\n        /* \"#utility.yul\":11254:11269   */\n      mstore\n        /* \"#utility.yul\":11288:11292   */\n      0x24\n        /* \"#utility.yul\":11285:11286   */\n      0x00\n        /* \"#utility.yul\":11278:11293   */\n      revert\n        /* \"#utility.yul\":11305:11490   */\n    tag_203:\n        /* \"#utility.yul\":11345:11346   */\n      0x00\n        /* \"#utility.yul\":11362:11382   */\n      tag_441\n        /* \"#utility.yul\":11380:11381   */\n      dup3\n        /* \"#utility.yul\":11362:11382   */\n      tag_267\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":11357:11382   */\n      swap2\n      pop\n        /* \"#utility.yul\":11396:11416   */\n      tag_442\n        /* \"#utility.yul\":11414:11415   */\n      dup4\n        /* \"#utility.yul\":11396:11416   */\n      tag_267\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":11391:11416   */\n      swap3\n      pop\n        /* \"#utility.yul\":11435:11436   */\n      dup3\n        /* \"#utility.yul\":11425:11460   */\n      tag_443\n      jumpi\n        /* \"#utility.yul\":11440:11458   */\n      tag_444\n      tag_296\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":11425:11460   */\n    tag_443:\n        /* \"#utility.yul\":11482:11483   */\n      dup3\n        /* \"#utility.yul\":11479:11480   */\n      dup3\n        /* \"#utility.yul\":11475:11484   */\n      div\n        /* \"#utility.yul\":11470:11484   */\n      swap1\n      pop\n        /* \"#utility.yul\":11305:11490   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11496:11693   */\n    tag_243:\n        /* \"#utility.yul\":11535:11538   */\n      0x00\n        /* \"#utility.yul\":11554:11573   */\n      tag_446\n        /* \"#utility.yul\":11571:11572   */\n      dup3\n        /* \"#utility.yul\":11554:11573   */\n      tag_281\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":11549:11573   */\n      swap2\n      pop\n        /* \"#utility.yul\":11587:11606   */\n      tag_447\n        /* \"#utility.yul\":11604:11605   */\n      dup4\n        /* \"#utility.yul\":11587:11606   */\n      tag_281\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":11582:11606   */\n      swap3\n      pop\n        /* \"#utility.yul\":11629:11630   */\n      dup3\n        /* \"#utility.yul\":11626:11627   */\n      dup3\n        /* \"#utility.yul\":11622:11631   */\n      add\n        /* \"#utility.yul\":11615:11631   */\n      swap1\n      pop\n        /* \"#utility.yul\":11652:11662   */\n      0xffffffff\n        /* \"#utility.yul\":11647:11650   */\n      dup2\n        /* \"#utility.yul\":11644:11663   */\n      gt\n        /* \"#utility.yul\":11641:11686   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":11666:11684   */\n      tag_449\n      tag_283\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":11641:11686   */\n    tag_448:\n        /* \"#utility.yul\":11496:11693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11699:11846   */\n    tag_297:\n        /* \"#utility.yul\":11800:11811   */\n      0x00\n        /* \"#utility.yul\":11837:11840   */\n      dup2\n        /* \"#utility.yul\":11822:11840   */\n      swap1\n      pop\n        /* \"#utility.yul\":11699:11846   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11852:11966   */\n    tag_298:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11972:12370   */\n    tag_299:\n        /* \"#utility.yul\":12131:12134   */\n      0x00\n        /* \"#utility.yul\":12152:12235   */\n      tag_453\n        /* \"#utility.yul\":12233:12234   */\n      0x00\n        /* \"#utility.yul\":12228:12231   */\n      dup4\n        /* \"#utility.yul\":12152:12235   */\n      tag_297\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":12145:12235   */\n      swap2\n      pop\n        /* \"#utility.yul\":12244:12337   */\n      tag_454\n        /* \"#utility.yul\":12333:12336   */\n      dup3\n        /* \"#utility.yul\":12244:12337   */\n      tag_298\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":12362:12363   */\n      0x00\n        /* \"#utility.yul\":12357:12360   */\n      dup3\n        /* \"#utility.yul\":12353:12364   */\n      add\n        /* \"#utility.yul\":12346:12364   */\n      swap1\n      pop\n        /* \"#utility.yul\":11972:12370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12376:12755   */\n    tag_248:\n        /* \"#utility.yul\":12560:12563   */\n      0x00\n        /* \"#utility.yul\":12582:12729   */\n      tag_456\n        /* \"#utility.yul\":12725:12728   */\n      dup3\n        /* \"#utility.yul\":12582:12729   */\n      tag_299\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":12575:12729   */\n      swap2\n      pop\n        /* \"#utility.yul\":12746:12749   */\n      dup2\n        /* \"#utility.yul\":12739:12749   */\n      swap1\n      pop\n        /* \"#utility.yul\":12376:12755   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12761:13093   */\n    tag_254:\n        /* \"#utility.yul\":12882:12886   */\n      0x00\n        /* \"#utility.yul\":12920:12922   */\n      0x40\n        /* \"#utility.yul\":12909:12918   */\n      dup3\n        /* \"#utility.yul\":12905:12923   */\n      add\n        /* \"#utility.yul\":12897:12923   */\n      swap1\n      pop\n        /* \"#utility.yul\":12933:13004   */\n      tag_458\n        /* \"#utility.yul\":13001:13002   */\n      0x00\n        /* \"#utility.yul\":12990:12999   */\n      dup4\n        /* \"#utility.yul\":12986:13003   */\n      add\n        /* \"#utility.yul\":12977:12983   */\n      dup6\n        /* \"#utility.yul\":12933:13004   */\n      tag_278\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":13014:13086   */\n      tag_459\n        /* \"#utility.yul\":13082:13084   */\n      0x20\n        /* \"#utility.yul\":13071:13080   */\n      dup4\n        /* \"#utility.yul\":13067:13085   */\n      add\n        /* \"#utility.yul\":13058:13064   */\n      dup5\n        /* \"#utility.yul\":13014:13086   */\n      tag_268\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":12761:13093   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204f978173d3d9dc9d8161c2c78b234a24c431efa919d509de2c079df8140d1c5164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1027": {
									"entryPoint": null,
									"id": 1027,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_96": {
									"entryPoint": null,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_192": {
									"entryPoint": 201,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256_fromMemory": {
									"entryPoint": 449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 394,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1790:11",
										"nodeType": "YulBlock",
										"src": "0:1790:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:32:11",
													"nodeType": "YulBlock",
													"src": "379:32:11",
													"statements": [
														{
															"nativeSrc": "389:16:11",
															"nodeType": "YulAssignment",
															"src": "389:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:11",
																"nodeType": "YulIdentifier",
																"src": "400:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:77:11"
											},
											{
												"body": {
													"nativeSrc": "460:79:11",
													"nodeType": "YulBlock",
													"src": "460:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:11",
																"nodeType": "YulBlock",
																"src": "517:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:11",
																					"nodeType": "YulLiteral",
																					"src": "526:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:11",
																					"nodeType": "YulLiteral",
																					"src": "529:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:11"
																			},
																			"nativeSrc": "519:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:11"
																		},
																		"nativeSrc": "519:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:11"
																				},
																				"nativeSrc": "490:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:11"
																		},
																		"nativeSrc": "480:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:11"
																},
																"nativeSrc": "473:43:11",
																"nodeType": "YulFunctionCall",
																"src": "473:43:11"
															},
															"nativeSrc": "470:63:11",
															"nodeType": "YulIf",
															"src": "470:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:11",
														"nodeType": "YulTypedName",
														"src": "453:5:11",
														"type": ""
													}
												],
												"src": "417:122:11"
											},
											{
												"body": {
													"nativeSrc": "608:80:11",
													"nodeType": "YulBlock",
													"src": "608:80:11",
													"statements": [
														{
															"nativeSrc": "618:22:11",
															"nodeType": "YulAssignment",
															"src": "618:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:11"
																},
																"nativeSrc": "627:13:11",
																"nodeType": "YulFunctionCall",
																"src": "627:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:11"
																},
																"nativeSrc": "649:33:11",
																"nodeType": "YulFunctionCall",
																"src": "649:33:11"
															},
															"nativeSrc": "649:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:11",
														"nodeType": "YulTypedName",
														"src": "586:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:11",
														"nodeType": "YulTypedName",
														"src": "594:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:11",
														"nodeType": "YulTypedName",
														"src": "602:5:11",
														"type": ""
													}
												],
												"src": "545:143:11"
											},
											{
												"body": {
													"nativeSrc": "788:413:11",
													"nodeType": "YulBlock",
													"src": "788:413:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "834:83:11",
																"nodeType": "YulBlock",
																"src": "834:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "836:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "836:77:11"
																			},
																			"nativeSrc": "836:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "836:79:11"
																		},
																		"nativeSrc": "836:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "836:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "809:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "809:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "818:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "818:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "805:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:11"
																		},
																		"nativeSrc": "805:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "805:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "830:2:11",
																		"nodeType": "YulLiteral",
																		"src": "830:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "801:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "801:3:11"
																},
																"nativeSrc": "801:32:11",
																"nodeType": "YulFunctionCall",
																"src": "801:32:11"
															},
															"nativeSrc": "798:119:11",
															"nodeType": "YulIf",
															"src": "798:119:11"
														},
														{
															"nativeSrc": "927:128:11",
															"nodeType": "YulBlock",
															"src": "927:128:11",
															"statements": [
																{
																	"nativeSrc": "942:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "942:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "956:1:11",
																		"nodeType": "YulLiteral",
																		"src": "956:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "946:6:11",
																			"nodeType": "YulTypedName",
																			"src": "946:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "971:74:11",
																	"nodeType": "YulAssignment",
																	"src": "971:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1017:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1017:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1028:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1028:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1013:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1013:3:11"
																				},
																				"nativeSrc": "1013:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1013:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1037:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1037:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "981:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "981:31:11"
																		},
																		"nativeSrc": "981:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "981:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "971:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "971:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1065:129:11",
															"nodeType": "YulBlock",
															"src": "1065:129:11",
															"statements": [
																{
																	"nativeSrc": "1080:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1080:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1094:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1084:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1084:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1110:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1110:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1156:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1156:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1167:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1167:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1152:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1152:3:11"
																				},
																				"nativeSrc": "1152:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1152:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1176:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1176:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1120:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1120:31:11"
																		},
																		"nativeSrc": "1120:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1120:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1110:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1110:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nativeSrc": "694:507:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "750:9:11",
														"nodeType": "YulTypedName",
														"src": "750:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "761:7:11",
														"nodeType": "YulTypedName",
														"src": "761:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "773:6:11",
														"nodeType": "YulTypedName",
														"src": "773:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "781:6:11",
														"nodeType": "YulTypedName",
														"src": "781:6:11",
														"type": ""
													}
												],
												"src": "694:507:11"
											},
											{
												"body": {
													"nativeSrc": "1252:81:11",
													"nodeType": "YulBlock",
													"src": "1252:81:11",
													"statements": [
														{
															"nativeSrc": "1262:65:11",
															"nodeType": "YulAssignment",
															"src": "1262:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1277:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1277:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1284:42:11",
																		"nodeType": "YulLiteral",
																		"src": "1284:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1273:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1273:3:11"
																},
																"nativeSrc": "1273:54:11",
																"nodeType": "YulFunctionCall",
																"src": "1273:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1262:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1262:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1207:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:11",
														"nodeType": "YulTypedName",
														"src": "1234:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1244:7:11",
														"nodeType": "YulTypedName",
														"src": "1244:7:11",
														"type": ""
													}
												],
												"src": "1207:126:11"
											},
											{
												"body": {
													"nativeSrc": "1384:51:11",
													"nodeType": "YulBlock",
													"src": "1384:51:11",
													"statements": [
														{
															"nativeSrc": "1394:35:11",
															"nodeType": "YulAssignment",
															"src": "1394:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1423:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1423:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1405:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "1405:17:11"
																},
																"nativeSrc": "1405:24:11",
																"nodeType": "YulFunctionCall",
																"src": "1405:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1394:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1394:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1339:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1366:5:11",
														"nodeType": "YulTypedName",
														"src": "1366:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1376:7:11",
														"nodeType": "YulTypedName",
														"src": "1376:7:11",
														"type": ""
													}
												],
												"src": "1339:96:11"
											},
											{
												"body": {
													"nativeSrc": "1506:53:11",
													"nodeType": "YulBlock",
													"src": "1506:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1523:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1523:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1546:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1546:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1528:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "1528:17:11"
																		},
																		"nativeSrc": "1528:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1528:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1516:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:11"
																},
																"nativeSrc": "1516:37:11",
																"nodeType": "YulFunctionCall",
																"src": "1516:37:11"
															},
															"nativeSrc": "1516:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "1516:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1441:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1494:5:11",
														"nodeType": "YulTypedName",
														"src": "1494:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1501:3:11",
														"nodeType": "YulTypedName",
														"src": "1501:3:11",
														"type": ""
													}
												],
												"src": "1441:118:11"
											},
											{
												"body": {
													"nativeSrc": "1663:124:11",
													"nodeType": "YulBlock",
													"src": "1663:124:11",
													"statements": [
														{
															"nativeSrc": "1673:26:11",
															"nodeType": "YulAssignment",
															"src": "1673:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1685:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1685:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1696:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1696:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1681:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1681:3:11"
																},
																"nativeSrc": "1681:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1681:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1673:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1673:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1753:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1753:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1766:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1766:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1777:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1777:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1762:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1762:3:11"
																		},
																		"nativeSrc": "1762:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1762:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1709:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "1709:43:11"
																},
																"nativeSrc": "1709:71:11",
																"nodeType": "YulFunctionCall",
																"src": "1709:71:11"
															},
															"nativeSrc": "1709:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "1709:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1565:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1635:9:11",
														"nodeType": "YulTypedName",
														"src": "1635:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1647:6:11",
														"nodeType": "YulTypedName",
														"src": "1647:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1658:4:11",
														"nodeType": "YulTypedName",
														"src": "1658:4:11",
														"type": ""
													}
												],
												"src": "1565:222:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b5060405161227d38038061227d833981810160405281019061003191906101c1565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610099919061023e565b60405180910390fd5b6100b1816100c960201b60201c565b5081608081815250508060a081815250505050610257565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f819050919050565b6101a08161018e565b81146101aa575f5ffd5b50565b5f815190506101bb81610197565b92915050565b5f5f604083850312156101d7576101d661018a565b5b5f6101e4858286016101ad565b92505060206101f5858286016101ad565b9150509250929050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610228826101ff565b9050919050565b6102388161021e565b82525050565b5f6020820190506102515f83018461022f565b92915050565b60805160a051611fdb6102a25f395f81816105360152818161055f0152610d2401525f81816107180152818161075b01528181610d5701528181610d9a0152610ec20152611fdb5ff3fe608060405260043610610122575f3560e01c80638da5cb5b1161009f578063dccd58e311610063578063dccd58e314610438578063f2fde38b14610474578063f3db702c1461049c578063f6687af7146104c6578063fe3192f6146104f057610180565b80638da5cb5b146103885780639e281a98146103b2578063a734f06e146103da578063c801fb4014610404578063d0e30db01461042e57610180565b80634a83c3b7116100e65780634a83c3b7146102ba57806352963c2b146102e4578063715018a61461030e57806376e11286146103245780637e3ef7cd1461034c57610180565b8063287cc96b146101d95780632e1a7d4d14610203578063338b5dea1461022b5780633b1a4ec414610253578063432017ca1461027d57610180565b36610180573073ffffffffffffffffffffffffffffffffffffffff1663d0e30db06040518163ffffffff1660e01b81526004015f604051808303815f87803b15801561016c575f5ffd5b505af115801561017e573d5f5f3e3d5ffd5b005b3073ffffffffffffffffffffffffffffffffffffffff1663d0e30db06040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156101c5575f5ffd5b505af11580156101d7573d5f5f3e3d5ffd5b005b3480156101e4575f5ffd5b506101ed61052c565b6040516101fa919061189a565b60405180910390f35b34801561020e575f5ffd5b50610229600480360381019061022491906118e1565b610533565b005b348015610236575f5ffd5b50610251600480360381019061024c9190611966565b610707565b005b34801561025e575f5ffd5b5061026761085b565b604051610274919061189a565b60405180910390f35b348015610288575f5ffd5b506102a3600480360381019061029e91906119a4565b610861565b6040516102b19291906119f9565b60405180910390f35b3480156102c5575f5ffd5b506102ce6108ac565b6040516102db919061189a565b60405180910390f35b3480156102ef575f5ffd5b506102f86108b2565b6040516103059190611a3e565b60405180910390f35b348015610319575f5ffd5b506103226108c7565b005b34801561032f575f5ffd5b5061034a60048036038101906103459190611a57565b6108da565b005b348015610357575f5ffd5b50610372600480360381019061036d91906119a4565b610ac5565b60405161037f919061189a565b60405180910390f35b348015610393575f5ffd5b5061039c610b46565b6040516103a99190611a95565b60405180910390f35b3480156103bd575f5ffd5b506103d860048036038101906103d39190611966565b610b6d565b005b3480156103e5575f5ffd5b506103ee610d1e565b6040516103fb9190611a95565b60405180910390f35b34801561040f575f5ffd5b50610418610d22565b604051610425919061189a565b60405180910390f35b610436610d46565b005b348015610443575f5ffd5b5061045e60048036038101906104599190611a57565b610e06565b60405161046b919061189a565b60405180910390f35b34801561047f575f5ffd5b5061049a600480360381019061049591906119a4565b610e26565b005b3480156104a7575f5ffd5b506104b0610eaa565b6040516104bd9190611a3e565b60405180910390f35b3480156104d1575f5ffd5b506104da610ec0565b6040516104e7919061189a565b60405180910390f35b3480156104fb575f5ffd5b5061051660048036038101906105119190611966565b610ee4565b604051610523919061189a565b60405180910390f35b5f47905090565b807f00000000000000000000000000000000000000000000000000000000000000008111156105bb57807f00000000000000000000000000000000000000000000000000000000000000006040517f631019960000000000000000000000000000000000000000000000000000000081526004016105b2929190611aae565b60405180910390fd5b5f8260035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548111156106f657818160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040517f5fedab090000000000000000000000000000000000000000000000000000000081526004016106ed93929190611ad5565b60405180910390fd5b6107015f3386611146565b50505050565b81815f6107148383610ee4565b90507f0000000000000000000000000000000000000000000000000000000000000000816001546107459190611b37565b11156107b757806001546107599190611b37565b7f00000000000000000000000000000000000000000000000000000000000000006040517ff6167f4e0000000000000000000000000000000000000000000000000000000081526004016107ae929190611aae565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361081c576040517f7cb522e900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108493330868873ffffffffffffffffffffffffffffffffffffffff16611316909392919063ffffffff16565b61085485338661136b565b5050505050565b60015481565b6004602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900460ff16905082565b610e1081565b60025f9054906101000a900463ffffffff1681565b6108cf6114ce565b6108d85f611555565b565b6108e26114ce565b5f5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361091f576012905061098f565b8273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610968573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061098c9190611b94565b90505b5f60405180604001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018360ff1681525090508060045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548160ff021916908360ff1602179055509050508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fa8abe0398416476db5b05737cd4da3b3cbde5012d978a6a6c3fd49d32175353660405160405180910390a350505050565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b818160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054811115610ca857818160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040517f5fedab09000000000000000000000000000000000000000000000000000000008152600401610c9f93929190611ad5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d0d576040517f7cb522e900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d18843385611146565b50505050565b5f81565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f345f610d538383610ee4565b90507f000000000000000000000000000000000000000000000000000000000000000081600154610d849190611b37565b1115610df65780600154610d989190611b37565b7f00000000000000000000000000000000000000000000000000000000000000006040517ff6167f4e000000000000000000000000000000000000000000000000000000008152600401610ded929190611aae565b60405180910390fd5b610e015f333461136b565b505050565b6003602052815f5260405f20602052805f5260405f205f91509150505481565b610e2e6114ce565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e9e575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e959190611a95565b60405180910390fd5b610ea781611555565b50565b600260049054906101000a900463ffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f60045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900460ff1660ff1660ff168152505090505f73ffffffffffffffffffffffffffffffffffffffff16815f015173ffffffffffffffffffffffffffffffffffffffff160361101357836040517fc25bec5600000000000000000000000000000000000000000000000000000000815260040161100a9190611a95565b60405180910390fd5b5f815f015190505f5f8273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611065573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110899190611c45565b509350509250505f82136110c9576040517f780cfa4700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e1081426110d89190611cbc565b1115611110576040517f71a821df00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b836020015160ff16600a6111249190611e1e565b82876111309190611e68565b61113a9190611ed6565b94505050505092915050565b805f8103611180576040517ffa4e609e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546112079190611cbc565b925050819055506112175f611616565b5f6112228584610ee4565b90508060015f8282546112359190611cbc565b925050819055505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361127e5761127984846116a4565b6112aa565b6112a984848773ffffffffffffffffffffffffffffffffffffffff166117559092919063ffffffff16565b5b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb85604051611307919061189a565b60405180910390a35050505050565b6113248484848460016117a8565b61136557836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161135c9190611a95565b60405180910390fd5b50505050565b805f81036113a5576040517ffa4e609e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461142c9190611b37565b9250508190555061143d6001611616565b5f6114488584610ee4565b90508060015f82825461145b9190611b37565b925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a7856040516114bf919061189a565b60405180910390a35050505050565b6114d6611819565b73ffffffffffffffffffffffffffffffffffffffff166114f4610b46565b73ffffffffffffffffffffffffffffffffffffffff161461155357611517611819565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161154a9190611a95565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b801561166057600160025f8282829054906101000a900463ffffffff1661163d9190611f06565b92506101000a81548163ffffffff021916908363ffffffff1602179055506116a1565b6001600260048282829054906101000a900463ffffffff166116829190611f06565b92506101000a81548163ffffffff021916908363ffffffff1602179055505b50565b5f8273ffffffffffffffffffffffffffffffffffffffff16826040516116c990611f6a565b5f6040518083038185875af1925050503d805f8114611703576040519150601f19603f3d011682016040523d82523d5f602084013e611708565b606091505b50509050806117505782826040517fa36a1dba000000000000000000000000000000000000000000000000000000008152600401611747929190611f7e565b60405180910390fd5b505050565b6117628383836001611820565b6117a357826040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161179a9190611a95565b60405180910390fd5b505050565b5f5f6323b872dd60e01b9050604051815f525f1960601c87166004525f1960601c86166024528460445260205f60645f5f8c5af1925060015f511483166118065783831516156117fa573d5f823e3d81fd5b5f883b113d1516831692505b806040525f606052505095945050505050565b5f33905090565b5f5f63a9059cbb60e01b9050604051815f525f1960601c86166004528460245260205f60445f5f8b5af1925060015f51148316611874578383151615611868573d5f823e3d81fd5b5f873b113d1516831692505b806040525050949350505050565b5f819050919050565b61189481611882565b82525050565b5f6020820190506118ad5f83018461188b565b92915050565b5f5ffd5b6118c081611882565b81146118ca575f5ffd5b50565b5f813590506118db816118b7565b92915050565b5f602082840312156118f6576118f56118b3565b5b5f611903848285016118cd565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119358261190c565b9050919050565b6119458161192b565b811461194f575f5ffd5b50565b5f813590506119608161193c565b92915050565b5f5f6040838503121561197c5761197b6118b3565b5b5f61198985828601611952565b925050602061199a858286016118cd565b9150509250929050565b5f602082840312156119b9576119b86118b3565b5b5f6119c684828501611952565b91505092915050565b6119d88161192b565b82525050565b5f60ff82169050919050565b6119f3816119de565b82525050565b5f604082019050611a0c5f8301856119cf565b611a1960208301846119ea565b9392505050565b5f63ffffffff82169050919050565b611a3881611a20565b82525050565b5f602082019050611a515f830184611a2f565b92915050565b5f5f60408385031215611a6d57611a6c6118b3565b5b5f611a7a85828601611952565b9250506020611a8b85828601611952565b9150509250929050565b5f602082019050611aa85f8301846119cf565b92915050565b5f604082019050611ac15f83018561188b565b611ace602083018461188b565b9392505050565b5f606082019050611ae85f8301866119cf565b611af5602083018561188b565b611b02604083018461188b565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611b4182611882565b9150611b4c83611882565b9250828201905080821115611b6457611b63611b0a565b5b92915050565b611b73816119de565b8114611b7d575f5ffd5b50565b5f81519050611b8e81611b6a565b92915050565b5f60208284031215611ba957611ba86118b3565b5b5f611bb684828501611b80565b91505092915050565b5f69ffffffffffffffffffff82169050919050565b611bdd81611bbf565b8114611be7575f5ffd5b50565b5f81519050611bf881611bd4565b92915050565b5f819050919050565b611c1081611bfe565b8114611c1a575f5ffd5b50565b5f81519050611c2b81611c07565b92915050565b5f81519050611c3f816118b7565b92915050565b5f5f5f5f5f60a08688031215611c5e57611c5d6118b3565b5b5f611c6b88828901611bea565b9550506020611c7c88828901611c1d565b9450506040611c8d88828901611c31565b9350506060611c9e88828901611c31565b9250506080611caf88828901611bea565b9150509295509295909350565b5f611cc682611882565b9150611cd183611882565b9250828203905081811115611ce957611ce8611b0a565b5b92915050565b5f8160011c9050919050565b5f5f8291508390505b6001851115611d4457808604811115611d2057611d1f611b0a565b5b6001851615611d2f5780820291505b8081029050611d3d85611cef565b9450611d04565b94509492505050565b5f82611d5c5760019050611e17565b81611d69575f9050611e17565b8160018114611d7f5760028114611d8957611db8565b6001915050611e17565b60ff841115611d9b57611d9a611b0a565b5b8360020a915084821115611db257611db1611b0a565b5b50611e17565b5060208310610133831016604e8410600b8410161715611ded5782820a905083811115611de857611de7611b0a565b5b611e17565b611dfa8484846001611cfb565b92509050818404811115611e1157611e10611b0a565b5b81810290505b9392505050565b5f611e2882611882565b9150611e3383611882565b9250611e607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611d4d565b905092915050565b5f611e7282611882565b9150611e7d83611882565b9250828202611e8b81611882565b91508282048414831517611ea257611ea1611b0a565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611ee082611882565b9150611eeb83611882565b925082611efb57611efa611ea9565b5b828204905092915050565b5f611f1082611a20565b9150611f1b83611a20565b9250828201905063ffffffff811115611f3757611f36611b0a565b5b92915050565b5f81905092915050565b50565b5f611f555f83611f3d565b9150611f6082611f47565b5f82019050919050565b5f611f7482611f4a565b9150819050919050565b5f604082019050611f915f8301856119cf565b611f9e602083018461188b565b939250505056fea26469706673582212204f978173d3d9dc9d8161c2c78b234a24c431efa919d509de2c079df8140d1c5164736f6c634300081e0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x227D CODESIZE SUB DUP1 PUSH2 0x227D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1C1 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x23E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0xC9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP POP POP PUSH2 0x257 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0 DUP2 PUSH2 0x18E JUMP JUMPDEST DUP2 EQ PUSH2 0x1AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BB DUP2 PUSH2 0x197 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D7 JUMPI PUSH2 0x1D6 PUSH2 0x18A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E4 DUP6 DUP3 DUP7 ADD PUSH2 0x1AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F5 DUP6 DUP3 DUP7 ADD PUSH2 0x1AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x228 DUP3 PUSH2 0x1FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x238 DUP2 PUSH2 0x21E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x251 PUSH0 DUP4 ADD DUP5 PUSH2 0x22F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1FDB PUSH2 0x2A2 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x536 ADD MSTORE DUP2 DUP2 PUSH2 0x55F ADD MSTORE PUSH2 0xD24 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x718 ADD MSTORE DUP2 DUP2 PUSH2 0x75B ADD MSTORE DUP2 DUP2 PUSH2 0xD57 ADD MSTORE DUP2 DUP2 PUSH2 0xD9A ADD MSTORE PUSH2 0xEC2 ADD MSTORE PUSH2 0x1FDB PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x122 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xDCCD58E3 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xDCCD58E3 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0xF3DB702C EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0xF6687AF7 EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0xFE3192F6 EQ PUSH2 0x4F0 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xA734F06E EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xC801FB40 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x42E JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x4A83C3B7 GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0x4A83C3B7 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x52963C2B EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x76E11286 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x7E3EF7CD EQ PUSH2 0x34C JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x287CC96B EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x338B5DEA EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x3B1A4EC4 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x432017CA EQ PUSH2 0x27D JUMPI PUSH2 0x180 JUMP JUMPDEST CALLDATASIZE PUSH2 0x180 JUMPI ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST STOP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D7 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1ED PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x18E1 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH2 0x707 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x267 PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x19A4 JUMP JUMPDEST PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP3 SWAP2 SWAP1 PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2F8 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x322 PUSH2 0x8C7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x1A57 JUMP JUMPDEST PUSH2 0x8DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x357 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x19A4 JUMP JUMPDEST PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x393 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH2 0xB6D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3EE PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x418 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x436 PUSH2 0xD46 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x45E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x1A57 JUMP JUMPDEST PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x49A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x19A4 JUMP JUMPDEST PUSH2 0xE26 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4B0 PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4DA PUSH2 0xEC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x516 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x511 SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x5BB JUMPI DUP1 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x6310199600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B2 SWAP3 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x6F6 JUMPI DUP2 DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH32 0x5FEDAB0900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x701 PUSH0 CALLER DUP7 PUSH2 0x1146 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP2 DUP2 PUSH0 PUSH2 0x714 DUP4 DUP4 PUSH2 0xEE4 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 PUSH1 0x1 SLOAD PUSH2 0x745 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST GT ISZERO PUSH2 0x7B7 JUMPI DUP1 PUSH1 0x1 SLOAD PUSH2 0x759 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0xF6167F4E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP3 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81C JUMPI PUSH1 0x40 MLOAD PUSH32 0x7CB522E900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x849 CALLER ADDRESS DUP7 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1316 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x854 DUP6 CALLER DUP7 PUSH2 0x136B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0xE10 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x8CF PUSH2 0x14CE JUMP JUMPDEST PUSH2 0x8D8 PUSH0 PUSH2 0x1555 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8E2 PUSH2 0x14CE JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x91F JUMPI PUSH1 0x12 SWAP1 POP PUSH2 0x98F JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x968 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98C SWAP2 SWAP1 PUSH2 0x1B94 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA8ABE0398416476DB5B05737CD4DA3B3CBDE5012D978A6A6C3FD49D321753536 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xCA8 JUMPI DUP2 DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH32 0x5FEDAB0900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x7CB522E900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD18 DUP5 CALLER DUP6 PUSH2 0x1146 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 CALLVALUE PUSH0 PUSH2 0xD53 DUP4 DUP4 PUSH2 0xEE4 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 PUSH1 0x1 SLOAD PUSH2 0xD84 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST GT ISZERO PUSH2 0xDF6 JUMPI DUP1 PUSH1 0x1 SLOAD PUSH2 0xD98 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0xF6167F4E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDED SWAP3 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE01 PUSH0 CALLER CALLVALUE PUSH2 0x136B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE2E PUSH2 0x14CE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE9E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE95 SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA7 DUP2 PUSH2 0x1555 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1013 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0xC25BEC5600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100A SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH0 ADD MLOAD SWAP1 POP PUSH0 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1065 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1089 SWAP2 SWAP1 PUSH2 0x1C45 JUMP JUMPDEST POP SWAP4 POP POP SWAP3 POP POP PUSH0 DUP3 SGT PUSH2 0x10C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x780CFA4700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 DUP2 TIMESTAMP PUSH2 0x10D8 SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST GT ISZERO PUSH2 0x1110 JUMPI PUSH1 0x40 MLOAD PUSH32 0x71A821DF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND PUSH1 0xA PUSH2 0x1124 SWAP2 SWAP1 PUSH2 0x1E1E JUMP JUMPDEST DUP3 DUP8 PUSH2 0x1130 SWAP2 SWAP1 PUSH2 0x1E68 JUMP JUMPDEST PUSH2 0x113A SWAP2 SWAP1 PUSH2 0x1ED6 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x1180 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFA4E609E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1207 SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1217 PUSH0 PUSH2 0x1616 JUMP JUMPDEST PUSH0 PUSH2 0x1222 DUP6 DUP5 PUSH2 0xEE4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1235 SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x127E JUMPI PUSH2 0x1279 DUP5 DUP5 PUSH2 0x16A4 JUMP JUMPDEST PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x12A9 DUP5 DUP5 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1755 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD1C19FBCD4551A5EDFB66D43D2E337C04837AFDA3482B42BDF569A8FCCDAE5FB DUP6 PUSH1 0x40 MLOAD PUSH2 0x1307 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1324 DUP5 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x17A8 JUMP JUMPDEST PUSH2 0x1365 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135C SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x13A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFA4E609E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x142C SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x143D PUSH1 0x1 PUSH2 0x1616 JUMP JUMPDEST PUSH0 PUSH2 0x1448 DUP6 DUP5 PUSH2 0xEE4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x145B SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8752A472E571A816AEA92EEC8DAE9BAF628E840F4929FBCC2D155E6233FF68A7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x14BF SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14D6 PUSH2 0x1819 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14F4 PUSH2 0xB46 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1553 JUMPI PUSH2 0x1517 PUSH2 0x1819 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154A SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1660 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x163D SWAP2 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x16A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x4 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x1682 SWAP2 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x16C9 SWAP1 PUSH2 0x1F6A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1703 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1750 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA36A1DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1747 SWAP3 SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1762 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x17A3 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179A SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 POP PUSH1 0x40 MLOAD DUP2 PUSH0 MSTORE PUSH0 NOT PUSH1 0x60 SHR DUP8 AND PUSH1 0x4 MSTORE PUSH0 NOT PUSH1 0x60 SHR DUP7 AND PUSH1 0x24 MSTORE DUP5 PUSH1 0x44 MSTORE PUSH1 0x20 PUSH0 PUSH1 0x64 PUSH0 PUSH0 DUP13 GAS CALL SWAP3 POP PUSH1 0x1 PUSH0 MLOAD EQ DUP4 AND PUSH2 0x1806 JUMPI DUP4 DUP4 ISZERO AND ISZERO PUSH2 0x17FA JUMPI RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST PUSH0 DUP9 EXTCODESIZE GT RETURNDATASIZE ISZERO AND DUP4 AND SWAP3 POP JUMPDEST DUP1 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x60 MSTORE POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 POP PUSH1 0x40 MLOAD DUP2 PUSH0 MSTORE PUSH0 NOT PUSH1 0x60 SHR DUP7 AND PUSH1 0x4 MSTORE DUP5 PUSH1 0x24 MSTORE PUSH1 0x20 PUSH0 PUSH1 0x44 PUSH0 PUSH0 DUP12 GAS CALL SWAP3 POP PUSH1 0x1 PUSH0 MLOAD EQ DUP4 AND PUSH2 0x1874 JUMPI DUP4 DUP4 ISZERO AND ISZERO PUSH2 0x1868 JUMPI RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST PUSH0 DUP8 EXTCODESIZE GT RETURNDATASIZE ISZERO AND DUP4 AND SWAP3 POP JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1894 DUP2 PUSH2 0x1882 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18AD PUSH0 DUP4 ADD DUP5 PUSH2 0x188B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x18C0 DUP2 PUSH2 0x1882 JUMP JUMPDEST DUP2 EQ PUSH2 0x18CA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18DB DUP2 PUSH2 0x18B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F6 JUMPI PUSH2 0x18F5 PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1903 DUP5 DUP3 DUP6 ADD PUSH2 0x18CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1935 DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1945 DUP2 PUSH2 0x192B JUMP JUMPDEST DUP2 EQ PUSH2 0x194F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1960 DUP2 PUSH2 0x193C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x197C JUMPI PUSH2 0x197B PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1989 DUP6 DUP3 DUP7 ADD PUSH2 0x1952 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x199A DUP6 DUP3 DUP7 ADD PUSH2 0x18CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B9 JUMPI PUSH2 0x19B8 PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19C6 DUP5 DUP3 DUP6 ADD PUSH2 0x1952 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19D8 DUP2 PUSH2 0x192B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19F3 DUP2 PUSH2 0x19DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A0C PUSH0 DUP4 ADD DUP6 PUSH2 0x19CF JUMP JUMPDEST PUSH2 0x1A19 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A38 DUP2 PUSH2 0x1A20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A51 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A6D JUMPI PUSH2 0x1A6C PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A7A DUP6 DUP3 DUP7 ADD PUSH2 0x1952 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A8B DUP6 DUP3 DUP7 ADD PUSH2 0x1952 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA8 PUSH0 DUP4 ADD DUP5 PUSH2 0x19CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AC1 PUSH0 DUP4 ADD DUP6 PUSH2 0x188B JUMP JUMPDEST PUSH2 0x1ACE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x188B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1AE8 PUSH0 DUP4 ADD DUP7 PUSH2 0x19CF JUMP JUMPDEST PUSH2 0x1AF5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x188B JUMP JUMPDEST PUSH2 0x1B02 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x188B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1B41 DUP3 PUSH2 0x1882 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B4C DUP4 PUSH2 0x1882 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B64 JUMPI PUSH2 0x1B63 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B73 DUP2 PUSH2 0x19DE JUMP JUMPDEST DUP2 EQ PUSH2 0x1B7D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B8E DUP2 PUSH2 0x1B6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BA9 JUMPI PUSH2 0x1BA8 PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BB6 DUP5 DUP3 DUP6 ADD PUSH2 0x1B80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BDD DUP2 PUSH2 0x1BBF JUMP JUMPDEST DUP2 EQ PUSH2 0x1BE7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BF8 DUP2 PUSH2 0x1BD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C10 DUP2 PUSH2 0x1BFE JUMP JUMPDEST DUP2 EQ PUSH2 0x1C1A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C2B DUP2 PUSH2 0x1C07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C3F DUP2 PUSH2 0x18B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C5E JUMPI PUSH2 0x1C5D PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C6B DUP9 DUP3 DUP10 ADD PUSH2 0x1BEA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1C7C DUP9 DUP3 DUP10 ADD PUSH2 0x1C1D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1C8D DUP9 DUP3 DUP10 ADD PUSH2 0x1C31 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1C9E DUP9 DUP3 DUP10 ADD PUSH2 0x1C31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1CAF DUP9 DUP3 DUP10 ADD PUSH2 0x1BEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC6 DUP3 PUSH2 0x1882 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD1 DUP4 PUSH2 0x1882 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CE9 JUMPI PUSH2 0x1CE8 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1D44 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1D20 JUMPI PUSH2 0x1D1F PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1D2F JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1D3D DUP6 PUSH2 0x1CEF JUMP JUMPDEST SWAP5 POP PUSH2 0x1D04 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1D5C JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1E17 JUMP JUMPDEST DUP2 PUSH2 0x1D69 JUMPI PUSH0 SWAP1 POP PUSH2 0x1E17 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1D7F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1D89 JUMPI PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1D9B JUMPI PUSH2 0x1D9A PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1DB2 JUMPI PUSH2 0x1DB1 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST POP PUSH2 0x1E17 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1DED JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1DE8 JUMPI PUSH2 0x1DE7 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST PUSH2 0x1E17 JUMP JUMPDEST PUSH2 0x1DFA DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1CFB JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1E11 JUMPI PUSH2 0x1E10 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E28 DUP3 PUSH2 0x1882 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E33 DUP4 PUSH2 0x1882 JUMP JUMPDEST SWAP3 POP PUSH2 0x1E60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1D4D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E72 DUP3 PUSH2 0x1882 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7D DUP4 PUSH2 0x1882 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1E8B DUP2 PUSH2 0x1882 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1EA2 JUMPI PUSH2 0x1EA1 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1EE0 DUP3 PUSH2 0x1882 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EEB DUP4 PUSH2 0x1882 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1EFB JUMPI PUSH2 0x1EFA PUSH2 0x1EA9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F10 DUP3 PUSH2 0x1A20 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1B DUP4 PUSH2 0x1A20 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH4 0xFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F37 JUMPI PUSH2 0x1F36 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1F55 PUSH0 DUP4 PUSH2 0x1F3D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F60 DUP3 PUSH2 0x1F47 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F74 DUP3 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F91 PUSH0 DUP4 ADD DUP6 PUSH2 0x19CF JUMP JUMPDEST PUSH2 0x1F9E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x188B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F SWAP8 DUP2 PUSH20 0xD3D9DC9D8161C2C78B234A24C431EFA919D509DE 0x2C SMOD SWAP14 EXTCALL EQ 0xD SHR MLOAD PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "838:13494:10:-:0;;;5238:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5300:10;1335:1:1;1311:26;;:12;:26;;;1307:97;;1389:1;1361:31;;;;;;;;;;;:::i;:::-;;;;;;;;1307:97;1414:32;1433:12;1414:18;;;:32;;:::i;:::-;1262:192;5335:8:10::1;5323:20;;;;::::0;::::1;5372:14;5354:32;;;;::::0;::::1;5238:156:::0;;838:13494;;3006:191:1;3080:16;3099:6;;;;;;;;;;;3080:25;;3125:8;3116:6;;:17;;;;;;;;;;;;;;;;;;3180:8;3149:40;;3170:8;3149:40;;;;;;;;;;;;3069:128;3006:191;:::o;88:117:11:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:507::-;773:6;781;830:2;818:9;809:7;805:23;801:32;798:119;;;836:79;;:::i;:::-;798:119;956:1;981:64;1037:7;1028:6;1017:9;1013:22;981:64;:::i;:::-;971:74;;927:128;1094:2;1120:64;1176:7;1167:6;1156:9;1152:22;1120:64;:::i;:::-;1110:74;;1065:129;694:507;;;;;:::o;1207:126::-;1244:7;1284:42;1277:5;1273:54;1262:65;;1207:126;;;:::o;1339:96::-;1376:7;1405:24;1423:5;1405:24;:::i;:::-;1394:35;;1339:96;;;:::o;1441:118::-;1528:24;1546:5;1528:24;:::i;:::-;1523:3;1516:37;1441:118;;:::o;1565:222::-;1658:4;1696:2;1685:9;1681:18;1673:26;;1709:71;1777:1;1766:9;1762:17;1753:6;1709:71;:::i;:::-;1565:222;;;;:::o;838:13494:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ETH_ADDRESS_904": {
									"entryPoint": 3358,
									"id": 904,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ORACLE_HEARTBEAT_908": {
									"entryPoint": 2220,
									"id": 908,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1551": {
									"entryPoint": null,
									"id": 1551,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1560": {
									"entryPoint": null,
									"id": 1560,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_130": {
									"entryPoint": 5326,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_deposit_1433": {
									"entryPoint": 4971,
									"id": 1433,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_854": {
									"entryPoint": 6169,
									"id": 854,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeTransferEth_1541": {
									"entryPoint": 5796,
									"id": 1541,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeTransferFrom_818": {
									"entryPoint": 6056,
									"id": 818,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@_safeTransfer_793": {
									"entryPoint": 6176,
									"id": 793,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_transferOwnership_192": {
									"entryPoint": 5461,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateCounters_1514": {
									"entryPoint": 5654,
									"id": 1514,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_withdraw_1495": {
									"entryPoint": 4422,
									"id": 1495,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@depositToken_1178": {
									"entryPoint": 1799,
									"id": 1178,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@deposit_1137": {
									"entryPoint": 3398,
									"id": 1137,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getMyBalance_1243": {
									"entryPoint": 2757,
									"id": 1243,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalEthBalance_1256": {
									"entryPoint": 1324,
									"id": 1256,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getValueInUsd_1390": {
									"entryPoint": 3812,
									"id": 1390,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@i_bankCap_911": {
									"entryPoint": 3776,
									"id": 911,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@i_withdrawLimit_914": {
									"entryPoint": 3362,
									"id": 914,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_113": {
									"entryPoint": 2886,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_144": {
									"entryPoint": 2247,
									"id": 144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_balances_936": {
									"entryPoint": 3590,
									"id": 936,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_tokenInfo_942": {
									"entryPoint": 2145,
									"id": 942,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_totalDeposits_920": {
									"entryPoint": 2226,
									"id": 920,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_totalUsdValue_917": {
									"entryPoint": 2139,
									"id": 917,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_totalWithdrawals_923": {
									"entryPoint": 3754,
									"id": 923,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_467": {
									"entryPoint": 4886,
									"id": 467,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_436": {
									"entryPoint": 5973,
									"id": 436,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setPriceFeed_1307": {
									"entryPoint": 2266,
									"id": 1307,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_172": {
									"entryPoint": 3622,
									"id": 172,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawToken_1227": {
									"entryPoint": 2925,
									"id": 1227,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdraw_1199": {
									"entryPoint": 1331,
									"id": 1199,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 7197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 7146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 7040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 7237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 7060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint32_fromStack": {
									"entryPoint": 6703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8062,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6869,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed": {
									"entryPoint": 6649,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6830,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": 6718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint32": {
									"entryPoint": 7942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 7419,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 7710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 7501,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 7166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 6688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 7103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6922,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7849,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6323,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 7407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 8007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 7175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 7018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 7124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13096:11",
										"nodeType": "YulBlock",
										"src": "0:13096:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:11",
													"nodeType": "YulBlock",
													"src": "52:32:11",
													"statements": [
														{
															"nativeSrc": "62:16:11",
															"nodeType": "YulAssignment",
															"src": "62:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:11",
																"nodeType": "YulIdentifier",
																"src": "73:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:11",
														"nodeType": "YulTypedName",
														"src": "34:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:11",
														"nodeType": "YulTypedName",
														"src": "44:7:11",
														"type": ""
													}
												],
												"src": "7:77:11"
											},
											{
												"body": {
													"nativeSrc": "155:53:11",
													"nodeType": "YulBlock",
													"src": "155:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:11"
																		},
																		"nativeSrc": "177:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:11"
																},
																"nativeSrc": "165:37:11",
																"nodeType": "YulFunctionCall",
																"src": "165:37:11"
															},
															"nativeSrc": "165:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:11",
														"nodeType": "YulTypedName",
														"src": "143:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:11",
														"nodeType": "YulTypedName",
														"src": "150:3:11",
														"type": ""
													}
												],
												"src": "90:118:11"
											},
											{
												"body": {
													"nativeSrc": "312:124:11",
													"nodeType": "YulBlock",
													"src": "312:124:11",
													"statements": [
														{
															"nativeSrc": "322:26:11",
															"nodeType": "YulAssignment",
															"src": "322:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:11",
																		"nodeType": "YulLiteral",
																		"src": "345:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:11"
																},
																"nativeSrc": "330:18:11",
																"nodeType": "YulFunctionCall",
																"src": "330:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:11",
																				"nodeType": "YulLiteral",
																				"src": "426:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:11"
																		},
																		"nativeSrc": "411:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:11"
																},
																"nativeSrc": "358:71:11",
																"nodeType": "YulFunctionCall",
																"src": "358:71:11"
															},
															"nativeSrc": "358:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:11",
														"nodeType": "YulTypedName",
														"src": "284:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:11",
														"nodeType": "YulTypedName",
														"src": "296:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:11",
														"nodeType": "YulTypedName",
														"src": "307:4:11",
														"type": ""
													}
												],
												"src": "214:222:11"
											},
											{
												"body": {
													"nativeSrc": "482:35:11",
													"nodeType": "YulBlock",
													"src": "482:35:11",
													"statements": [
														{
															"nativeSrc": "492:19:11",
															"nodeType": "YulAssignment",
															"src": "492:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:11",
																		"nodeType": "YulLiteral",
																		"src": "508:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:11"
																},
																"nativeSrc": "502:9:11",
																"nodeType": "YulFunctionCall",
																"src": "502:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:11",
														"nodeType": "YulTypedName",
														"src": "475:6:11",
														"type": ""
													}
												],
												"src": "442:75:11"
											},
											{
												"body": {
													"nativeSrc": "612:28:11",
													"nodeType": "YulBlock",
													"src": "612:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:11",
																		"nodeType": "YulLiteral",
																		"src": "629:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:11",
																		"nodeType": "YulLiteral",
																		"src": "632:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:11"
																},
																"nativeSrc": "622:12:11",
																"nodeType": "YulFunctionCall",
																"src": "622:12:11"
															},
															"nativeSrc": "622:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:11"
											},
											{
												"body": {
													"nativeSrc": "735:28:11",
													"nodeType": "YulBlock",
													"src": "735:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:11",
																		"nodeType": "YulLiteral",
																		"src": "752:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:11",
																		"nodeType": "YulLiteral",
																		"src": "755:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:11"
																},
																"nativeSrc": "745:12:11",
																"nodeType": "YulFunctionCall",
																"src": "745:12:11"
															},
															"nativeSrc": "745:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:11"
											},
											{
												"body": {
													"nativeSrc": "812:79:11",
													"nodeType": "YulBlock",
													"src": "812:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:16:11",
																"nodeType": "YulBlock",
																"src": "869:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "878:1:11",
																					"nodeType": "YulLiteral",
																					"src": "878:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "881:1:11",
																					"nodeType": "YulLiteral",
																					"src": "881:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "871:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:11"
																			},
																			"nativeSrc": "871:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:11"
																		},
																		"nativeSrc": "871:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "835:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "860:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "842:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:11"
																				},
																				"nativeSrc": "842:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "832:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:11"
																		},
																		"nativeSrc": "832:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "825:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:11"
																},
																"nativeSrc": "825:43:11",
																"nodeType": "YulFunctionCall",
																"src": "825:43:11"
															},
															"nativeSrc": "822:63:11",
															"nodeType": "YulIf",
															"src": "822:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "769:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "805:5:11",
														"nodeType": "YulTypedName",
														"src": "805:5:11",
														"type": ""
													}
												],
												"src": "769:122:11"
											},
											{
												"body": {
													"nativeSrc": "949:87:11",
													"nodeType": "YulBlock",
													"src": "949:87:11",
													"statements": [
														{
															"nativeSrc": "959:29:11",
															"nodeType": "YulAssignment",
															"src": "959:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "981:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "968:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:11"
																},
																"nativeSrc": "968:20:11",
																"nodeType": "YulFunctionCall",
																"src": "968:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "959:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "997:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:11"
																},
																"nativeSrc": "997:33:11",
																"nodeType": "YulFunctionCall",
																"src": "997:33:11"
															},
															"nativeSrc": "997:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "997:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "897:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "927:6:11",
														"nodeType": "YulTypedName",
														"src": "927:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "935:3:11",
														"nodeType": "YulTypedName",
														"src": "935:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "943:5:11",
														"nodeType": "YulTypedName",
														"src": "943:5:11",
														"type": ""
													}
												],
												"src": "897:139:11"
											},
											{
												"body": {
													"nativeSrc": "1108:263:11",
													"nodeType": "YulBlock",
													"src": "1108:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:11",
																"nodeType": "YulBlock",
																"src": "1154:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:11"
																			},
																			"nativeSrc": "1156:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:11"
																		},
																		"nativeSrc": "1156:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:11"
																		},
																		"nativeSrc": "1125:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:11"
																},
																"nativeSrc": "1121:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:11"
															},
															"nativeSrc": "1118:119:11",
															"nodeType": "YulIf",
															"src": "1118:119:11"
														},
														{
															"nativeSrc": "1247:117:11",
															"nodeType": "YulBlock",
															"src": "1247:117:11",
															"statements": [
																{
																	"nativeSrc": "1262:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:63:11",
																	"nodeType": "YulAssignment",
																	"src": "1291:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1326:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1337:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1322:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:11"
																				},
																				"nativeSrc": "1322:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1346:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1301:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:11"
																		},
																		"nativeSrc": "1301:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1042:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:11",
														"nodeType": "YulTypedName",
														"src": "1078:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:11",
														"nodeType": "YulTypedName",
														"src": "1089:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:11",
														"nodeType": "YulTypedName",
														"src": "1101:6:11",
														"type": ""
													}
												],
												"src": "1042:329:11"
											},
											{
												"body": {
													"nativeSrc": "1422:81:11",
													"nodeType": "YulBlock",
													"src": "1422:81:11",
													"statements": [
														{
															"nativeSrc": "1432:65:11",
															"nodeType": "YulAssignment",
															"src": "1432:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1447:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:42:11",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1443:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:11"
																},
																"nativeSrc": "1443:54:11",
																"nodeType": "YulFunctionCall",
																"src": "1443:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1432:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1377:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1404:5:11",
														"nodeType": "YulTypedName",
														"src": "1404:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1414:7:11",
														"nodeType": "YulTypedName",
														"src": "1414:7:11",
														"type": ""
													}
												],
												"src": "1377:126:11"
											},
											{
												"body": {
													"nativeSrc": "1554:51:11",
													"nodeType": "YulBlock",
													"src": "1554:51:11",
													"statements": [
														{
															"nativeSrc": "1564:35:11",
															"nodeType": "YulAssignment",
															"src": "1564:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1593:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1575:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:11"
																},
																"nativeSrc": "1575:24:11",
																"nodeType": "YulFunctionCall",
																"src": "1575:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1564:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1509:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1536:5:11",
														"nodeType": "YulTypedName",
														"src": "1536:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1546:7:11",
														"nodeType": "YulTypedName",
														"src": "1546:7:11",
														"type": ""
													}
												],
												"src": "1509:96:11"
											},
											{
												"body": {
													"nativeSrc": "1654:79:11",
													"nodeType": "YulBlock",
													"src": "1654:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:11",
																"nodeType": "YulBlock",
																"src": "1711:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:11"
																			},
																			"nativeSrc": "1713:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:11"
																		},
																		"nativeSrc": "1713:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1684:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:11"
																				},
																				"nativeSrc": "1684:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:11"
																		},
																		"nativeSrc": "1674:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:11"
																},
																"nativeSrc": "1667:43:11",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:11"
															},
															"nativeSrc": "1664:63:11",
															"nodeType": "YulIf",
															"src": "1664:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1611:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:11",
														"nodeType": "YulTypedName",
														"src": "1647:5:11",
														"type": ""
													}
												],
												"src": "1611:122:11"
											},
											{
												"body": {
													"nativeSrc": "1791:87:11",
													"nodeType": "YulBlock",
													"src": "1791:87:11",
													"statements": [
														{
															"nativeSrc": "1801:29:11",
															"nodeType": "YulAssignment",
															"src": "1801:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:11"
																},
																"nativeSrc": "1810:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1839:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:11"
																},
																"nativeSrc": "1839:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:11"
															},
															"nativeSrc": "1839:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1739:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:11",
														"nodeType": "YulTypedName",
														"src": "1769:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:11",
														"nodeType": "YulTypedName",
														"src": "1777:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:11",
														"nodeType": "YulTypedName",
														"src": "1785:5:11",
														"type": ""
													}
												],
												"src": "1739:139:11"
											},
											{
												"body": {
													"nativeSrc": "1967:391:11",
													"nodeType": "YulBlock",
													"src": "1967:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2013:83:11",
																"nodeType": "YulBlock",
																"src": "2013:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2015:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2015:77:11"
																			},
																			"nativeSrc": "2015:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2015:79:11"
																		},
																		"nativeSrc": "2015:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2015:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1988:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1988:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1997:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1997:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1984:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:11"
																		},
																		"nativeSrc": "1984:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1984:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2009:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2009:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1980:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1980:3:11"
																},
																"nativeSrc": "1980:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1980:32:11"
															},
															"nativeSrc": "1977:119:11",
															"nodeType": "YulIf",
															"src": "1977:119:11"
														},
														{
															"nativeSrc": "2106:117:11",
															"nodeType": "YulBlock",
															"src": "2106:117:11",
															"statements": [
																{
																	"nativeSrc": "2121:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2121:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2135:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2135:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2125:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2125:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2150:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2150:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2185:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2185:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2196:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2196:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2181:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2181:3:11"
																				},
																				"nativeSrc": "2181:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2181:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2205:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2205:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2160:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2160:20:11"
																		},
																		"nativeSrc": "2160:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2160:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2150:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2150:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2233:118:11",
															"nodeType": "YulBlock",
															"src": "2233:118:11",
															"statements": [
																{
																	"nativeSrc": "2248:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2248:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2262:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2262:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2252:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2252:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2278:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2278:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2313:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2324:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2309:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:11"
																				},
																				"nativeSrc": "2309:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2333:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2288:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:11"
																		},
																		"nativeSrc": "2288:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2278:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1884:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1929:9:11",
														"nodeType": "YulTypedName",
														"src": "1929:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1940:7:11",
														"nodeType": "YulTypedName",
														"src": "1940:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1952:6:11",
														"nodeType": "YulTypedName",
														"src": "1952:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1960:6:11",
														"nodeType": "YulTypedName",
														"src": "1960:6:11",
														"type": ""
													}
												],
												"src": "1884:474:11"
											},
											{
												"body": {
													"nativeSrc": "2430:263:11",
													"nodeType": "YulBlock",
													"src": "2430:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2476:83:11",
																"nodeType": "YulBlock",
																"src": "2476:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2478:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2478:77:11"
																			},
																			"nativeSrc": "2478:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2478:79:11"
																		},
																		"nativeSrc": "2478:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2478:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2451:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2451:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2460:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2460:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2447:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2447:3:11"
																		},
																		"nativeSrc": "2447:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2447:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2472:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2472:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2443:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2443:3:11"
																},
																"nativeSrc": "2443:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2443:32:11"
															},
															"nativeSrc": "2440:119:11",
															"nodeType": "YulIf",
															"src": "2440:119:11"
														},
														{
															"nativeSrc": "2569:117:11",
															"nodeType": "YulBlock",
															"src": "2569:117:11",
															"statements": [
																{
																	"nativeSrc": "2584:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2584:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2598:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2598:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2588:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2588:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2613:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2613:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2648:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2648:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2659:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2659:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2644:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2644:3:11"
																				},
																				"nativeSrc": "2644:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2644:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2668:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2668:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2623:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2623:20:11"
																		},
																		"nativeSrc": "2623:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2623:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2613:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2613:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2364:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2400:9:11",
														"nodeType": "YulTypedName",
														"src": "2400:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2411:7:11",
														"nodeType": "YulTypedName",
														"src": "2411:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2423:6:11",
														"nodeType": "YulTypedName",
														"src": "2423:6:11",
														"type": ""
													}
												],
												"src": "2364:329:11"
											},
											{
												"body": {
													"nativeSrc": "2764:53:11",
													"nodeType": "YulBlock",
													"src": "2764:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2781:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2781:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2804:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2804:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2786:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "2786:17:11"
																		},
																		"nativeSrc": "2786:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2786:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2774:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2774:6:11"
																},
																"nativeSrc": "2774:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2774:37:11"
															},
															"nativeSrc": "2774:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "2774:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2699:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2752:5:11",
														"nodeType": "YulTypedName",
														"src": "2752:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2759:3:11",
														"nodeType": "YulTypedName",
														"src": "2759:3:11",
														"type": ""
													}
												],
												"src": "2699:118:11"
											},
											{
												"body": {
													"nativeSrc": "2866:43:11",
													"nodeType": "YulBlock",
													"src": "2866:43:11",
													"statements": [
														{
															"nativeSrc": "2876:27:11",
															"nodeType": "YulAssignment",
															"src": "2876:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2891:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2891:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2898:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2898:4:11",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2887:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2887:3:11"
																},
																"nativeSrc": "2887:16:11",
																"nodeType": "YulFunctionCall",
																"src": "2887:16:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2876:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2876:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "2823:86:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2848:5:11",
														"nodeType": "YulTypedName",
														"src": "2848:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2858:7:11",
														"nodeType": "YulTypedName",
														"src": "2858:7:11",
														"type": ""
													}
												],
												"src": "2823:86:11"
											},
											{
												"body": {
													"nativeSrc": "2976:51:11",
													"nodeType": "YulBlock",
													"src": "2976:51:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2993:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2993:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3014:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3014:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "2998:15:11",
																			"nodeType": "YulIdentifier",
																			"src": "2998:15:11"
																		},
																		"nativeSrc": "2998:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2998:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2986:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2986:6:11"
																},
																"nativeSrc": "2986:35:11",
																"nodeType": "YulFunctionCall",
																"src": "2986:35:11"
															},
															"nativeSrc": "2986:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "2986:35:11"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "2915:112:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2964:5:11",
														"nodeType": "YulTypedName",
														"src": "2964:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2971:3:11",
														"nodeType": "YulTypedName",
														"src": "2971:3:11",
														"type": ""
													}
												],
												"src": "2915:112:11"
											},
											{
												"body": {
													"nativeSrc": "3155:202:11",
													"nodeType": "YulBlock",
													"src": "3155:202:11",
													"statements": [
														{
															"nativeSrc": "3165:26:11",
															"nodeType": "YulAssignment",
															"src": "3165:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3177:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3177:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3188:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3188:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3173:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3173:3:11"
																},
																"nativeSrc": "3173:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3173:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3165:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3165:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3245:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3245:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3258:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3258:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3269:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3269:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3254:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3254:3:11"
																		},
																		"nativeSrc": "3254:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3254:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3201:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3201:43:11"
																},
																"nativeSrc": "3201:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3201:71:11"
															},
															"nativeSrc": "3201:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3201:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3322:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3322:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3335:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3335:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3346:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3346:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3331:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3331:3:11"
																		},
																		"nativeSrc": "3331:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3331:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "3282:39:11",
																	"nodeType": "YulIdentifier",
																	"src": "3282:39:11"
																},
																"nativeSrc": "3282:68:11",
																"nodeType": "YulFunctionCall",
																"src": "3282:68:11"
															},
															"nativeSrc": "3282:68:11",
															"nodeType": "YulExpressionStatement",
															"src": "3282:68:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed",
												"nativeSrc": "3033:324:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3119:9:11",
														"nodeType": "YulTypedName",
														"src": "3119:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3131:6:11",
														"nodeType": "YulTypedName",
														"src": "3131:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3139:6:11",
														"nodeType": "YulTypedName",
														"src": "3139:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3150:4:11",
														"nodeType": "YulTypedName",
														"src": "3150:4:11",
														"type": ""
													}
												],
												"src": "3033:324:11"
											},
											{
												"body": {
													"nativeSrc": "3407:49:11",
													"nodeType": "YulBlock",
													"src": "3407:49:11",
													"statements": [
														{
															"nativeSrc": "3417:33:11",
															"nodeType": "YulAssignment",
															"src": "3417:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3432:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3432:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3439:10:11",
																		"nodeType": "YulLiteral",
																		"src": "3439:10:11",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3428:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3428:3:11"
																},
																"nativeSrc": "3428:22:11",
																"nodeType": "YulFunctionCall",
																"src": "3428:22:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3417:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "3417:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nativeSrc": "3363:93:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3389:5:11",
														"nodeType": "YulTypedName",
														"src": "3389:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3399:7:11",
														"nodeType": "YulTypedName",
														"src": "3399:7:11",
														"type": ""
													}
												],
												"src": "3363:93:11"
											},
											{
												"body": {
													"nativeSrc": "3525:52:11",
													"nodeType": "YulBlock",
													"src": "3525:52:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3542:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3542:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3564:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3564:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nativeSrc": "3547:16:11",
																			"nodeType": "YulIdentifier",
																			"src": "3547:16:11"
																		},
																		"nativeSrc": "3547:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3547:23:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3535:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3535:6:11"
																},
																"nativeSrc": "3535:36:11",
																"nodeType": "YulFunctionCall",
																"src": "3535:36:11"
															},
															"nativeSrc": "3535:36:11",
															"nodeType": "YulExpressionStatement",
															"src": "3535:36:11"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
												"nativeSrc": "3462:115:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3513:5:11",
														"nodeType": "YulTypedName",
														"src": "3513:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3520:3:11",
														"nodeType": "YulTypedName",
														"src": "3520:3:11",
														"type": ""
													}
												],
												"src": "3462:115:11"
											},
											{
												"body": {
													"nativeSrc": "3679:122:11",
													"nodeType": "YulBlock",
													"src": "3679:122:11",
													"statements": [
														{
															"nativeSrc": "3689:26:11",
															"nodeType": "YulAssignment",
															"src": "3689:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3701:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3701:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3712:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3712:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3697:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3697:3:11"
																},
																"nativeSrc": "3697:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3697:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3689:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3689:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3767:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3767:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3780:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3780:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3791:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3791:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3776:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3776:3:11"
																		},
																		"nativeSrc": "3776:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3776:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
																	"nativeSrc": "3725:41:11",
																	"nodeType": "YulIdentifier",
																	"src": "3725:41:11"
																},
																"nativeSrc": "3725:69:11",
																"nodeType": "YulFunctionCall",
																"src": "3725:69:11"
															},
															"nativeSrc": "3725:69:11",
															"nodeType": "YulExpressionStatement",
															"src": "3725:69:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nativeSrc": "3583:218:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3651:9:11",
														"nodeType": "YulTypedName",
														"src": "3651:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3663:6:11",
														"nodeType": "YulTypedName",
														"src": "3663:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3674:4:11",
														"nodeType": "YulTypedName",
														"src": "3674:4:11",
														"type": ""
													}
												],
												"src": "3583:218:11"
											},
											{
												"body": {
													"nativeSrc": "3890:391:11",
													"nodeType": "YulBlock",
													"src": "3890:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3936:83:11",
																"nodeType": "YulBlock",
																"src": "3936:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3938:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3938:77:11"
																			},
																			"nativeSrc": "3938:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3938:79:11"
																		},
																		"nativeSrc": "3938:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3938:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3911:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3911:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3920:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3920:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3907:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3907:3:11"
																		},
																		"nativeSrc": "3907:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3907:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3932:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3932:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3903:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3903:3:11"
																},
																"nativeSrc": "3903:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3903:32:11"
															},
															"nativeSrc": "3900:119:11",
															"nodeType": "YulIf",
															"src": "3900:119:11"
														},
														{
															"nativeSrc": "4029:117:11",
															"nodeType": "YulBlock",
															"src": "4029:117:11",
															"statements": [
																{
																	"nativeSrc": "4044:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4044:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4058:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4058:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4048:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4048:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4073:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4073:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4108:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4108:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4119:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4119:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4104:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4104:3:11"
																				},
																				"nativeSrc": "4104:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4104:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4128:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4128:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4083:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4083:20:11"
																		},
																		"nativeSrc": "4083:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4083:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4073:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4073:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4156:118:11",
															"nodeType": "YulBlock",
															"src": "4156:118:11",
															"statements": [
																{
																	"nativeSrc": "4171:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4171:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4185:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4185:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4175:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4175:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4201:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4201:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4236:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4236:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4247:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4247:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4232:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4232:3:11"
																				},
																				"nativeSrc": "4232:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4232:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4256:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4256:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4211:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4211:20:11"
																		},
																		"nativeSrc": "4211:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4211:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4201:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4201:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3807:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:11",
														"nodeType": "YulTypedName",
														"src": "3852:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:11",
														"nodeType": "YulTypedName",
														"src": "3863:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:11",
														"nodeType": "YulTypedName",
														"src": "3875:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:11",
														"nodeType": "YulTypedName",
														"src": "3883:6:11",
														"type": ""
													}
												],
												"src": "3807:474:11"
											},
											{
												"body": {
													"nativeSrc": "4385:124:11",
													"nodeType": "YulBlock",
													"src": "4385:124:11",
													"statements": [
														{
															"nativeSrc": "4395:26:11",
															"nodeType": "YulAssignment",
															"src": "4395:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4407:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4407:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4418:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4418:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4403:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4403:3:11"
																},
																"nativeSrc": "4403:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4403:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4395:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4395:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4475:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4475:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4488:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4488:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4499:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4499:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4484:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4484:3:11"
																		},
																		"nativeSrc": "4484:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4484:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4431:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4431:43:11"
																},
																"nativeSrc": "4431:71:11",
																"nodeType": "YulFunctionCall",
																"src": "4431:71:11"
															},
															"nativeSrc": "4431:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "4431:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4287:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4357:9:11",
														"nodeType": "YulTypedName",
														"src": "4357:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4369:6:11",
														"nodeType": "YulTypedName",
														"src": "4369:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4380:4:11",
														"nodeType": "YulTypedName",
														"src": "4380:4:11",
														"type": ""
													}
												],
												"src": "4287:222:11"
											},
											{
												"body": {
													"nativeSrc": "4641:206:11",
													"nodeType": "YulBlock",
													"src": "4641:206:11",
													"statements": [
														{
															"nativeSrc": "4651:26:11",
															"nodeType": "YulAssignment",
															"src": "4651:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4663:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4663:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4674:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4674:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4659:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4659:3:11"
																},
																"nativeSrc": "4659:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4659:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4651:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4651:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4731:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4731:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4744:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4744:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4755:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4755:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4740:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4740:3:11"
																		},
																		"nativeSrc": "4740:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4740:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4687:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4687:43:11"
																},
																"nativeSrc": "4687:71:11",
																"nodeType": "YulFunctionCall",
																"src": "4687:71:11"
															},
															"nativeSrc": "4687:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "4687:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4812:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4812:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4825:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4825:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4836:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4836:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4821:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4821:3:11"
																		},
																		"nativeSrc": "4821:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4821:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4768:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4768:43:11"
																},
																"nativeSrc": "4768:72:11",
																"nodeType": "YulFunctionCall",
																"src": "4768:72:11"
															},
															"nativeSrc": "4768:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "4768:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4515:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4605:9:11",
														"nodeType": "YulTypedName",
														"src": "4605:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4617:6:11",
														"nodeType": "YulTypedName",
														"src": "4617:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4625:6:11",
														"nodeType": "YulTypedName",
														"src": "4625:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4636:4:11",
														"nodeType": "YulTypedName",
														"src": "4636:4:11",
														"type": ""
													}
												],
												"src": "4515:332:11"
											},
											{
												"body": {
													"nativeSrc": "5007:288:11",
													"nodeType": "YulBlock",
													"src": "5007:288:11",
													"statements": [
														{
															"nativeSrc": "5017:26:11",
															"nodeType": "YulAssignment",
															"src": "5017:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5029:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5029:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5040:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5040:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5025:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5025:3:11"
																},
																"nativeSrc": "5025:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5025:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5017:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5017:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5097:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5097:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5110:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5110:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5121:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5121:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5106:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5106:3:11"
																		},
																		"nativeSrc": "5106:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5106:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5053:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "5053:43:11"
																},
																"nativeSrc": "5053:71:11",
																"nodeType": "YulFunctionCall",
																"src": "5053:71:11"
															},
															"nativeSrc": "5053:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "5053:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5178:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5178:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5191:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5191:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5202:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5202:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5187:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5187:3:11"
																		},
																		"nativeSrc": "5187:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5187:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5134:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "5134:43:11"
																},
																"nativeSrc": "5134:72:11",
																"nodeType": "YulFunctionCall",
																"src": "5134:72:11"
															},
															"nativeSrc": "5134:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "5134:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5260:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5260:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5273:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5273:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5284:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5284:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5269:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5269:3:11"
																		},
																		"nativeSrc": "5269:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5269:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5216:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "5216:43:11"
																},
																"nativeSrc": "5216:72:11",
																"nodeType": "YulFunctionCall",
																"src": "5216:72:11"
															},
															"nativeSrc": "5216:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "5216:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4853:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4963:9:11",
														"nodeType": "YulTypedName",
														"src": "4963:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4975:6:11",
														"nodeType": "YulTypedName",
														"src": "4975:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4983:6:11",
														"nodeType": "YulTypedName",
														"src": "4983:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4991:6:11",
														"nodeType": "YulTypedName",
														"src": "4991:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5002:4:11",
														"nodeType": "YulTypedName",
														"src": "5002:4:11",
														"type": ""
													}
												],
												"src": "4853:442:11"
											},
											{
												"body": {
													"nativeSrc": "5329:152:11",
													"nodeType": "YulBlock",
													"src": "5329:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5346:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5346:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5349:77:11",
																		"nodeType": "YulLiteral",
																		"src": "5349:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5339:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5339:6:11"
																},
																"nativeSrc": "5339:88:11",
																"nodeType": "YulFunctionCall",
																"src": "5339:88:11"
															},
															"nativeSrc": "5339:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "5339:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5443:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5443:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5446:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5446:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5436:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5436:6:11"
																},
																"nativeSrc": "5436:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5436:15:11"
															},
															"nativeSrc": "5436:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "5436:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5467:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5467:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5470:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5470:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5460:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5460:6:11"
																},
																"nativeSrc": "5460:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5460:15:11"
															},
															"nativeSrc": "5460:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "5460:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5301:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "5301:180:11"
											},
											{
												"body": {
													"nativeSrc": "5531:147:11",
													"nodeType": "YulBlock",
													"src": "5531:147:11",
													"statements": [
														{
															"nativeSrc": "5541:25:11",
															"nodeType": "YulAssignment",
															"src": "5541:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5564:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5564:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5546:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5546:17:11"
																},
																"nativeSrc": "5546:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5546:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5541:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5541:1:11"
																}
															]
														},
														{
															"nativeSrc": "5575:25:11",
															"nodeType": "YulAssignment",
															"src": "5575:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5598:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5598:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5580:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5580:17:11"
																},
																"nativeSrc": "5580:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5580:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5575:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5575:1:11"
																}
															]
														},
														{
															"nativeSrc": "5609:16:11",
															"nodeType": "YulAssignment",
															"src": "5609:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5620:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5620:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5623:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5623:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5616:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5616:3:11"
																},
																"nativeSrc": "5616:9:11",
																"nodeType": "YulFunctionCall",
																"src": "5616:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5609:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5609:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5649:22:11",
																"nodeType": "YulBlock",
																"src": "5649:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5651:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "5651:16:11"
																			},
																			"nativeSrc": "5651:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5651:18:11"
																		},
																		"nativeSrc": "5651:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5651:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5641:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5641:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5644:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5644:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5638:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5638:2:11"
																},
																"nativeSrc": "5638:10:11",
																"nodeType": "YulFunctionCall",
																"src": "5638:10:11"
															},
															"nativeSrc": "5635:36:11",
															"nodeType": "YulIf",
															"src": "5635:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5487:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5518:1:11",
														"nodeType": "YulTypedName",
														"src": "5518:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5521:1:11",
														"nodeType": "YulTypedName",
														"src": "5521:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5527:3:11",
														"nodeType": "YulTypedName",
														"src": "5527:3:11",
														"type": ""
													}
												],
												"src": "5487:191:11"
											},
											{
												"body": {
													"nativeSrc": "5725:77:11",
													"nodeType": "YulBlock",
													"src": "5725:77:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5780:16:11",
																"nodeType": "YulBlock",
																"src": "5780:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5789:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5789:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5792:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5792:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5782:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5782:6:11"
																			},
																			"nativeSrc": "5782:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5782:12:11"
																		},
																		"nativeSrc": "5782:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5782:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5748:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5748:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5771:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5771:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "5755:15:11",
																					"nodeType": "YulIdentifier",
																					"src": "5755:15:11"
																				},
																				"nativeSrc": "5755:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5755:22:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5745:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "5745:2:11"
																		},
																		"nativeSrc": "5745:33:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5745:33:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5738:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5738:6:11"
																},
																"nativeSrc": "5738:41:11",
																"nodeType": "YulFunctionCall",
																"src": "5738:41:11"
															},
															"nativeSrc": "5735:61:11",
															"nodeType": "YulIf",
															"src": "5735:61:11"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "5684:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5718:5:11",
														"nodeType": "YulTypedName",
														"src": "5718:5:11",
														"type": ""
													}
												],
												"src": "5684:118:11"
											},
											{
												"body": {
													"nativeSrc": "5869:78:11",
													"nodeType": "YulBlock",
													"src": "5869:78:11",
													"statements": [
														{
															"nativeSrc": "5879:22:11",
															"nodeType": "YulAssignment",
															"src": "5879:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5894:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5894:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5888:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5888:5:11"
																},
																"nativeSrc": "5888:13:11",
																"nodeType": "YulFunctionCall",
																"src": "5888:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5879:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5879:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5935:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5935:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "5910:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "5910:24:11"
																},
																"nativeSrc": "5910:31:11",
																"nodeType": "YulFunctionCall",
																"src": "5910:31:11"
															},
															"nativeSrc": "5910:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "5910:31:11"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "5808:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5847:6:11",
														"nodeType": "YulTypedName",
														"src": "5847:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5855:3:11",
														"nodeType": "YulTypedName",
														"src": "5855:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5863:5:11",
														"nodeType": "YulTypedName",
														"src": "5863:5:11",
														"type": ""
													}
												],
												"src": "5808:139:11"
											},
											{
												"body": {
													"nativeSrc": "6028:272:11",
													"nodeType": "YulBlock",
													"src": "6028:272:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6074:83:11",
																"nodeType": "YulBlock",
																"src": "6074:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6076:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "6076:77:11"
																			},
																			"nativeSrc": "6076:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6076:79:11"
																		},
																		"nativeSrc": "6076:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6076:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6049:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6049:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6058:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6058:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6045:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6045:3:11"
																		},
																		"nativeSrc": "6045:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6045:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6070:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6070:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6041:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6041:3:11"
																},
																"nativeSrc": "6041:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6041:32:11"
															},
															"nativeSrc": "6038:119:11",
															"nodeType": "YulIf",
															"src": "6038:119:11"
														},
														{
															"nativeSrc": "6167:126:11",
															"nodeType": "YulBlock",
															"src": "6167:126:11",
															"statements": [
																{
																	"nativeSrc": "6182:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6182:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6196:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6196:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6186:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6186:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6211:72:11",
																	"nodeType": "YulAssignment",
																	"src": "6211:72:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6255:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6255:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6266:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6266:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6251:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6251:3:11"
																				},
																				"nativeSrc": "6251:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6251:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6275:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6275:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "6221:29:11",
																			"nodeType": "YulIdentifier",
																			"src": "6221:29:11"
																		},
																		"nativeSrc": "6221:62:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6221:62:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6211:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6211:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "5953:347:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5998:9:11",
														"nodeType": "YulTypedName",
														"src": "5998:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6009:7:11",
														"nodeType": "YulTypedName",
														"src": "6009:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6021:6:11",
														"nodeType": "YulTypedName",
														"src": "6021:6:11",
														"type": ""
													}
												],
												"src": "5953:347:11"
											},
											{
												"body": {
													"nativeSrc": "6350:61:11",
													"nodeType": "YulBlock",
													"src": "6350:61:11",
													"statements": [
														{
															"nativeSrc": "6360:45:11",
															"nodeType": "YulAssignment",
															"src": "6360:45:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6375:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6375:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6382:22:11",
																		"nodeType": "YulLiteral",
																		"src": "6382:22:11",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6371:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6371:3:11"
																},
																"nativeSrc": "6371:34:11",
																"nodeType": "YulFunctionCall",
																"src": "6371:34:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6360:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "6360:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "6306:105:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6332:5:11",
														"nodeType": "YulTypedName",
														"src": "6332:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6342:7:11",
														"nodeType": "YulTypedName",
														"src": "6342:7:11",
														"type": ""
													}
												],
												"src": "6306:105:11"
											},
											{
												"body": {
													"nativeSrc": "6459:78:11",
													"nodeType": "YulBlock",
													"src": "6459:78:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6515:16:11",
																"nodeType": "YulBlock",
																"src": "6515:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6524:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6524:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6527:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6527:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6517:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6517:6:11"
																			},
																			"nativeSrc": "6517:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6517:12:11"
																		},
																		"nativeSrc": "6517:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6517:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6482:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6482:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6506:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "6506:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "6489:16:11",
																					"nodeType": "YulIdentifier",
																					"src": "6489:16:11"
																				},
																				"nativeSrc": "6489:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6489:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6479:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "6479:2:11"
																		},
																		"nativeSrc": "6479:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6479:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6472:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6472:6:11"
																},
																"nativeSrc": "6472:42:11",
																"nodeType": "YulFunctionCall",
																"src": "6472:42:11"
															},
															"nativeSrc": "6469:62:11",
															"nodeType": "YulIf",
															"src": "6469:62:11"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "6417:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6452:5:11",
														"nodeType": "YulTypedName",
														"src": "6452:5:11",
														"type": ""
													}
												],
												"src": "6417:120:11"
											},
											{
												"body": {
													"nativeSrc": "6605:79:11",
													"nodeType": "YulBlock",
													"src": "6605:79:11",
													"statements": [
														{
															"nativeSrc": "6615:22:11",
															"nodeType": "YulAssignment",
															"src": "6615:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6630:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6630:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6624:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6624:5:11"
																},
																"nativeSrc": "6624:13:11",
																"nodeType": "YulFunctionCall",
																"src": "6624:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6615:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6615:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6672:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6672:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "6646:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "6646:25:11"
																},
																"nativeSrc": "6646:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6646:32:11"
															},
															"nativeSrc": "6646:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "6646:32:11"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "6543:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6583:6:11",
														"nodeType": "YulTypedName",
														"src": "6583:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6591:3:11",
														"nodeType": "YulTypedName",
														"src": "6591:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6599:5:11",
														"nodeType": "YulTypedName",
														"src": "6599:5:11",
														"type": ""
													}
												],
												"src": "6543:141:11"
											},
											{
												"body": {
													"nativeSrc": "6734:32:11",
													"nodeType": "YulBlock",
													"src": "6734:32:11",
													"statements": [
														{
															"nativeSrc": "6744:16:11",
															"nodeType": "YulAssignment",
															"src": "6744:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "6755:5:11",
																"nodeType": "YulIdentifier",
																"src": "6755:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6744:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "6744:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "6690:76:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6716:5:11",
														"nodeType": "YulTypedName",
														"src": "6716:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6726:7:11",
														"nodeType": "YulTypedName",
														"src": "6726:7:11",
														"type": ""
													}
												],
												"src": "6690:76:11"
											},
											{
												"body": {
													"nativeSrc": "6814:78:11",
													"nodeType": "YulBlock",
													"src": "6814:78:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6870:16:11",
																"nodeType": "YulBlock",
																"src": "6870:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6879:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6879:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6882:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6882:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6872:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6872:6:11"
																			},
																			"nativeSrc": "6872:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6872:12:11"
																		},
																		"nativeSrc": "6872:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6872:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6837:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6837:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6861:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "6861:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "6844:16:11",
																					"nodeType": "YulIdentifier",
																					"src": "6844:16:11"
																				},
																				"nativeSrc": "6844:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6844:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6834:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "6834:2:11"
																		},
																		"nativeSrc": "6834:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6834:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6827:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6827:6:11"
																},
																"nativeSrc": "6827:42:11",
																"nodeType": "YulFunctionCall",
																"src": "6827:42:11"
															},
															"nativeSrc": "6824:62:11",
															"nodeType": "YulIf",
															"src": "6824:62:11"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "6772:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6807:5:11",
														"nodeType": "YulTypedName",
														"src": "6807:5:11",
														"type": ""
													}
												],
												"src": "6772:120:11"
											},
											{
												"body": {
													"nativeSrc": "6960:79:11",
													"nodeType": "YulBlock",
													"src": "6960:79:11",
													"statements": [
														{
															"nativeSrc": "6970:22:11",
															"nodeType": "YulAssignment",
															"src": "6970:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6985:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6985:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6979:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6979:5:11"
																},
																"nativeSrc": "6979:13:11",
																"nodeType": "YulFunctionCall",
																"src": "6979:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6970:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6970:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7027:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7027:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "7001:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "7001:25:11"
																},
																"nativeSrc": "7001:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7001:32:11"
															},
															"nativeSrc": "7001:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "7001:32:11"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "6898:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6938:6:11",
														"nodeType": "YulTypedName",
														"src": "6938:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6946:3:11",
														"nodeType": "YulTypedName",
														"src": "6946:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6954:5:11",
														"nodeType": "YulTypedName",
														"src": "6954:5:11",
														"type": ""
													}
												],
												"src": "6898:141:11"
											},
											{
												"body": {
													"nativeSrc": "7108:80:11",
													"nodeType": "YulBlock",
													"src": "7108:80:11",
													"statements": [
														{
															"nativeSrc": "7118:22:11",
															"nodeType": "YulAssignment",
															"src": "7118:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7133:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7133:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7127:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7127:5:11"
																},
																"nativeSrc": "7127:13:11",
																"nodeType": "YulFunctionCall",
																"src": "7127:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7118:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7118:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7176:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7176:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7149:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "7149:26:11"
																},
																"nativeSrc": "7149:33:11",
																"nodeType": "YulFunctionCall",
																"src": "7149:33:11"
															},
															"nativeSrc": "7149:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "7149:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7045:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7086:6:11",
														"nodeType": "YulTypedName",
														"src": "7086:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7094:3:11",
														"nodeType": "YulTypedName",
														"src": "7094:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7102:5:11",
														"nodeType": "YulTypedName",
														"src": "7102:5:11",
														"type": ""
													}
												],
												"src": "7045:143:11"
											},
											{
												"body": {
													"nativeSrc": "7336:829:11",
													"nodeType": "YulBlock",
													"src": "7336:829:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7383:83:11",
																"nodeType": "YulBlock",
																"src": "7383:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7385:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "7385:77:11"
																			},
																			"nativeSrc": "7385:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7385:79:11"
																		},
																		"nativeSrc": "7385:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7385:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7357:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7357:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7366:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7366:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7353:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7353:3:11"
																		},
																		"nativeSrc": "7353:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7353:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7378:3:11",
																		"nodeType": "YulLiteral",
																		"src": "7378:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7349:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7349:3:11"
																},
																"nativeSrc": "7349:33:11",
																"nodeType": "YulFunctionCall",
																"src": "7349:33:11"
															},
															"nativeSrc": "7346:120:11",
															"nodeType": "YulIf",
															"src": "7346:120:11"
														},
														{
															"nativeSrc": "7476:127:11",
															"nodeType": "YulBlock",
															"src": "7476:127:11",
															"statements": [
																{
																	"nativeSrc": "7491:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7491:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7505:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7505:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7495:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7495:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7520:73:11",
																	"nodeType": "YulAssignment",
																	"src": "7520:73:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7565:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7565:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7576:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7576:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7561:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7561:3:11"
																				},
																				"nativeSrc": "7561:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7561:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7585:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7585:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "7530:30:11",
																			"nodeType": "YulIdentifier",
																			"src": "7530:30:11"
																		},
																		"nativeSrc": "7530:63:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7530:63:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7520:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7520:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7613:128:11",
															"nodeType": "YulBlock",
															"src": "7613:128:11",
															"statements": [
																{
																	"nativeSrc": "7628:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7628:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7642:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7642:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7632:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7632:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7658:73:11",
																	"nodeType": "YulAssignment",
																	"src": "7658:73:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7703:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7703:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7714:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7714:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7699:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7699:3:11"
																				},
																				"nativeSrc": "7699:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7699:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7723:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7723:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "7668:30:11",
																			"nodeType": "YulIdentifier",
																			"src": "7668:30:11"
																		},
																		"nativeSrc": "7668:63:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7668:63:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7658:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7658:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7751:129:11",
															"nodeType": "YulBlock",
															"src": "7751:129:11",
															"statements": [
																{
																	"nativeSrc": "7766:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7766:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7780:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7780:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7770:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7770:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7796:74:11",
																	"nodeType": "YulAssignment",
																	"src": "7796:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7842:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7842:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7853:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7853:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7838:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7838:3:11"
																				},
																				"nativeSrc": "7838:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7838:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7862:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7862:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "7806:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "7806:31:11"
																		},
																		"nativeSrc": "7806:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7806:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7796:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7796:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7890:129:11",
															"nodeType": "YulBlock",
															"src": "7890:129:11",
															"statements": [
																{
																	"nativeSrc": "7905:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7905:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7919:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7919:2:11",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7909:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7909:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7935:74:11",
																	"nodeType": "YulAssignment",
																	"src": "7935:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7981:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7981:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7992:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7992:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7977:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7977:3:11"
																				},
																				"nativeSrc": "7977:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7977:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8001:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8001:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "7945:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "7945:31:11"
																		},
																		"nativeSrc": "7945:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7945:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "7935:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7935:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8029:129:11",
															"nodeType": "YulBlock",
															"src": "8029:129:11",
															"statements": [
																{
																	"nativeSrc": "8044:17:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8044:17:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8058:3:11",
																		"nodeType": "YulLiteral",
																		"src": "8058:3:11",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8048:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8048:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8075:73:11",
																	"nodeType": "YulAssignment",
																	"src": "8075:73:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8120:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8120:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8131:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8131:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8116:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8116:3:11"
																				},
																				"nativeSrc": "8116:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8116:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8140:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8140:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "8085:30:11",
																			"nodeType": "YulIdentifier",
																			"src": "8085:30:11"
																		},
																		"nativeSrc": "8085:63:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8085:63:11"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "8075:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8075:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "7194:971:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7274:9:11",
														"nodeType": "YulTypedName",
														"src": "7274:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7285:7:11",
														"nodeType": "YulTypedName",
														"src": "7285:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7297:6:11",
														"nodeType": "YulTypedName",
														"src": "7297:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7305:6:11",
														"nodeType": "YulTypedName",
														"src": "7305:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7313:6:11",
														"nodeType": "YulTypedName",
														"src": "7313:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7321:6:11",
														"nodeType": "YulTypedName",
														"src": "7321:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7329:6:11",
														"nodeType": "YulTypedName",
														"src": "7329:6:11",
														"type": ""
													}
												],
												"src": "7194:971:11"
											},
											{
												"body": {
													"nativeSrc": "8216:149:11",
													"nodeType": "YulBlock",
													"src": "8216:149:11",
													"statements": [
														{
															"nativeSrc": "8226:25:11",
															"nodeType": "YulAssignment",
															"src": "8226:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8249:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8249:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8231:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "8231:17:11"
																},
																"nativeSrc": "8231:20:11",
																"nodeType": "YulFunctionCall",
																"src": "8231:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8226:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "8226:1:11"
																}
															]
														},
														{
															"nativeSrc": "8260:25:11",
															"nodeType": "YulAssignment",
															"src": "8260:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8283:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8283:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8265:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "8265:17:11"
																},
																"nativeSrc": "8265:20:11",
																"nodeType": "YulFunctionCall",
																"src": "8265:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8260:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "8260:1:11"
																}
															]
														},
														{
															"nativeSrc": "8294:17:11",
															"nodeType": "YulAssignment",
															"src": "8294:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8306:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8306:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8309:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8309:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8302:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8302:3:11"
																},
																"nativeSrc": "8302:9:11",
																"nodeType": "YulFunctionCall",
																"src": "8302:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8294:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8294:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8336:22:11",
																"nodeType": "YulBlock",
																"src": "8336:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8338:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "8338:16:11"
																			},
																			"nativeSrc": "8338:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8338:18:11"
																		},
																		"nativeSrc": "8338:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8338:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8327:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8327:4:11"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8333:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8333:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8324:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8324:2:11"
																},
																"nativeSrc": "8324:11:11",
																"nodeType": "YulFunctionCall",
																"src": "8324:11:11"
															},
															"nativeSrc": "8321:37:11",
															"nodeType": "YulIf",
															"src": "8321:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8171:194:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8202:1:11",
														"nodeType": "YulTypedName",
														"src": "8202:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8205:1:11",
														"nodeType": "YulTypedName",
														"src": "8205:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8211:4:11",
														"nodeType": "YulTypedName",
														"src": "8211:4:11",
														"type": ""
													}
												],
												"src": "8171:194:11"
											},
											{
												"body": {
													"nativeSrc": "8422:51:11",
													"nodeType": "YulBlock",
													"src": "8422:51:11",
													"statements": [
														{
															"nativeSrc": "8432:34:11",
															"nodeType": "YulAssignment",
															"src": "8432:34:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8457:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8457:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8460:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8460:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8453:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8453:3:11"
																},
																"nativeSrc": "8453:13:11",
																"nodeType": "YulFunctionCall",
																"src": "8453:13:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "8432:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "8432:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "8371:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8403:5:11",
														"nodeType": "YulTypedName",
														"src": "8403:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "8413:8:11",
														"nodeType": "YulTypedName",
														"src": "8413:8:11",
														"type": ""
													}
												],
												"src": "8371:102:11"
											},
											{
												"body": {
													"nativeSrc": "8552:775:11",
													"nodeType": "YulBlock",
													"src": "8552:775:11",
													"statements": [
														{
															"nativeSrc": "8562:15:11",
															"nodeType": "YulAssignment",
															"src": "8562:15:11",
															"value": {
																"name": "_power",
																"nativeSrc": "8571:6:11",
																"nodeType": "YulIdentifier",
																"src": "8571:6:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8562:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8562:5:11"
																}
															]
														},
														{
															"nativeSrc": "8586:14:11",
															"nodeType": "YulAssignment",
															"src": "8586:14:11",
															"value": {
																"name": "_base",
																"nativeSrc": "8595:5:11",
																"nodeType": "YulIdentifier",
																"src": "8595:5:11"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8586:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8586:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8644:677:11",
																"nodeType": "YulBlock",
																"src": "8644:677:11",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "8732:22:11",
																			"nodeType": "YulBlock",
																			"src": "8732:22:11",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8734:16:11",
																							"nodeType": "YulIdentifier",
																							"src": "8734:16:11"
																						},
																						"nativeSrc": "8734:18:11",
																						"nodeType": "YulFunctionCall",
																						"src": "8734:18:11"
																					},
																					"nativeSrc": "8734:18:11",
																					"nodeType": "YulExpressionStatement",
																					"src": "8734:18:11"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8710:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "8710:4:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "8720:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "8720:3:11"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "8725:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "8725:4:11"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "8716:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "8716:3:11"
																					},
																					"nativeSrc": "8716:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8716:14:11"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8707:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "8707:2:11"
																			},
																			"nativeSrc": "8707:24:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8707:24:11"
																		},
																		"nativeSrc": "8704:50:11",
																		"nodeType": "YulIf",
																		"src": "8704:50:11"
																	},
																	{
																		"body": {
																			"nativeSrc": "8799:419:11",
																			"nodeType": "YulBlock",
																			"src": "8799:419:11",
																			"statements": [
																				{
																					"nativeSrc": "9179:25:11",
																					"nodeType": "YulAssignment",
																					"src": "9179:25:11",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "9192:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "9192:5:11"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "9199:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "9199:4:11"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "9188:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "9188:3:11"
																						},
																						"nativeSrc": "9188:16:11",
																						"nodeType": "YulFunctionCall",
																						"src": "9188:16:11"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "9179:5:11",
																							"nodeType": "YulIdentifier",
																							"src": "9179:5:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8774:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "8774:8:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8784:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8784:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8770:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "8770:3:11"
																			},
																			"nativeSrc": "8770:16:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8770:16:11"
																		},
																		"nativeSrc": "8767:451:11",
																		"nodeType": "YulIf",
																		"src": "8767:451:11"
																	},
																	{
																		"nativeSrc": "9231:23:11",
																		"nodeType": "YulAssignment",
																		"src": "9231:23:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9243:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "9243:4:11"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "9249:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "9249:4:11"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "9239:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "9239:3:11"
																			},
																			"nativeSrc": "9239:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9239:15:11"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "9231:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "9231:4:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9267:44:11",
																		"nodeType": "YulAssignment",
																		"src": "9267:44:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "9302:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "9302:8:11"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "9279:22:11",
																				"nodeType": "YulIdentifier",
																				"src": "9279:22:11"
																			},
																			"nativeSrc": "9279:32:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9279:32:11"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "9267:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "9267:8:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8620:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "8620:8:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8630:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8630:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8617:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8617:2:11"
																},
																"nativeSrc": "8617:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8617:15:11"
															},
															"nativeSrc": "8609:712:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8633:2:11",
																"nodeType": "YulBlock",
																"src": "8633:2:11",
																"statements": []
															},
															"pre": {
																"nativeSrc": "8613:3:11",
																"nodeType": "YulBlock",
																"src": "8613:3:11",
																"statements": []
															},
															"src": "8609:712:11"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "8479:848:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "8507:6:11",
														"nodeType": "YulTypedName",
														"src": "8507:6:11",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "8515:5:11",
														"nodeType": "YulTypedName",
														"src": "8515:5:11",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8522:8:11",
														"nodeType": "YulTypedName",
														"src": "8522:8:11",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8532:3:11",
														"nodeType": "YulTypedName",
														"src": "8532:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8540:5:11",
														"nodeType": "YulTypedName",
														"src": "8540:5:11",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "8547:4:11",
														"nodeType": "YulTypedName",
														"src": "8547:4:11",
														"type": ""
													}
												],
												"src": "8479:848:11"
											},
											{
												"body": {
													"nativeSrc": "9393:1013:11",
													"nodeType": "YulBlock",
													"src": "9393:1013:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "9588:20:11",
																"nodeType": "YulBlock",
																"src": "9588:20:11",
																"statements": [
																	{
																		"nativeSrc": "9590:10:11",
																		"nodeType": "YulAssignment",
																		"src": "9590:10:11",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9599:1:11",
																			"nodeType": "YulLiteral",
																			"src": "9599:1:11",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9590:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "9590:5:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9601:5:11",
																		"nodeType": "YulLeave",
																		"src": "9601:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9578:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "9578:8:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9571:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9571:6:11"
																},
																"nativeSrc": "9571:16:11",
																"nodeType": "YulFunctionCall",
																"src": "9571:16:11"
															},
															"nativeSrc": "9568:40:11",
															"nodeType": "YulIf",
															"src": "9568:40:11"
														},
														{
															"body": {
																"nativeSrc": "9633:20:11",
																"nodeType": "YulBlock",
																"src": "9633:20:11",
																"statements": [
																	{
																		"nativeSrc": "9635:10:11",
																		"nodeType": "YulAssignment",
																		"src": "9635:10:11",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9644:1:11",
																			"nodeType": "YulLiteral",
																			"src": "9644:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9635:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "9635:5:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9646:5:11",
																		"nodeType": "YulLeave",
																		"src": "9646:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9627:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "9627:4:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9620:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9620:6:11"
																},
																"nativeSrc": "9620:12:11",
																"nodeType": "YulFunctionCall",
																"src": "9620:12:11"
															},
															"nativeSrc": "9617:36:11",
															"nodeType": "YulIf",
															"src": "9617:36:11"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9763:20:11",
																		"nodeType": "YulBlock",
																		"src": "9763:20:11",
																		"statements": [
																			{
																				"nativeSrc": "9765:10:11",
																				"nodeType": "YulAssignment",
																				"src": "9765:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9774:1:11",
																					"nodeType": "YulLiteral",
																					"src": "9774:1:11",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9765:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "9765:5:11"
																					}
																				]
																			},
																			{
																				"nativeSrc": "9776:5:11",
																				"nodeType": "YulLeave",
																				"src": "9776:5:11"
																			}
																		]
																	},
																	"nativeSrc": "9756:27:11",
																	"nodeType": "YulCase",
																	"src": "9756:27:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9761:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9761:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9807:176:11",
																		"nodeType": "YulBlock",
																		"src": "9807:176:11",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "9842:22:11",
																					"nodeType": "YulBlock",
																					"src": "9842:22:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9844:16:11",
																									"nodeType": "YulIdentifier",
																									"src": "9844:16:11"
																								},
																								"nativeSrc": "9844:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "9844:18:11"
																							},
																							"nativeSrc": "9844:18:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "9844:18:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "9827:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "9827:8:11"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9837:3:11",
																							"nodeType": "YulLiteral",
																							"src": "9837:3:11",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9824:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "9824:2:11"
																					},
																					"nativeSrc": "9824:17:11",
																					"nodeType": "YulFunctionCall",
																					"src": "9824:17:11"
																				},
																				"nativeSrc": "9821:43:11",
																				"nodeType": "YulIf",
																				"src": "9821:43:11"
																			},
																			{
																				"nativeSrc": "9877:25:11",
																				"nodeType": "YulAssignment",
																				"src": "9877:25:11",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9890:1:11",
																							"nodeType": "YulLiteral",
																							"src": "9890:1:11",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "9893:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "9893:8:11"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "9886:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "9886:3:11"
																					},
																					"nativeSrc": "9886:16:11",
																					"nodeType": "YulFunctionCall",
																					"src": "9886:16:11"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9877:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "9877:5:11"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9933:22:11",
																					"nodeType": "YulBlock",
																					"src": "9933:22:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9935:16:11",
																									"nodeType": "YulIdentifier",
																									"src": "9935:16:11"
																								},
																								"nativeSrc": "9935:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "9935:18:11"
																							},
																							"nativeSrc": "9935:18:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "9935:18:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "9921:5:11",
																							"nodeType": "YulIdentifier",
																							"src": "9921:5:11"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "9928:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "9928:3:11"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9918:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "9918:2:11"
																					},
																					"nativeSrc": "9918:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "9918:14:11"
																				},
																				"nativeSrc": "9915:40:11",
																				"nodeType": "YulIf",
																				"src": "9915:40:11"
																			},
																			{
																				"nativeSrc": "9968:5:11",
																				"nodeType": "YulLeave",
																				"src": "9968:5:11"
																			}
																		]
																	},
																	"nativeSrc": "9792:191:11",
																	"nodeType": "YulCase",
																	"src": "9792:191:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9797:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9797:1:11",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "9713:4:11",
																"nodeType": "YulIdentifier",
																"src": "9713:4:11"
															},
															"nativeSrc": "9706:277:11",
															"nodeType": "YulSwitch",
															"src": "9706:277:11"
														},
														{
															"body": {
																"nativeSrc": "10115:123:11",
																"nodeType": "YulBlock",
																"src": "10115:123:11",
																"statements": [
																	{
																		"nativeSrc": "10129:28:11",
																		"nodeType": "YulAssignment",
																		"src": "10129:28:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10142:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "10142:4:11"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "10148:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "10148:8:11"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "10138:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "10138:3:11"
																			},
																			"nativeSrc": "10138:19:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10138:19:11"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10129:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "10129:5:11"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "10188:22:11",
																			"nodeType": "YulBlock",
																			"src": "10188:22:11",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "10190:16:11",
																							"nodeType": "YulIdentifier",
																							"src": "10190:16:11"
																						},
																						"nativeSrc": "10190:18:11",
																						"nodeType": "YulFunctionCall",
																						"src": "10190:18:11"
																					},
																					"nativeSrc": "10190:18:11",
																					"nodeType": "YulExpressionStatement",
																					"src": "10190:18:11"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "10176:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "10176:5:11"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "10183:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "10183:3:11"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "10173:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "10173:2:11"
																			},
																			"nativeSrc": "10173:14:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10173:14:11"
																		},
																		"nativeSrc": "10170:40:11",
																		"nodeType": "YulIf",
																		"src": "10170:40:11"
																	},
																	{
																		"nativeSrc": "10223:5:11",
																		"nodeType": "YulLeave",
																		"src": "10223:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10018:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "10018:4:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10024:2:11",
																						"nodeType": "YulLiteral",
																						"src": "10024:2:11",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10015:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "10015:2:11"
																				},
																				"nativeSrc": "10015:12:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10015:12:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10032:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "10032:8:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10042:2:11",
																						"nodeType": "YulLiteral",
																						"src": "10042:2:11",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10029:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "10029:2:11"
																				},
																				"nativeSrc": "10029:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10029:16:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10011:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10011:3:11"
																		},
																		"nativeSrc": "10011:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10011:35:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10067:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "10067:4:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10073:3:11",
																						"nodeType": "YulLiteral",
																						"src": "10073:3:11",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10064:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "10064:2:11"
																				},
																				"nativeSrc": "10064:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10064:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10082:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "10082:8:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10092:2:11",
																						"nodeType": "YulLiteral",
																						"src": "10092:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10079:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "10079:2:11"
																				},
																				"nativeSrc": "10079:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10079:16:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10060:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10060:3:11"
																		},
																		"nativeSrc": "10060:36:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10060:36:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9995:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "9995:2:11"
																},
																"nativeSrc": "9995:111:11",
																"nodeType": "YulFunctionCall",
																"src": "9995:111:11"
															},
															"nativeSrc": "9992:246:11",
															"nodeType": "YulIf",
															"src": "9992:246:11"
														},
														{
															"nativeSrc": "10248:57:11",
															"nodeType": "YulAssignment",
															"src": "10248:57:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10282:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10282:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "10285:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10285:4:11"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10291:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "10291:8:11"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "10301:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10301:3:11"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "10263:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "10263:18:11"
																},
																"nativeSrc": "10263:42:11",
																"nodeType": "YulFunctionCall",
																"src": "10263:42:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10248:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "10248:5:11"
																},
																{
																	"name": "base",
																	"nativeSrc": "10255:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10255:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10344:22:11",
																"nodeType": "YulBlock",
																"src": "10344:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10346:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "10346:16:11"
																			},
																			"nativeSrc": "10346:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10346:18:11"
																		},
																		"nativeSrc": "10346:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10346:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "10321:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "10321:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "10332:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "10332:3:11"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "10337:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "10337:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "10328:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10328:3:11"
																		},
																		"nativeSrc": "10328:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10328:14:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10318:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10318:2:11"
																},
																"nativeSrc": "10318:25:11",
																"nodeType": "YulFunctionCall",
																"src": "10318:25:11"
															},
															"nativeSrc": "10315:51:11",
															"nodeType": "YulIf",
															"src": "10315:51:11"
														},
														{
															"nativeSrc": "10375:25:11",
															"nodeType": "YulAssignment",
															"src": "10375:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "10388:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "10388:5:11"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "10395:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10395:4:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10384:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10384:3:11"
																},
																"nativeSrc": "10384:16:11",
																"nodeType": "YulFunctionCall",
																"src": "10384:16:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10375:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "10375:5:11"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "9333:1073:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9363:4:11",
														"nodeType": "YulTypedName",
														"src": "9363:4:11",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9369:8:11",
														"nodeType": "YulTypedName",
														"src": "9369:8:11",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9379:3:11",
														"nodeType": "YulTypedName",
														"src": "9379:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9387:5:11",
														"nodeType": "YulTypedName",
														"src": "9387:5:11",
														"type": ""
													}
												],
												"src": "9333:1073:11"
											},
											{
												"body": {
													"nativeSrc": "10478:219:11",
													"nodeType": "YulBlock",
													"src": "10478:219:11",
													"statements": [
														{
															"nativeSrc": "10488:31:11",
															"nodeType": "YulAssignment",
															"src": "10488:31:11",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10514:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10514:4:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10496:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10496:17:11"
																},
																"nativeSrc": "10496:23:11",
																"nodeType": "YulFunctionCall",
																"src": "10496:23:11"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "10488:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10488:4:11"
																}
															]
														},
														{
															"nativeSrc": "10528:39:11",
															"nodeType": "YulAssignment",
															"src": "10528:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10558:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "10558:8:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10540:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10540:17:11"
																},
																"nativeSrc": "10540:27:11",
																"nodeType": "YulFunctionCall",
																"src": "10540:27:11"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "10528:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "10528:8:11"
																}
															]
														},
														{
															"nativeSrc": "10577:113:11",
															"nodeType": "YulAssignment",
															"src": "10577:113:11",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10607:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10607:4:11"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10613:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "10613:8:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10623:66:11",
																		"nodeType": "YulLiteral",
																		"src": "10623:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "10586:20:11",
																	"nodeType": "YulIdentifier",
																	"src": "10586:20:11"
																},
																"nativeSrc": "10586:104:11",
																"nodeType": "YulFunctionCall",
																"src": "10586:104:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10577:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "10577:5:11"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "10412:285:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10453:4:11",
														"nodeType": "YulTypedName",
														"src": "10453:4:11",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10459:8:11",
														"nodeType": "YulTypedName",
														"src": "10459:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10472:5:11",
														"nodeType": "YulTypedName",
														"src": "10472:5:11",
														"type": ""
													}
												],
												"src": "10412:285:11"
											},
											{
												"body": {
													"nativeSrc": "10751:362:11",
													"nodeType": "YulBlock",
													"src": "10751:362:11",
													"statements": [
														{
															"nativeSrc": "10761:25:11",
															"nodeType": "YulAssignment",
															"src": "10761:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10784:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10784:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10766:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10766:17:11"
																},
																"nativeSrc": "10766:20:11",
																"nodeType": "YulFunctionCall",
																"src": "10766:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10761:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "10761:1:11"
																}
															]
														},
														{
															"nativeSrc": "10795:25:11",
															"nodeType": "YulAssignment",
															"src": "10795:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10818:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10818:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10800:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10800:17:11"
																},
																"nativeSrc": "10800:20:11",
																"nodeType": "YulFunctionCall",
																"src": "10800:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10795:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "10795:1:11"
																}
															]
														},
														{
															"nativeSrc": "10829:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "10829:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10852:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10852:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10855:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10855:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10848:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10848:3:11"
																},
																"nativeSrc": "10848:9:11",
																"nodeType": "YulFunctionCall",
																"src": "10848:9:11"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10833:11:11",
																	"nodeType": "YulTypedName",
																	"src": "10833:11:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10866:41:11",
															"nodeType": "YulAssignment",
															"src": "10866:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10895:11:11",
																		"nodeType": "YulIdentifier",
																		"src": "10895:11:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10877:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10877:17:11"
																},
																"nativeSrc": "10877:30:11",
																"nodeType": "YulFunctionCall",
																"src": "10877:30:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10866:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "10866:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11084:22:11",
																"nodeType": "YulBlock",
																"src": "11084:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11086:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "11086:16:11"
																			},
																			"nativeSrc": "11086:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11086:18:11"
																		},
																		"nativeSrc": "11086:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "11086:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11017:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "11017:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11010:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "11010:6:11"
																				},
																				"nativeSrc": "11010:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11010:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11040:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "11040:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11047:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "11047:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11056:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "11056:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11043:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "11043:3:11"
																						},
																						"nativeSrc": "11043:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "11043:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11037:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "11037:2:11"
																				},
																				"nativeSrc": "11037:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11037:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10990:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "10990:2:11"
																		},
																		"nativeSrc": "10990:83:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10990:83:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10970:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10970:6:11"
																},
																"nativeSrc": "10970:113:11",
																"nodeType": "YulFunctionCall",
																"src": "10970:113:11"
															},
															"nativeSrc": "10967:139:11",
															"nodeType": "YulIf",
															"src": "10967:139:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10703:410:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10734:1:11",
														"nodeType": "YulTypedName",
														"src": "10734:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10737:1:11",
														"nodeType": "YulTypedName",
														"src": "10737:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10743:7:11",
														"nodeType": "YulTypedName",
														"src": "10743:7:11",
														"type": ""
													}
												],
												"src": "10703:410:11"
											},
											{
												"body": {
													"nativeSrc": "11147:152:11",
													"nodeType": "YulBlock",
													"src": "11147:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11164:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11164:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11167:77:11",
																		"nodeType": "YulLiteral",
																		"src": "11167:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11157:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11157:6:11"
																},
																"nativeSrc": "11157:88:11",
																"nodeType": "YulFunctionCall",
																"src": "11157:88:11"
															},
															"nativeSrc": "11157:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "11157:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11261:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11261:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11264:4:11",
																		"nodeType": "YulLiteral",
																		"src": "11264:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11254:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11254:6:11"
																},
																"nativeSrc": "11254:15:11",
																"nodeType": "YulFunctionCall",
																"src": "11254:15:11"
															},
															"nativeSrc": "11254:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "11254:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11285:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11285:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11288:4:11",
																		"nodeType": "YulLiteral",
																		"src": "11288:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11278:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11278:6:11"
																},
																"nativeSrc": "11278:15:11",
																"nodeType": "YulFunctionCall",
																"src": "11278:15:11"
															},
															"nativeSrc": "11278:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "11278:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11119:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "11119:180:11"
											},
											{
												"body": {
													"nativeSrc": "11347:143:11",
													"nodeType": "YulBlock",
													"src": "11347:143:11",
													"statements": [
														{
															"nativeSrc": "11357:25:11",
															"nodeType": "YulAssignment",
															"src": "11357:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11380:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11380:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11362:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "11362:17:11"
																},
																"nativeSrc": "11362:20:11",
																"nodeType": "YulFunctionCall",
																"src": "11362:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11357:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "11357:1:11"
																}
															]
														},
														{
															"nativeSrc": "11391:25:11",
															"nodeType": "YulAssignment",
															"src": "11391:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11414:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11414:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11396:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "11396:17:11"
																},
																"nativeSrc": "11396:20:11",
																"nodeType": "YulFunctionCall",
																"src": "11396:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11391:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "11391:1:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11438:22:11",
																"nodeType": "YulBlock",
																"src": "11438:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11440:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "11440:16:11"
																			},
																			"nativeSrc": "11440:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11440:18:11"
																		},
																		"nativeSrc": "11440:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "11440:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11435:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11435:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11428:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11428:6:11"
																},
																"nativeSrc": "11428:9:11",
																"nodeType": "YulFunctionCall",
																"src": "11428:9:11"
															},
															"nativeSrc": "11425:35:11",
															"nodeType": "YulIf",
															"src": "11425:35:11"
														},
														{
															"nativeSrc": "11470:14:11",
															"nodeType": "YulAssignment",
															"src": "11470:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11479:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11479:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11482:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11482:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11475:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11475:3:11"
																},
																"nativeSrc": "11475:9:11",
																"nodeType": "YulFunctionCall",
																"src": "11475:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11470:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "11470:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "11305:185:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11336:1:11",
														"nodeType": "YulTypedName",
														"src": "11336:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11339:1:11",
														"nodeType": "YulTypedName",
														"src": "11339:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11345:1:11",
														"nodeType": "YulTypedName",
														"src": "11345:1:11",
														"type": ""
													}
												],
												"src": "11305:185:11"
											},
											{
												"body": {
													"nativeSrc": "11539:154:11",
													"nodeType": "YulBlock",
													"src": "11539:154:11",
													"statements": [
														{
															"nativeSrc": "11549:24:11",
															"nodeType": "YulAssignment",
															"src": "11549:24:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11571:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11571:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nativeSrc": "11554:16:11",
																	"nodeType": "YulIdentifier",
																	"src": "11554:16:11"
																},
																"nativeSrc": "11554:19:11",
																"nodeType": "YulFunctionCall",
																"src": "11554:19:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11549:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "11549:1:11"
																}
															]
														},
														{
															"nativeSrc": "11582:24:11",
															"nodeType": "YulAssignment",
															"src": "11582:24:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11604:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11604:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nativeSrc": "11587:16:11",
																	"nodeType": "YulIdentifier",
																	"src": "11587:16:11"
																},
																"nativeSrc": "11587:19:11",
																"nodeType": "YulFunctionCall",
																"src": "11587:19:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11582:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "11582:1:11"
																}
															]
														},
														{
															"nativeSrc": "11615:16:11",
															"nodeType": "YulAssignment",
															"src": "11615:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11626:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11626:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11629:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11629:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11622:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11622:3:11"
																},
																"nativeSrc": "11622:9:11",
																"nodeType": "YulFunctionCall",
																"src": "11622:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11615:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11615:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11664:22:11",
																"nodeType": "YulBlock",
																"src": "11664:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11666:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "11666:16:11"
																			},
																			"nativeSrc": "11666:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11666:18:11"
																		},
																		"nativeSrc": "11666:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "11666:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "11647:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11647:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11652:10:11",
																		"nodeType": "YulLiteral",
																		"src": "11652:10:11",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11644:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "11644:2:11"
																},
																"nativeSrc": "11644:19:11",
																"nodeType": "YulFunctionCall",
																"src": "11644:19:11"
															},
															"nativeSrc": "11641:45:11",
															"nodeType": "YulIf",
															"src": "11641:45:11"
														}
													]
												},
												"name": "checked_add_t_uint32",
												"nativeSrc": "11496:197:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11526:1:11",
														"nodeType": "YulTypedName",
														"src": "11526:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11529:1:11",
														"nodeType": "YulTypedName",
														"src": "11529:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11535:3:11",
														"nodeType": "YulTypedName",
														"src": "11535:3:11",
														"type": ""
													}
												],
												"src": "11496:197:11"
											},
											{
												"body": {
													"nativeSrc": "11812:34:11",
													"nodeType": "YulBlock",
													"src": "11812:34:11",
													"statements": [
														{
															"nativeSrc": "11822:18:11",
															"nodeType": "YulAssignment",
															"src": "11822:18:11",
															"value": {
																"name": "pos",
																"nativeSrc": "11837:3:11",
																"nodeType": "YulIdentifier",
																"src": "11837:3:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11822:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "11822:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11699:147:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11784:3:11",
														"nodeType": "YulTypedName",
														"src": "11784:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11789:6:11",
														"nodeType": "YulTypedName",
														"src": "11789:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11800:11:11",
														"nodeType": "YulTypedName",
														"src": "11800:11:11",
														"type": ""
													}
												],
												"src": "11699:147:11"
											},
											{
												"body": {
													"nativeSrc": "11958:8:11",
													"nodeType": "YulBlock",
													"src": "11958:8:11",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "11852:114:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11950:6:11",
														"nodeType": "YulTypedName",
														"src": "11950:6:11",
														"type": ""
													}
												],
												"src": "11852:114:11"
											},
											{
												"body": {
													"nativeSrc": "12135:235:11",
													"nodeType": "YulBlock",
													"src": "12135:235:11",
													"statements": [
														{
															"nativeSrc": "12145:90:11",
															"nodeType": "YulAssignment",
															"src": "12145:90:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12228:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12228:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12233:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12233:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12152:75:11",
																	"nodeType": "YulIdentifier",
																	"src": "12152:75:11"
																},
																"nativeSrc": "12152:83:11",
																"nodeType": "YulFunctionCall",
																"src": "12152:83:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12145:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12145:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12333:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12333:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "12244:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "12244:88:11"
																},
																"nativeSrc": "12244:93:11",
																"nodeType": "YulFunctionCall",
																"src": "12244:93:11"
															},
															"nativeSrc": "12244:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "12244:93:11"
														},
														{
															"nativeSrc": "12346:18:11",
															"nodeType": "YulAssignment",
															"src": "12346:18:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12357:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12357:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12362:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12362:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12353:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12353:3:11"
																},
																"nativeSrc": "12353:11:11",
																"nodeType": "YulFunctionCall",
																"src": "12353:11:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12346:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12346:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11972:398:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12123:3:11",
														"nodeType": "YulTypedName",
														"src": "12123:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12131:3:11",
														"nodeType": "YulTypedName",
														"src": "12131:3:11",
														"type": ""
													}
												],
												"src": "11972:398:11"
											},
											{
												"body": {
													"nativeSrc": "12564:191:11",
													"nodeType": "YulBlock",
													"src": "12564:191:11",
													"statements": [
														{
															"nativeSrc": "12575:154:11",
															"nodeType": "YulAssignment",
															"src": "12575:154:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12725:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12725:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12582:141:11",
																	"nodeType": "YulIdentifier",
																	"src": "12582:141:11"
																},
																"nativeSrc": "12582:147:11",
																"nodeType": "YulFunctionCall",
																"src": "12582:147:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12575:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12575:3:11"
																}
															]
														},
														{
															"nativeSrc": "12739:10:11",
															"nodeType": "YulAssignment",
															"src": "12739:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "12746:3:11",
																"nodeType": "YulIdentifier",
																"src": "12746:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12739:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12739:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12376:379:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12551:3:11",
														"nodeType": "YulTypedName",
														"src": "12551:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12560:3:11",
														"nodeType": "YulTypedName",
														"src": "12560:3:11",
														"type": ""
													}
												],
												"src": "12376:379:11"
											},
											{
												"body": {
													"nativeSrc": "12887:206:11",
													"nodeType": "YulBlock",
													"src": "12887:206:11",
													"statements": [
														{
															"nativeSrc": "12897:26:11",
															"nodeType": "YulAssignment",
															"src": "12897:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12909:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12909:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12920:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12920:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12905:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12905:3:11"
																},
																"nativeSrc": "12905:18:11",
																"nodeType": "YulFunctionCall",
																"src": "12905:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12897:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12897:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12977:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12977:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12990:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12990:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13001:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13001:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12986:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12986:3:11"
																		},
																		"nativeSrc": "12986:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12986:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12933:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "12933:43:11"
																},
																"nativeSrc": "12933:71:11",
																"nodeType": "YulFunctionCall",
																"src": "12933:71:11"
															},
															"nativeSrc": "12933:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "12933:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13058:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13058:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13071:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13071:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13082:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13082:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13067:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13067:3:11"
																		},
																		"nativeSrc": "13067:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13067:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13014:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13014:43:11"
																},
																"nativeSrc": "13014:72:11",
																"nodeType": "YulFunctionCall",
																"src": "13014:72:11"
															},
															"nativeSrc": "13014:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "13014:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12761:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12851:9:11",
														"nodeType": "YulTypedName",
														"src": "12851:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12863:6:11",
														"nodeType": "YulTypedName",
														"src": "12863:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12871:6:11",
														"nodeType": "YulTypedName",
														"src": "12871:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12882:4:11",
														"nodeType": "YulTypedName",
														"src": "12882:4:11",
														"type": ""
													}
												],
												"src": "12761:332:11"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint32(x, y) -> sum {\n        x := cleanup_t_uint32(x)\n        y := cleanup_t_uint32(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffff) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"911": [
									{
										"length": 32,
										"start": 1816
									},
									{
										"length": 32,
										"start": 1883
									},
									{
										"length": 32,
										"start": 3415
									},
									{
										"length": 32,
										"start": 3482
									},
									{
										"length": 32,
										"start": 3778
									}
								],
								"914": [
									{
										"length": 32,
										"start": 1334
									},
									{
										"length": 32,
										"start": 1375
									},
									{
										"length": 32,
										"start": 3364
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610122575f3560e01c80638da5cb5b1161009f578063dccd58e311610063578063dccd58e314610438578063f2fde38b14610474578063f3db702c1461049c578063f6687af7146104c6578063fe3192f6146104f057610180565b80638da5cb5b146103885780639e281a98146103b2578063a734f06e146103da578063c801fb4014610404578063d0e30db01461042e57610180565b80634a83c3b7116100e65780634a83c3b7146102ba57806352963c2b146102e4578063715018a61461030e57806376e11286146103245780637e3ef7cd1461034c57610180565b8063287cc96b146101d95780632e1a7d4d14610203578063338b5dea1461022b5780633b1a4ec414610253578063432017ca1461027d57610180565b36610180573073ffffffffffffffffffffffffffffffffffffffff1663d0e30db06040518163ffffffff1660e01b81526004015f604051808303815f87803b15801561016c575f5ffd5b505af115801561017e573d5f5f3e3d5ffd5b005b3073ffffffffffffffffffffffffffffffffffffffff1663d0e30db06040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156101c5575f5ffd5b505af11580156101d7573d5f5f3e3d5ffd5b005b3480156101e4575f5ffd5b506101ed61052c565b6040516101fa919061189a565b60405180910390f35b34801561020e575f5ffd5b50610229600480360381019061022491906118e1565b610533565b005b348015610236575f5ffd5b50610251600480360381019061024c9190611966565b610707565b005b34801561025e575f5ffd5b5061026761085b565b604051610274919061189a565b60405180910390f35b348015610288575f5ffd5b506102a3600480360381019061029e91906119a4565b610861565b6040516102b19291906119f9565b60405180910390f35b3480156102c5575f5ffd5b506102ce6108ac565b6040516102db919061189a565b60405180910390f35b3480156102ef575f5ffd5b506102f86108b2565b6040516103059190611a3e565b60405180910390f35b348015610319575f5ffd5b506103226108c7565b005b34801561032f575f5ffd5b5061034a60048036038101906103459190611a57565b6108da565b005b348015610357575f5ffd5b50610372600480360381019061036d91906119a4565b610ac5565b60405161037f919061189a565b60405180910390f35b348015610393575f5ffd5b5061039c610b46565b6040516103a99190611a95565b60405180910390f35b3480156103bd575f5ffd5b506103d860048036038101906103d39190611966565b610b6d565b005b3480156103e5575f5ffd5b506103ee610d1e565b6040516103fb9190611a95565b60405180910390f35b34801561040f575f5ffd5b50610418610d22565b604051610425919061189a565b60405180910390f35b610436610d46565b005b348015610443575f5ffd5b5061045e60048036038101906104599190611a57565b610e06565b60405161046b919061189a565b60405180910390f35b34801561047f575f5ffd5b5061049a600480360381019061049591906119a4565b610e26565b005b3480156104a7575f5ffd5b506104b0610eaa565b6040516104bd9190611a3e565b60405180910390f35b3480156104d1575f5ffd5b506104da610ec0565b6040516104e7919061189a565b60405180910390f35b3480156104fb575f5ffd5b5061051660048036038101906105119190611966565b610ee4565b604051610523919061189a565b60405180910390f35b5f47905090565b807f00000000000000000000000000000000000000000000000000000000000000008111156105bb57807f00000000000000000000000000000000000000000000000000000000000000006040517f631019960000000000000000000000000000000000000000000000000000000081526004016105b2929190611aae565b60405180910390fd5b5f8260035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548111156106f657818160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040517f5fedab090000000000000000000000000000000000000000000000000000000081526004016106ed93929190611ad5565b60405180910390fd5b6107015f3386611146565b50505050565b81815f6107148383610ee4565b90507f0000000000000000000000000000000000000000000000000000000000000000816001546107459190611b37565b11156107b757806001546107599190611b37565b7f00000000000000000000000000000000000000000000000000000000000000006040517ff6167f4e0000000000000000000000000000000000000000000000000000000081526004016107ae929190611aae565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361081c576040517f7cb522e900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108493330868873ffffffffffffffffffffffffffffffffffffffff16611316909392919063ffffffff16565b61085485338661136b565b5050505050565b60015481565b6004602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900460ff16905082565b610e1081565b60025f9054906101000a900463ffffffff1681565b6108cf6114ce565b6108d85f611555565b565b6108e26114ce565b5f5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361091f576012905061098f565b8273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610968573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061098c9190611b94565b90505b5f60405180604001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018360ff1681525090508060045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548160ff021916908360ff1602179055509050508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fa8abe0398416476db5b05737cd4da3b3cbde5012d978a6a6c3fd49d32175353660405160405180910390a350505050565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b818160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054811115610ca857818160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040517f5fedab09000000000000000000000000000000000000000000000000000000008152600401610c9f93929190611ad5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d0d576040517f7cb522e900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d18843385611146565b50505050565b5f81565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f345f610d538383610ee4565b90507f000000000000000000000000000000000000000000000000000000000000000081600154610d849190611b37565b1115610df65780600154610d989190611b37565b7f00000000000000000000000000000000000000000000000000000000000000006040517ff6167f4e000000000000000000000000000000000000000000000000000000008152600401610ded929190611aae565b60405180910390fd5b610e015f333461136b565b505050565b6003602052815f5260405f20602052805f5260405f205f91509150505481565b610e2e6114ce565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e9e575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e959190611a95565b60405180910390fd5b610ea781611555565b50565b600260049054906101000a900463ffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f60045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900460ff1660ff1660ff168152505090505f73ffffffffffffffffffffffffffffffffffffffff16815f015173ffffffffffffffffffffffffffffffffffffffff160361101357836040517fc25bec5600000000000000000000000000000000000000000000000000000000815260040161100a9190611a95565b60405180910390fd5b5f815f015190505f5f8273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611065573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110899190611c45565b509350509250505f82136110c9576040517f780cfa4700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e1081426110d89190611cbc565b1115611110576040517f71a821df00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b836020015160ff16600a6111249190611e1e565b82876111309190611e68565b61113a9190611ed6565b94505050505092915050565b805f8103611180576040517ffa4e609e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546112079190611cbc565b925050819055506112175f611616565b5f6112228584610ee4565b90508060015f8282546112359190611cbc565b925050819055505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361127e5761127984846116a4565b6112aa565b6112a984848773ffffffffffffffffffffffffffffffffffffffff166117559092919063ffffffff16565b5b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb85604051611307919061189a565b60405180910390a35050505050565b6113248484848460016117a8565b61136557836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161135c9190611a95565b60405180910390fd5b50505050565b805f81036113a5576040517ffa4e609e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461142c9190611b37565b9250508190555061143d6001611616565b5f6114488584610ee4565b90508060015f82825461145b9190611b37565b925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a7856040516114bf919061189a565b60405180910390a35050505050565b6114d6611819565b73ffffffffffffffffffffffffffffffffffffffff166114f4610b46565b73ffffffffffffffffffffffffffffffffffffffff161461155357611517611819565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161154a9190611a95565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b801561166057600160025f8282829054906101000a900463ffffffff1661163d9190611f06565b92506101000a81548163ffffffff021916908363ffffffff1602179055506116a1565b6001600260048282829054906101000a900463ffffffff166116829190611f06565b92506101000a81548163ffffffff021916908363ffffffff1602179055505b50565b5f8273ffffffffffffffffffffffffffffffffffffffff16826040516116c990611f6a565b5f6040518083038185875af1925050503d805f8114611703576040519150601f19603f3d011682016040523d82523d5f602084013e611708565b606091505b50509050806117505782826040517fa36a1dba000000000000000000000000000000000000000000000000000000008152600401611747929190611f7e565b60405180910390fd5b505050565b6117628383836001611820565b6117a357826040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161179a9190611a95565b60405180910390fd5b505050565b5f5f6323b872dd60e01b9050604051815f525f1960601c87166004525f1960601c86166024528460445260205f60645f5f8c5af1925060015f511483166118065783831516156117fa573d5f823e3d81fd5b5f883b113d1516831692505b806040525f606052505095945050505050565b5f33905090565b5f5f63a9059cbb60e01b9050604051815f525f1960601c86166004528460245260205f60445f5f8b5af1925060015f51148316611874578383151615611868573d5f823e3d81fd5b5f873b113d1516831692505b806040525050949350505050565b5f819050919050565b61189481611882565b82525050565b5f6020820190506118ad5f83018461188b565b92915050565b5f5ffd5b6118c081611882565b81146118ca575f5ffd5b50565b5f813590506118db816118b7565b92915050565b5f602082840312156118f6576118f56118b3565b5b5f611903848285016118cd565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119358261190c565b9050919050565b6119458161192b565b811461194f575f5ffd5b50565b5f813590506119608161193c565b92915050565b5f5f6040838503121561197c5761197b6118b3565b5b5f61198985828601611952565b925050602061199a858286016118cd565b9150509250929050565b5f602082840312156119b9576119b86118b3565b5b5f6119c684828501611952565b91505092915050565b6119d88161192b565b82525050565b5f60ff82169050919050565b6119f3816119de565b82525050565b5f604082019050611a0c5f8301856119cf565b611a1960208301846119ea565b9392505050565b5f63ffffffff82169050919050565b611a3881611a20565b82525050565b5f602082019050611a515f830184611a2f565b92915050565b5f5f60408385031215611a6d57611a6c6118b3565b5b5f611a7a85828601611952565b9250506020611a8b85828601611952565b9150509250929050565b5f602082019050611aa85f8301846119cf565b92915050565b5f604082019050611ac15f83018561188b565b611ace602083018461188b565b9392505050565b5f606082019050611ae85f8301866119cf565b611af5602083018561188b565b611b02604083018461188b565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611b4182611882565b9150611b4c83611882565b9250828201905080821115611b6457611b63611b0a565b5b92915050565b611b73816119de565b8114611b7d575f5ffd5b50565b5f81519050611b8e81611b6a565b92915050565b5f60208284031215611ba957611ba86118b3565b5b5f611bb684828501611b80565b91505092915050565b5f69ffffffffffffffffffff82169050919050565b611bdd81611bbf565b8114611be7575f5ffd5b50565b5f81519050611bf881611bd4565b92915050565b5f819050919050565b611c1081611bfe565b8114611c1a575f5ffd5b50565b5f81519050611c2b81611c07565b92915050565b5f81519050611c3f816118b7565b92915050565b5f5f5f5f5f60a08688031215611c5e57611c5d6118b3565b5b5f611c6b88828901611bea565b9550506020611c7c88828901611c1d565b9450506040611c8d88828901611c31565b9350506060611c9e88828901611c31565b9250506080611caf88828901611bea565b9150509295509295909350565b5f611cc682611882565b9150611cd183611882565b9250828203905081811115611ce957611ce8611b0a565b5b92915050565b5f8160011c9050919050565b5f5f8291508390505b6001851115611d4457808604811115611d2057611d1f611b0a565b5b6001851615611d2f5780820291505b8081029050611d3d85611cef565b9450611d04565b94509492505050565b5f82611d5c5760019050611e17565b81611d69575f9050611e17565b8160018114611d7f5760028114611d8957611db8565b6001915050611e17565b60ff841115611d9b57611d9a611b0a565b5b8360020a915084821115611db257611db1611b0a565b5b50611e17565b5060208310610133831016604e8410600b8410161715611ded5782820a905083811115611de857611de7611b0a565b5b611e17565b611dfa8484846001611cfb565b92509050818404811115611e1157611e10611b0a565b5b81810290505b9392505050565b5f611e2882611882565b9150611e3383611882565b9250611e607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611d4d565b905092915050565b5f611e7282611882565b9150611e7d83611882565b9250828202611e8b81611882565b91508282048414831517611ea257611ea1611b0a565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611ee082611882565b9150611eeb83611882565b925082611efb57611efa611ea9565b5b828204905092915050565b5f611f1082611a20565b9150611f1b83611a20565b9250828201905063ffffffff811115611f3757611f36611b0a565b5b92915050565b5f81905092915050565b50565b5f611f555f83611f3d565b9150611f6082611f47565b5f82019050919050565b5f611f7482611f4a565b9150819050919050565b5f604082019050611f915f8301856119cf565b611f9e602083018461188b565b939250505056fea26469706673582212204f978173d3d9dc9d8161c2c78b234a24c431efa919d509de2c079df8140d1c5164736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x122 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xDCCD58E3 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xDCCD58E3 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0xF3DB702C EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0xF6687AF7 EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0xFE3192F6 EQ PUSH2 0x4F0 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xA734F06E EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xC801FB40 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x42E JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x4A83C3B7 GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0x4A83C3B7 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x52963C2B EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x76E11286 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x7E3EF7CD EQ PUSH2 0x34C JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x287CC96B EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x338B5DEA EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x3B1A4EC4 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x432017CA EQ PUSH2 0x27D JUMPI PUSH2 0x180 JUMP JUMPDEST CALLDATASIZE PUSH2 0x180 JUMPI ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST STOP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D7 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1ED PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x18E1 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH2 0x707 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x267 PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x19A4 JUMP JUMPDEST PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP3 SWAP2 SWAP1 PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2F8 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x322 PUSH2 0x8C7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x1A57 JUMP JUMPDEST PUSH2 0x8DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x357 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x19A4 JUMP JUMPDEST PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x393 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH2 0xB6D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3EE PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x418 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x436 PUSH2 0xD46 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x45E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x1A57 JUMP JUMPDEST PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x49A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x19A4 JUMP JUMPDEST PUSH2 0xE26 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4B0 PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4DA PUSH2 0xEC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x516 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x511 SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x5BB JUMPI DUP1 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x6310199600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B2 SWAP3 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x6F6 JUMPI DUP2 DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH32 0x5FEDAB0900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x701 PUSH0 CALLER DUP7 PUSH2 0x1146 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP2 DUP2 PUSH0 PUSH2 0x714 DUP4 DUP4 PUSH2 0xEE4 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 PUSH1 0x1 SLOAD PUSH2 0x745 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST GT ISZERO PUSH2 0x7B7 JUMPI DUP1 PUSH1 0x1 SLOAD PUSH2 0x759 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0xF6167F4E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP3 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81C JUMPI PUSH1 0x40 MLOAD PUSH32 0x7CB522E900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x849 CALLER ADDRESS DUP7 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1316 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x854 DUP6 CALLER DUP7 PUSH2 0x136B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0xE10 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x8CF PUSH2 0x14CE JUMP JUMPDEST PUSH2 0x8D8 PUSH0 PUSH2 0x1555 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8E2 PUSH2 0x14CE JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x91F JUMPI PUSH1 0x12 SWAP1 POP PUSH2 0x98F JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x968 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98C SWAP2 SWAP1 PUSH2 0x1B94 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA8ABE0398416476DB5B05737CD4DA3B3CBDE5012D978A6A6C3FD49D321753536 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xCA8 JUMPI DUP2 DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH32 0x5FEDAB0900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x7CB522E900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD18 DUP5 CALLER DUP6 PUSH2 0x1146 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 CALLVALUE PUSH0 PUSH2 0xD53 DUP4 DUP4 PUSH2 0xEE4 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 PUSH1 0x1 SLOAD PUSH2 0xD84 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST GT ISZERO PUSH2 0xDF6 JUMPI DUP1 PUSH1 0x1 SLOAD PUSH2 0xD98 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0xF6167F4E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDED SWAP3 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE01 PUSH0 CALLER CALLVALUE PUSH2 0x136B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE2E PUSH2 0x14CE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE9E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE95 SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA7 DUP2 PUSH2 0x1555 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1013 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0xC25BEC5600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100A SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH0 ADD MLOAD SWAP1 POP PUSH0 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1065 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1089 SWAP2 SWAP1 PUSH2 0x1C45 JUMP JUMPDEST POP SWAP4 POP POP SWAP3 POP POP PUSH0 DUP3 SGT PUSH2 0x10C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x780CFA4700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 DUP2 TIMESTAMP PUSH2 0x10D8 SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST GT ISZERO PUSH2 0x1110 JUMPI PUSH1 0x40 MLOAD PUSH32 0x71A821DF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND PUSH1 0xA PUSH2 0x1124 SWAP2 SWAP1 PUSH2 0x1E1E JUMP JUMPDEST DUP3 DUP8 PUSH2 0x1130 SWAP2 SWAP1 PUSH2 0x1E68 JUMP JUMPDEST PUSH2 0x113A SWAP2 SWAP1 PUSH2 0x1ED6 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x1180 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFA4E609E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1207 SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1217 PUSH0 PUSH2 0x1616 JUMP JUMPDEST PUSH0 PUSH2 0x1222 DUP6 DUP5 PUSH2 0xEE4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1235 SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x127E JUMPI PUSH2 0x1279 DUP5 DUP5 PUSH2 0x16A4 JUMP JUMPDEST PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x12A9 DUP5 DUP5 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1755 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD1C19FBCD4551A5EDFB66D43D2E337C04837AFDA3482B42BDF569A8FCCDAE5FB DUP6 PUSH1 0x40 MLOAD PUSH2 0x1307 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1324 DUP5 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x17A8 JUMP JUMPDEST PUSH2 0x1365 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135C SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x13A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFA4E609E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x142C SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x143D PUSH1 0x1 PUSH2 0x1616 JUMP JUMPDEST PUSH0 PUSH2 0x1448 DUP6 DUP5 PUSH2 0xEE4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x145B SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8752A472E571A816AEA92EEC8DAE9BAF628E840F4929FBCC2D155E6233FF68A7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x14BF SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14D6 PUSH2 0x1819 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14F4 PUSH2 0xB46 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1553 JUMPI PUSH2 0x1517 PUSH2 0x1819 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154A SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1660 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x163D SWAP2 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x16A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x4 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x1682 SWAP2 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x16C9 SWAP1 PUSH2 0x1F6A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1703 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1750 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA36A1DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1747 SWAP3 SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1762 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x17A3 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179A SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 POP PUSH1 0x40 MLOAD DUP2 PUSH0 MSTORE PUSH0 NOT PUSH1 0x60 SHR DUP8 AND PUSH1 0x4 MSTORE PUSH0 NOT PUSH1 0x60 SHR DUP7 AND PUSH1 0x24 MSTORE DUP5 PUSH1 0x44 MSTORE PUSH1 0x20 PUSH0 PUSH1 0x64 PUSH0 PUSH0 DUP13 GAS CALL SWAP3 POP PUSH1 0x1 PUSH0 MLOAD EQ DUP4 AND PUSH2 0x1806 JUMPI DUP4 DUP4 ISZERO AND ISZERO PUSH2 0x17FA JUMPI RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST PUSH0 DUP9 EXTCODESIZE GT RETURNDATASIZE ISZERO AND DUP4 AND SWAP3 POP JUMPDEST DUP1 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x60 MSTORE POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 POP PUSH1 0x40 MLOAD DUP2 PUSH0 MSTORE PUSH0 NOT PUSH1 0x60 SHR DUP7 AND PUSH1 0x4 MSTORE DUP5 PUSH1 0x24 MSTORE PUSH1 0x20 PUSH0 PUSH1 0x44 PUSH0 PUSH0 DUP12 GAS CALL SWAP3 POP PUSH1 0x1 PUSH0 MLOAD EQ DUP4 AND PUSH2 0x1874 JUMPI DUP4 DUP4 ISZERO AND ISZERO PUSH2 0x1868 JUMPI RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST PUSH0 DUP8 EXTCODESIZE GT RETURNDATASIZE ISZERO AND DUP4 AND SWAP3 POP JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1894 DUP2 PUSH2 0x1882 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18AD PUSH0 DUP4 ADD DUP5 PUSH2 0x188B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x18C0 DUP2 PUSH2 0x1882 JUMP JUMPDEST DUP2 EQ PUSH2 0x18CA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18DB DUP2 PUSH2 0x18B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F6 JUMPI PUSH2 0x18F5 PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1903 DUP5 DUP3 DUP6 ADD PUSH2 0x18CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1935 DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1945 DUP2 PUSH2 0x192B JUMP JUMPDEST DUP2 EQ PUSH2 0x194F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1960 DUP2 PUSH2 0x193C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x197C JUMPI PUSH2 0x197B PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1989 DUP6 DUP3 DUP7 ADD PUSH2 0x1952 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x199A DUP6 DUP3 DUP7 ADD PUSH2 0x18CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B9 JUMPI PUSH2 0x19B8 PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19C6 DUP5 DUP3 DUP6 ADD PUSH2 0x1952 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19D8 DUP2 PUSH2 0x192B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19F3 DUP2 PUSH2 0x19DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A0C PUSH0 DUP4 ADD DUP6 PUSH2 0x19CF JUMP JUMPDEST PUSH2 0x1A19 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A38 DUP2 PUSH2 0x1A20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A51 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A6D JUMPI PUSH2 0x1A6C PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A7A DUP6 DUP3 DUP7 ADD PUSH2 0x1952 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A8B DUP6 DUP3 DUP7 ADD PUSH2 0x1952 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA8 PUSH0 DUP4 ADD DUP5 PUSH2 0x19CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AC1 PUSH0 DUP4 ADD DUP6 PUSH2 0x188B JUMP JUMPDEST PUSH2 0x1ACE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x188B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1AE8 PUSH0 DUP4 ADD DUP7 PUSH2 0x19CF JUMP JUMPDEST PUSH2 0x1AF5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x188B JUMP JUMPDEST PUSH2 0x1B02 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x188B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1B41 DUP3 PUSH2 0x1882 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B4C DUP4 PUSH2 0x1882 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B64 JUMPI PUSH2 0x1B63 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B73 DUP2 PUSH2 0x19DE JUMP JUMPDEST DUP2 EQ PUSH2 0x1B7D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B8E DUP2 PUSH2 0x1B6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BA9 JUMPI PUSH2 0x1BA8 PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BB6 DUP5 DUP3 DUP6 ADD PUSH2 0x1B80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BDD DUP2 PUSH2 0x1BBF JUMP JUMPDEST DUP2 EQ PUSH2 0x1BE7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BF8 DUP2 PUSH2 0x1BD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C10 DUP2 PUSH2 0x1BFE JUMP JUMPDEST DUP2 EQ PUSH2 0x1C1A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C2B DUP2 PUSH2 0x1C07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C3F DUP2 PUSH2 0x18B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C5E JUMPI PUSH2 0x1C5D PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C6B DUP9 DUP3 DUP10 ADD PUSH2 0x1BEA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1C7C DUP9 DUP3 DUP10 ADD PUSH2 0x1C1D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1C8D DUP9 DUP3 DUP10 ADD PUSH2 0x1C31 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1C9E DUP9 DUP3 DUP10 ADD PUSH2 0x1C31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1CAF DUP9 DUP3 DUP10 ADD PUSH2 0x1BEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC6 DUP3 PUSH2 0x1882 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD1 DUP4 PUSH2 0x1882 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CE9 JUMPI PUSH2 0x1CE8 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1D44 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1D20 JUMPI PUSH2 0x1D1F PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1D2F JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1D3D DUP6 PUSH2 0x1CEF JUMP JUMPDEST SWAP5 POP PUSH2 0x1D04 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1D5C JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1E17 JUMP JUMPDEST DUP2 PUSH2 0x1D69 JUMPI PUSH0 SWAP1 POP PUSH2 0x1E17 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1D7F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1D89 JUMPI PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1D9B JUMPI PUSH2 0x1D9A PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1DB2 JUMPI PUSH2 0x1DB1 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST POP PUSH2 0x1E17 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1DED JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1DE8 JUMPI PUSH2 0x1DE7 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST PUSH2 0x1E17 JUMP JUMPDEST PUSH2 0x1DFA DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1CFB JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1E11 JUMPI PUSH2 0x1E10 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E28 DUP3 PUSH2 0x1882 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E33 DUP4 PUSH2 0x1882 JUMP JUMPDEST SWAP3 POP PUSH2 0x1E60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1D4D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E72 DUP3 PUSH2 0x1882 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7D DUP4 PUSH2 0x1882 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1E8B DUP2 PUSH2 0x1882 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1EA2 JUMPI PUSH2 0x1EA1 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1EE0 DUP3 PUSH2 0x1882 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EEB DUP4 PUSH2 0x1882 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1EFB JUMPI PUSH2 0x1EFA PUSH2 0x1EA9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F10 DUP3 PUSH2 0x1A20 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1B DUP4 PUSH2 0x1A20 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH4 0xFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F37 JUMPI PUSH2 0x1F36 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1F55 PUSH0 DUP4 PUSH2 0x1F3D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F60 DUP3 PUSH2 0x1F47 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F74 DUP3 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F91 PUSH0 DUP4 ADD DUP6 PUSH2 0x19CF JUMP JUMPDEST PUSH2 0x1F9E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x188B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F SWAP8 DUP2 PUSH20 0xD3D9DC9D8161C2C78B234A24C431EFA919D509DE 0x2C SMOD SWAP14 EXTCALL EQ 0xD SHR MLOAD PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "838:13494:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14238:4;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:13494;14307:4;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9247:109;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8178:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7646:356;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2324:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3251:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1626:47;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2416:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2368:103:1;;;;;;;;;;;;;:::i;:::-;;9471:512:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8983:140;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1693:87:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8527:280:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1498:48;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2223:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7340:137;;;:::i;:::-;;3085:65;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2626:220:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2510:32:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2107:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10466:809;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9247:109;9300:7;9327:21;9320:28;;9247:109;:::o;8178:178::-;8242:7;6233:15;6223:7;:25;6219:121;;;6303:7;6312:15;6272:56;;;;;;;;;;;;:::i;:::-;;;;;;;;6219:121;1544:1:::1;8285:7;6517:10;:25;6528:13;6517:25;;;;;;;;;;;;;;;:37;6543:10;6517:37;;;;;;;;;;;;;;;;6507:7;:47;6503:179;;;6608:13;6623:7;6632:10;:25;6643:13;6632:25;;;;;;;;;;;;;;;:37;6658:10;6632:37;;;;;;;;;;;;;;;;6578:92;;;;;;;;;;;;;:::i;:::-;;;;;;;;6503:179;8305:43:::2;1544:1;8328:10;8340:7;8305:9;:43::i;:::-;6350:1:::1;;8178:178:::0;;:::o;7646:356::-;7731:13;7746:7;5820:21;5844:37;5858:13;5873:7;5844:13;:37::i;:::-;5820:61;;5940:9;5924:13;5906:15;;:31;;;;:::i;:::-;:43;5902:151;;;6016:13;5998:15;;:31;;;;:::i;:::-;6031:9;5973:68;;;;;;;;;;;;:::i;:::-;;;;;;;;5902:151;1544:1:::1;7770:28;;:13;:28;;::::0;7766:89:::1;;7822:21;;;;;;;;;;;;;;7766:89;7865:74;7904:10;7924:4;7931:7;7872:13;7865:38;;;;:74;;;;;;:::i;:::-;7950:44;7959:13;7974:10;7986:7;7950:8;:44::i;:::-;5809:263:::0;7646:356;;;;:::o;2324:30::-;;;;:::o;3251:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1626:47::-;1669:4;1626:47;:::o;2416:29::-;;;;;;;;;;;;;:::o;2368:103:1:-;1579:13;:11;:13::i;:::-;2433:30:::1;2460:1;2433:18;:30::i;:::-;2368:103::o:0;9471:512:10:-;1579:13:1;:11;:13::i;:::-;9573:14:10::1;1544:1;9602:28;;:13;:28;;::::0;9598:158:::1;;9658:2;9647:13;;9598:158;;;9719:13;9704:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9693:51;;9598:158;9768:22;9793:61;;;;;;;;9815:17;9793:61;;;;;;9844:8;9793:61;;;;::::0;9768:86:::1;;9894:5;9865:11;:26;9877:13;9865:26;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9957:17;9925:50;;9942:13;9925:50;;;;;;;;;;;;9562:421;;9471:512:::0;;:::o;8983:140::-;9051:7;9078:10;:25;9089:13;9078:25;;;;;;;;;;;;;;;:37;9104:10;9078:37;;;;;;;;;;;;;;;;9071:44;;8983:140;;;:::o;1693:87:1:-;1739:7;1766:6;;;;;;;;;;;1759:13;;1693:87;:::o;8527:280:10:-;8620:13;8635:7;6517:10;:25;6528:13;6517:25;;;;;;;;;;;;;;;:37;6543:10;6517:37;;;;;;;;;;;;;;;;6507:7;:47;6503:179;;;6608:13;6623:7;6632:10;:25;6643:13;6632:25;;;;;;;;;;;;;;;:37;6658:10;6632:37;;;;;;;;;;;;;;;;6578:92;;;;;;;;;;;;;:::i;:::-;;;;;;;;6503:179;1544:1:::1;8659:28;;:13;:28;;::::0;8655:89:::1;;8711:21;;;;;;;;;;;;;;8655:89;8754:45;8764:13;8779:10;8791:7;8754:9;:45::i;:::-;8527:280:::0;;;;:::o;1498:48::-;1544:1;1498:48;:::o;2223:40::-;;;:::o;7340:137::-;1544:1;7403:9;5820:21;5844:37;5858:13;5873:7;5844:13;:37::i;:::-;5820:61;;5940:9;5924:13;5906:15;;:31;;;;:::i;:::-;:43;5902:151;;;6016:13;5998:15;;:31;;;;:::i;:::-;6031:9;5973:68;;;;;;;;;;;;:::i;:::-;;;;;;;;5902:151;7425:44:::1;1544:1;7447:10;7459:9;7425:8;:44::i;:::-;5809:263:::0;7340:137;;:::o;3085:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2626:220:1:-;1579:13;:11;:13::i;:::-;2731:1:::1;2711:22;;:8;:22;;::::0;2707:93:::1;;2785:1;2757:31;;;;;;;;;;;:::i;:::-;;;;;;;;2707:93;2810:28;2829:8;2810:18;:28::i;:::-;2626:220:::0;:::o;2510:32:10:-;;;;;;;;;;;;;:::o;2107:34::-;;;:::o;10466:809::-;10550:7;10570:22;10595:11;:26;10607:13;10595:26;;;;;;;;;;;;;;;10570:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10673:1;10646:29;;:5;:15;;;:29;;;10642:109;;10725:13;10699:40;;;;;;;;;;;:::i;:::-;;;;;;;;10642:109;10771:31;10827:5;:15;;;10771:72;;10857:12;10873:17;10896:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10854:69;;;;;;;10949:1;10940:5;:10;10936:79;;10974:29;;;;;;;;;;;;;;10936:79;1669:4;11047:9;11029:15;:27;;;;:::i;:::-;:46;11025:108;;;11099:22;;;;;;;;;;;;;;11025:108;11251:5;:14;;;11243:23;;11239:2;:27;;;;:::i;:::-;11228:5;11210:7;:24;;;;:::i;:::-;11209:58;;;;:::i;:::-;11202:65;;;;;;10466:809;;;;:::o;12282:548::-;12379:7;6832:1;6821:7;:12;6817:91;;6857:39;;;;;;;;;;;;;;6817:91;12435:7:::1;12399:10;:25;12410:13;12399:25;;;;;;;;;;;;;;;:32;12425:5;12399:32;;;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;;;;;12453:22;12469:5;12453:15;:22::i;:::-;12488:13;12504:37;12518:13;12533:7;12504:13;:37::i;:::-;12488:53;;12571:5;12552:15;;:24;;;;;;;:::i;:::-;;;;;;;;1544:1;12593:28;;:13;:28;;::::0;12589:176:::1;;12638:32;12655:5;12662:7;12638:16;:32::i;:::-;12589:176;;;12703:50;12738:5;12745:7;12710:13;12703:34;;;;:50;;;;;:::i;:::-;12589:176;12807:5;12782:40;;12792:13;12782:40;;;12814:7;12782:40;;;;;;:::i;:::-;;;;;;;;12388:442;12282:548:::0;;;;:::o;1704:236:7:-;1810:47;1828:5;1835:4;1841:2;1845:5;1852:4;1810:17;:47::i;:::-;1805:128;;1914:5;1881:40;;;;;;;;;;;:::i;:::-;;;;;;;;1805:128;1704:236;;;;:::o;11736:358:10:-;11832:7;6832:1;6821:7;:12;6817:91;;6857:39;;;;;;;;;;;;;;6817:91;11888:7:::1;11852:10;:25;11863:13;11852:25;;;;;;;;;;;;;;;:32;11878:5;11852:32;;;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;;;;;11906:21;11922:4;11906:15;:21::i;:::-;11940:13;11956:37;11970:13;11985:7;11956:13;:37::i;:::-;11940:53;;12023:5;12004:15;;:24;;;;;;;:::i;:::-;;;;;;;;12071:5;12046:40;;12056:13;12046:40;;;12078:7;12046:40;;;;;;:::i;:::-;;;;;;;;11841:253;11736:358:::0;;;;:::o;1858:166:1:-;1929:12;:10;:12::i;:::-;1918:23;;:7;:5;:7::i;:::-;:23;;;1914:103;;1992:12;:10;:12::i;:::-;1965:40;;;;;;;;;;;:::i;:::-;;;;;;;;1914:103;1858:166::o;3006:191::-;3080:16;3099:6;;;;;;;;;;;3080:25;;3125:8;3116:6;;:17;;;;;;;;;;;;;;;;;;3180:8;3149:40;;3170:8;3149:40;;;;;;;;;;;;3069:128;3006:191;:::o;13245:185:10:-;13309:9;13305:118;;;13354:1;13335:15;;:20;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;13305:118;;;13410:1;13388:18;;:23;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;13305:118;13245:185;:::o;13554:214::-;13628:9;13643:2;:7;;13658:6;13643:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13627:42;;;13685:4;13680:81;;13738:2;13742:6;13713:36;;;;;;;;;;;;:::i;:::-;;;;;;;;13680:81;13616:152;13554:214;;:::o;1251:208:7:-;1339:37;1353:5;1360:2;1364:5;1371:4;1339:13;:37::i;:::-;1334:118;;1433:5;1400:40;;;;;;;;;;;:::i;:::-;;;;;;;;1334:118;1251:208;;;:::o;10376:1425::-;10540:12;10565:15;10583:28;;;10565:46;;10681:4;10675:11;10713:8;10707:4;10700:22;10771:1;10767:6;10763:2;10759:15;10753:4;10749:26;10743:4;10736:40;10823:1;10819:6;10815:2;10811:15;10807:2;10803:24;10797:4;10790:38;10855:5;10849:4;10842:19;10926:4;10920;10914;10908;10905:1;10898:5;10891;10886:45;10875:56;;11146:1;11139:4;11133:11;11130:18;11121:7;11117:32;11107:616;;11280:6;11270:7;11263:15;11259:28;11256:168;;;11337:16;11331:4;11326:3;11311:43;11388:16;11383:3;11376:29;11256:168;11704:1;11696:5;11684:18;11681:25;11662:16;11655:24;11651:56;11642:7;11638:70;11627:81;;11107:616;11750:3;11744:4;11737:17;11781:1;11775:4;11768:15;10649:1145;;10376:1425;;;;;;;:::o;672:98:8:-;725:7;752:10;745:17;;672:98;:::o;8548:1268:7:-;8642:12;8667:15;8685:24;;;8667:42;;8779:4;8773:11;8811:8;8805:4;8798:22;8867:1;8863:6;8859:2;8855:15;8851:2;8847:24;8841:4;8834:38;8899:5;8893:4;8886:19;8970:4;8964;8958;8952;8949:1;8942:5;8935;8930:45;8919:56;;9190:1;9183:4;9177:11;9174:18;9165:7;9161:32;9151:616;;9324:6;9314:7;9307:15;9303:28;9300:168;;;9381:16;9375:4;9370:3;9355:43;9432:16;9427:3;9420:29;9300:168;9748:1;9740:5;9728:18;9725:25;9706:16;9699:24;9695:56;9686:7;9682:70;9671:81;;9151:616;9794:3;9788:4;9781:17;8747:1062;;8548:1268;;;;;;:::o;7:77:11:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:474::-;1952:6;1960;2009:2;1997:9;1988:7;1984:23;1980:32;1977:119;;;2015:79;;:::i;:::-;1977:119;2135:1;2160:53;2205:7;2196:6;2185:9;2181:22;2160:53;:::i;:::-;2150:63;;2106:117;2262:2;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2233:118;1884:474;;;;;:::o;2364:329::-;2423:6;2472:2;2460:9;2451:7;2447:23;2443:32;2440:119;;;2478:79;;:::i;:::-;2440:119;2598:1;2623:53;2668:7;2659:6;2648:9;2644:22;2623:53;:::i;:::-;2613:63;;2569:117;2364:329;;;;:::o;2699:118::-;2786:24;2804:5;2786:24;:::i;:::-;2781:3;2774:37;2699:118;;:::o;2823:86::-;2858:7;2898:4;2891:5;2887:16;2876:27;;2823:86;;;:::o;2915:112::-;2998:22;3014:5;2998:22;:::i;:::-;2993:3;2986:35;2915:112;;:::o;3033:324::-;3150:4;3188:2;3177:9;3173:18;3165:26;;3201:71;3269:1;3258:9;3254:17;3245:6;3201:71;:::i;:::-;3282:68;3346:2;3335:9;3331:18;3322:6;3282:68;:::i;:::-;3033:324;;;;;:::o;3363:93::-;3399:7;3439:10;3432:5;3428:22;3417:33;;3363:93;;;:::o;3462:115::-;3547:23;3564:5;3547:23;:::i;:::-;3542:3;3535:36;3462:115;;:::o;3583:218::-;3674:4;3712:2;3701:9;3697:18;3689:26;;3725:69;3791:1;3780:9;3776:17;3767:6;3725:69;:::i;:::-;3583:218;;;;:::o;3807:474::-;3875:6;3883;3932:2;3920:9;3911:7;3907:23;3903:32;3900:119;;;3938:79;;:::i;:::-;3900:119;4058:1;4083:53;4128:7;4119:6;4108:9;4104:22;4083:53;:::i;:::-;4073:63;;4029:117;4185:2;4211:53;4256:7;4247:6;4236:9;4232:22;4211:53;:::i;:::-;4201:63;;4156:118;3807:474;;;;;:::o;4287:222::-;4380:4;4418:2;4407:9;4403:18;4395:26;;4431:71;4499:1;4488:9;4484:17;4475:6;4431:71;:::i;:::-;4287:222;;;;:::o;4515:332::-;4636:4;4674:2;4663:9;4659:18;4651:26;;4687:71;4755:1;4744:9;4740:17;4731:6;4687:71;:::i;:::-;4768:72;4836:2;4825:9;4821:18;4812:6;4768:72;:::i;:::-;4515:332;;;;;:::o;4853:442::-;5002:4;5040:2;5029:9;5025:18;5017:26;;5053:71;5121:1;5110:9;5106:17;5097:6;5053:71;:::i;:::-;5134:72;5202:2;5191:9;5187:18;5178:6;5134:72;:::i;:::-;5216;5284:2;5273:9;5269:18;5260:6;5216:72;:::i;:::-;4853:442;;;;;;:::o;5301:180::-;5349:77;5346:1;5339:88;5446:4;5443:1;5436:15;5470:4;5467:1;5460:15;5487:191;5527:3;5546:20;5564:1;5546:20;:::i;:::-;5541:25;;5580:20;5598:1;5580:20;:::i;:::-;5575:25;;5623:1;5620;5616:9;5609:16;;5644:3;5641:1;5638:10;5635:36;;;5651:18;;:::i;:::-;5635:36;5487:191;;;;:::o;5684:118::-;5755:22;5771:5;5755:22;:::i;:::-;5748:5;5745:33;5735:61;;5792:1;5789;5782:12;5735:61;5684:118;:::o;5808:139::-;5863:5;5894:6;5888:13;5879:22;;5910:31;5935:5;5910:31;:::i;:::-;5808:139;;;;:::o;5953:347::-;6021:6;6070:2;6058:9;6049:7;6045:23;6041:32;6038:119;;;6076:79;;:::i;:::-;6038:119;6196:1;6221:62;6275:7;6266:6;6255:9;6251:22;6221:62;:::i;:::-;6211:72;;6167:126;5953:347;;;;:::o;6306:105::-;6342:7;6382:22;6375:5;6371:34;6360:45;;6306:105;;;:::o;6417:120::-;6489:23;6506:5;6489:23;:::i;:::-;6482:5;6479:34;6469:62;;6527:1;6524;6517:12;6469:62;6417:120;:::o;6543:141::-;6599:5;6630:6;6624:13;6615:22;;6646:32;6672:5;6646:32;:::i;:::-;6543:141;;;;:::o;6690:76::-;6726:7;6755:5;6744:16;;6690:76;;;:::o;6772:120::-;6844:23;6861:5;6844:23;:::i;:::-;6837:5;6834:34;6824:62;;6882:1;6879;6872:12;6824:62;6772:120;:::o;6898:141::-;6954:5;6985:6;6979:13;6970:22;;7001:32;7027:5;7001:32;:::i;:::-;6898:141;;;;:::o;7045:143::-;7102:5;7133:6;7127:13;7118:22;;7149:33;7176:5;7149:33;:::i;:::-;7045:143;;;;:::o;7194:971::-;7297:6;7305;7313;7321;7329;7378:3;7366:9;7357:7;7353:23;7349:33;7346:120;;;7385:79;;:::i;:::-;7346:120;7505:1;7530:63;7585:7;7576:6;7565:9;7561:22;7530:63;:::i;:::-;7520:73;;7476:127;7642:2;7668:63;7723:7;7714:6;7703:9;7699:22;7668:63;:::i;:::-;7658:73;;7613:128;7780:2;7806:64;7862:7;7853:6;7842:9;7838:22;7806:64;:::i;:::-;7796:74;;7751:129;7919:2;7945:64;8001:7;7992:6;7981:9;7977:22;7945:64;:::i;:::-;7935:74;;7890:129;8058:3;8085:63;8140:7;8131:6;8120:9;8116:22;8085:63;:::i;:::-;8075:73;;8029:129;7194:971;;;;;;;;:::o;8171:194::-;8211:4;8231:20;8249:1;8231:20;:::i;:::-;8226:25;;8265:20;8283:1;8265:20;:::i;:::-;8260:25;;8309:1;8306;8302:9;8294:17;;8333:1;8327:4;8324:11;8321:37;;;8338:18;;:::i;:::-;8321:37;8171:194;;;;:::o;8371:102::-;8413:8;8460:5;8457:1;8453:13;8432:34;;8371:102;;;:::o;8479:848::-;8540:5;8547:4;8571:6;8562:15;;8595:5;8586:14;;8609:712;8630:1;8620:8;8617:15;8609:712;;;8725:4;8720:3;8716:14;8710:4;8707:24;8704:50;;;8734:18;;:::i;:::-;8704:50;8784:1;8774:8;8770:16;8767:451;;;9199:4;9192:5;9188:16;9179:25;;8767:451;9249:4;9243;9239:15;9231:23;;9279:32;9302:8;9279:32;:::i;:::-;9267:44;;8609:712;;;8479:848;;;;;;;:::o;9333:1073::-;9387:5;9578:8;9568:40;;9599:1;9590:10;;9601:5;;9568:40;9627:4;9617:36;;9644:1;9635:10;;9646:5;;9617:36;9713:4;9761:1;9756:27;;;;9797:1;9792:191;;;;9706:277;;9756:27;9774:1;9765:10;;9776:5;;;9792:191;9837:3;9827:8;9824:17;9821:43;;;9844:18;;:::i;:::-;9821:43;9893:8;9890:1;9886:16;9877:25;;9928:3;9921:5;9918:14;9915:40;;;9935:18;;:::i;:::-;9915:40;9968:5;;;9706:277;;10092:2;10082:8;10079:16;10073:3;10067:4;10064:13;10060:36;10042:2;10032:8;10029:16;10024:2;10018:4;10015:12;10011:35;9995:111;9992:246;;;10148:8;10142:4;10138:19;10129:28;;10183:3;10176:5;10173:14;10170:40;;;10190:18;;:::i;:::-;10170:40;10223:5;;9992:246;10263:42;10301:3;10291:8;10285:4;10282:1;10263:42;:::i;:::-;10248:57;;;;10337:4;10332:3;10328:14;10321:5;10318:25;10315:51;;;10346:18;;:::i;:::-;10315:51;10395:4;10388:5;10384:16;10375:25;;9333:1073;;;;;;:::o;10412:285::-;10472:5;10496:23;10514:4;10496:23;:::i;:::-;10488:31;;10540:27;10558:8;10540:27;:::i;:::-;10528:39;;10586:104;10623:66;10613:8;10607:4;10586:104;:::i;:::-;10577:113;;10412:285;;;;:::o;10703:410::-;10743:7;10766:20;10784:1;10766:20;:::i;:::-;10761:25;;10800:20;10818:1;10800:20;:::i;:::-;10795:25;;10855:1;10852;10848:9;10877:30;10895:11;10877:30;:::i;:::-;10866:41;;11056:1;11047:7;11043:15;11040:1;11037:22;11017:1;11010:9;10990:83;10967:139;;11086:18;;:::i;:::-;10967:139;10751:362;10703:410;;;;:::o;11119:180::-;11167:77;11164:1;11157:88;11264:4;11261:1;11254:15;11288:4;11285:1;11278:15;11305:185;11345:1;11362:20;11380:1;11362:20;:::i;:::-;11357:25;;11396:20;11414:1;11396:20;:::i;:::-;11391:25;;11435:1;11425:35;;11440:18;;:::i;:::-;11425:35;11482:1;11479;11475:9;11470:14;;11305:185;;;;:::o;11496:197::-;11535:3;11554:19;11571:1;11554:19;:::i;:::-;11549:24;;11587:19;11604:1;11587:19;:::i;:::-;11582:24;;11629:1;11626;11622:9;11615:16;;11652:10;11647:3;11644:19;11641:45;;;11666:18;;:::i;:::-;11641:45;11496:197;;;;:::o;11699:147::-;11800:11;11837:3;11822:18;;11699:147;;;;:::o;11852:114::-;;:::o;11972:398::-;12131:3;12152:83;12233:1;12228:3;12152:83;:::i;:::-;12145:90;;12244:93;12333:3;12244:93;:::i;:::-;12362:1;12357:3;12353:11;12346:18;;11972:398;;;:::o;12376:379::-;12560:3;12582:147;12725:3;12582:147;:::i;:::-;12575:154;;12746:3;12739:10;;12376:379;;;:::o;12761:332::-;12882:4;12920:2;12909:9;12905:18;12897:26;;12933:71;13001:1;12990:9;12986:17;12977:6;12933:71;:::i;:::-;13014:72;13082:2;13071:9;13067:18;13058:6;13014:72;:::i;:::-;12761:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1631000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"ETH_ADDRESS()": "439",
								"ORACLE_HEARTBEAT()": "348",
								"deposit()": "infinite",
								"depositToken(address,uint256)": "infinite",
								"getMyBalance(address)": "3027",
								"getTotalEthBalance()": "358",
								"getValueInUsd(address,uint256)": "infinite",
								"i_bankCap()": "infinite",
								"i_withdrawLimit()": "infinite",
								"owner()": "2537",
								"renounceOwnership()": "infinite",
								"s_balances(address,address)": "infinite",
								"s_tokenInfo(address)": "infinite",
								"s_totalDeposits()": "2511",
								"s_totalUsdValue()": "2515",
								"s_totalWithdrawals()": "2583",
								"setPriceFeed(address,address)": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw(uint256)": "infinite",
								"withdrawToken(address,uint256)": "infinite"
							},
							"internal": {
								"_deposit(address,address,uint256)": "infinite",
								"_safeTransferEth(address,uint256)": "infinite",
								"_updateCounters(bool)": "infinite",
								"_withdraw(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 838,
									"end": 14332,
									"name": "PUSH",
									"source": 10,
									"value": "C0"
								},
								{
									"begin": 838,
									"end": 14332,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 838,
									"end": 14332,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 5238,
									"end": 5394,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5300,
									"end": 5310,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1323,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1307,
									"end": 1404,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1307,
									"end": 1404,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1390,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1361,
									"end": 1392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1307,
									"end": 1404,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1307,
									"end": 1404,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1433,
									"end": 1445,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1414,
									"end": 1432,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1414,
									"end": 1432,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1414,
									"end": 1432,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1414,
									"end": 1446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5335,
									"end": 5343,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5323,
									"end": 5343,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 5323,
									"end": 5343,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5323,
									"end": 5343,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5323,
									"end": 5343,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5323,
									"end": 5343,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5323,
									"end": 5343,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5372,
									"end": 5386,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5354,
									"end": 5386,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 5354,
									"end": 5386,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5354,
									"end": 5386,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5354,
									"end": 5386,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5354,
									"end": 5386,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5354,
									"end": 5386,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5394,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 838,
									"end": 14332,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 838,
									"end": 14332,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3006,
									"end": 3197,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3006,
									"end": 3197,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3080,
									"end": 3096,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3080,
									"end": 3105,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3080,
									"end": 3105,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3125,
									"end": 3133,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3122,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3116,
									"end": 3122,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3180,
									"end": 3188,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3170,
									"end": 3178,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 3069,
									"end": 3197,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3006,
									"end": 3197,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3006,
									"end": 3197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 773,
									"end": 779,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 781,
									"end": 787,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 830,
									"end": 832,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 818,
									"end": 827,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 809,
									"end": 816,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 805,
									"end": 828,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 801,
									"end": 833,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 798,
									"end": 917,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 798,
									"end": 917,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 798,
									"end": 917,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 836,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 836,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 836,
									"end": 915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 836,
									"end": 915,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 836,
									"end": 915,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 798,
									"end": 917,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 798,
									"end": 917,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 956,
									"end": 957,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 1037,
									"end": 1044,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1028,
									"end": 1034,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1017,
									"end": 1026,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1013,
									"end": 1035,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 981,
									"end": 1045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 971,
									"end": 1045,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 971,
									"end": 1045,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 927,
									"end": 1055,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1094,
									"end": 1096,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 1176,
									"end": 1183,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1167,
									"end": 1173,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1156,
									"end": 1165,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1152,
									"end": 1174,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1120,
									"end": 1184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1110,
									"end": 1184,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1110,
									"end": 1184,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1065,
									"end": 1194,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 694,
									"end": 1201,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1207,
									"end": 1333,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1207,
									"end": 1333,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1244,
									"end": 1251,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1284,
									"end": 1326,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1277,
									"end": 1282,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1273,
									"end": 1327,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1262,
									"end": 1327,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1262,
									"end": 1327,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1207,
									"end": 1333,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1207,
									"end": 1333,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1207,
									"end": 1333,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1207,
									"end": 1333,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1339,
									"end": 1435,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1339,
									"end": 1435,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1376,
									"end": 1383,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1405,
									"end": 1429,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1405,
									"end": 1429,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1405,
									"end": 1429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1405,
									"end": 1429,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1405,
									"end": 1429,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1394,
									"end": 1429,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1394,
									"end": 1429,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1339,
									"end": 1435,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1339,
									"end": 1435,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1339,
									"end": 1435,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1339,
									"end": 1435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1441,
									"end": 1559,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 1441,
									"end": 1559,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1528,
									"end": 1552,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 1546,
									"end": 1551,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1528,
									"end": 1552,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1528,
									"end": 1552,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1528,
									"end": 1552,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 1528,
									"end": 1552,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1523,
									"end": 1526,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1516,
									"end": 1553,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1441,
									"end": 1559,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1441,
									"end": 1559,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1441,
									"end": 1559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1565,
									"end": 1787,
									"name": "tag",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 1565,
									"end": 1787,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1658,
									"end": 1662,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1696,
									"end": 1698,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1685,
									"end": 1694,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1699,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1673,
									"end": 1699,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1673,
									"end": 1699,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1709,
									"end": 1780,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 1777,
									"end": 1778,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1766,
									"end": 1775,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1762,
									"end": 1779,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1753,
									"end": 1759,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1709,
									"end": 1780,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 1709,
									"end": 1780,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1709,
									"end": 1780,
									"name": "tag",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 1709,
									"end": 1780,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1565,
									"end": 1787,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1565,
									"end": 1787,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1565,
									"end": 1787,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1565,
									"end": 1787,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1565,
									"end": 1787,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 838,
									"end": 14332,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 838,
									"end": 14332,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 838,
									"end": 14332,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 838,
									"end": 14332,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 838,
									"end": 14332,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 838,
									"end": 14332,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 838,
									"end": 14332,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 838,
									"end": 14332,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 838,
									"end": 14332,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 838,
									"end": 14332,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 838,
									"end": 14332,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 838,
									"end": 14332,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "914"
								},
								{
									"begin": 838,
									"end": 14332,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 838,
									"end": 14332,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "911"
								},
								{
									"begin": 838,
									"end": 14332,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 838,
									"end": 14332,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 838,
									"end": 14332,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204f978173d3d9dc9d8161c2c78b234a24c431efa919d509de2c079df8140d1c5164736f6c634300081e0033",
									".code": [
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "DCCD58E3"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "DCCD58E3"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "F3DB702C"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "F6687AF7"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "FE3192F6"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "9E281A98"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "A734F06E"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "C801FB40"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "D0E30DB0"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "4A83C3B7"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "4A83C3B7"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "52963C2B"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "76E11286"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "7E3EF7CD"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "287CC96B"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "2E1A7D4D"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "338B5DEA"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "3B1A4EC4"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH",
											"source": 10,
											"value": "432017CA"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14242,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14250,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14238,
											"end": 14250,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14250,
											"name": "PUSH",
											"source": 10,
											"value": "D0E30DB0"
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14252,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 838,
											"end": 14332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14311,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14319,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14307,
											"end": 14319,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14319,
											"name": "PUSH",
											"source": 10,
											"value": "D0E30DB0"
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14321,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 9247,
											"end": 9356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8178,
											"end": 8356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 8178,
											"end": 8356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 7646,
											"end": 8002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 7646,
											"end": 8002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 2324,
											"end": 2354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 3251,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 3251,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 3251,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1626,
											"end": 1673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1626,
											"end": 1673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 2416,
											"end": 2445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 2416,
											"end": 2445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2368,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 9471,
											"end": 9983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 9471,
											"end": 9983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 8983,
											"end": 9123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 8983,
											"end": 9123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8983,
											"end": 9123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1693,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1693,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 8527,
											"end": 8807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 8527,
											"end": 8807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1498,
											"end": 1546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1498,
											"end": 1546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2223,
											"end": 2263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2223,
											"end": 2263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 7340,
											"end": 7477,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 7340,
											"end": 7477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7340,
											"end": 7477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 7340,
											"end": 7477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 7340,
											"end": 7477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7340,
											"end": 7477,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 7340,
											"end": 7477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7340,
											"end": 7477,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 3085,
											"end": 3150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 3085,
											"end": 3150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2626,
											"end": 2846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2626,
											"end": 2846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 2510,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 2510,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2107,
											"end": 2141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2107,
											"end": 2141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 10466,
											"end": 11275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 10466,
											"end": 11275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10466,
											"end": 11275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9300,
											"end": 9307,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9327,
											"end": 9348,
											"name": "SELFBALANCE",
											"source": 10
										},
										{
											"begin": 9320,
											"end": 9348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9320,
											"end": 9348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9247,
											"end": 9356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8242,
											"end": 8249,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6233,
											"end": 6248,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "914"
										},
										{
											"begin": 6223,
											"end": 6230,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6223,
											"end": 6248,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6219,
											"end": 6340,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6219,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 6219,
											"end": 6340,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6303,
											"end": 6310,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6312,
											"end": 6327,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "914"
										},
										{
											"begin": 6272,
											"end": 6328,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6272,
											"end": 6328,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6328,
											"name": "PUSH",
											"source": 10,
											"value": "6310199600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6272,
											"end": 6328,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6328,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6328,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6272,
											"end": 6328,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 6272,
											"end": 6328,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6328,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6328,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 6272,
											"end": 6328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6328,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 6272,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6328,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6272,
											"end": 6328,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6328,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6328,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6328,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6328,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6328,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6219,
											"end": 6340,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 6219,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1544,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8285,
											"end": 8292,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6517,
											"end": 6542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6528,
											"end": 6541,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6517,
											"end": 6542,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6517,
											"end": 6542,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6542,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6542,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6517,
											"end": 6542,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6542,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6542,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6542,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6517,
											"end": 6542,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6517,
											"end": 6542,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6543,
											"end": 6553,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6517,
											"end": 6554,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6517,
											"end": 6554,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6517,
											"end": 6554,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6517,
											"end": 6554,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6517,
											"end": 6554,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6514,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6554,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6503,
											"end": 6682,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6503,
											"end": 6682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 6503,
											"end": 6682,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6608,
											"end": 6621,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6630,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6632,
											"end": 6657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6643,
											"end": 6656,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6632,
											"end": 6657,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6632,
											"end": 6657,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6657,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6657,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6632,
											"end": 6657,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6657,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6657,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6657,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6632,
											"end": 6657,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6632,
											"end": 6657,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6658,
											"end": 6668,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6632,
											"end": 6669,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6632,
											"end": 6669,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6632,
											"end": 6669,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6632,
											"end": 6669,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6632,
											"end": 6669,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5FEDAB0900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 6578,
											"end": 6670,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6503,
											"end": 6682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 6503,
											"end": 6682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8305,
											"end": 8348,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 1544,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8328,
											"end": 8338,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8340,
											"end": 8347,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8305,
											"end": 8314,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 8305,
											"end": 8348,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8305,
											"end": 8348,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 8305,
											"end": 8348,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6350,
											"end": 6351,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6350,
											"end": 6351,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7731,
											"end": 7744,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7746,
											"end": 7753,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5820,
											"end": 5841,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 5858,
											"end": 5871,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5873,
											"end": 5880,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5844,
											"end": 5857,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 5844,
											"end": 5881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5844,
											"end": 5881,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 5844,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5820,
											"end": 5881,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5820,
											"end": 5881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5940,
											"end": 5949,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "911"
										},
										{
											"begin": 5924,
											"end": 5937,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5906,
											"end": 5921,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5906,
											"end": 5921,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5906,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 5906,
											"end": 5937,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5906,
											"end": 5937,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5906,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 5906,
											"end": 5937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5906,
											"end": 5937,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 5906,
											"end": 5937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5906,
											"end": 5949,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 6053,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 5902,
											"end": 6053,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6016,
											"end": 6029,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5998,
											"end": 6013,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5998,
											"end": 6013,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 5998,
											"end": 6029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6040,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "911"
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "PUSH",
											"source": 10,
											"value": "F6167F4E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 5973,
											"end": 6041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 6053,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 5902,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1544,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7770,
											"end": 7798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7770,
											"end": 7798,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7770,
											"end": 7783,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7770,
											"end": 7798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7770,
											"end": 7798,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7770,
											"end": 7798,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7766,
											"end": 7855,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 7766,
											"end": 7855,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7822,
											"end": 7843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7822,
											"end": 7843,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7822,
											"end": 7843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7CB522E900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7822,
											"end": 7843,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7822,
											"end": 7843,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7822,
											"end": 7843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7822,
											"end": 7843,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7822,
											"end": 7843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7822,
											"end": 7843,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7822,
											"end": 7843,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7822,
											"end": 7843,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7822,
											"end": 7843,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7822,
											"end": 7843,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7822,
											"end": 7843,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7766,
											"end": 7855,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 7766,
											"end": 7855,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7865,
											"end": 7939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 7904,
											"end": 7914,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7924,
											"end": 7928,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 7931,
											"end": 7938,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7872,
											"end": 7885,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7865,
											"end": 7903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7865,
											"end": 7903,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7865,
											"end": 7903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 7865,
											"end": 7903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7865,
											"end": 7939,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7865,
											"end": 7939,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7865,
											"end": 7939,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7865,
											"end": 7939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7865,
											"end": 7939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7865,
											"end": 7939,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7865,
											"end": 7939,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7865,
											"end": 7939,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 7865,
											"end": 7939,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7950,
											"end": 7994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 7959,
											"end": 7972,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7974,
											"end": 7984,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7986,
											"end": 7993,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7950,
											"end": 7958,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 7950,
											"end": 7994,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7950,
											"end": 7994,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 7950,
											"end": 7994,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5809,
											"end": 6072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 8002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1669,
											"end": 1673,
											"name": "PUSH",
											"source": 10,
											"value": "E10"
										},
										{
											"begin": 1626,
											"end": 1673,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1579,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1579,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2460,
											"end": 2461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2433,
											"end": 2463,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2463,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2433,
											"end": 2463,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1579,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1579,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9573,
											"end": 9587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1544,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9602,
											"end": 9630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9602,
											"end": 9630,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9602,
											"end": 9615,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9602,
											"end": 9630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9602,
											"end": 9630,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9602,
											"end": 9630,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9598,
											"end": 9756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 9598,
											"end": 9756,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9658,
											"end": 9660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 9647,
											"end": 9660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9647,
											"end": 9660,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9598,
											"end": 9756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 9598,
											"end": 9756,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9598,
											"end": 9756,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 9598,
											"end": 9756,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9719,
											"end": 9732,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9704,
											"end": 9742,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 9704,
											"end": 9744,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 9704,
											"end": 9744,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9693,
											"end": 9744,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9693,
											"end": 9744,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9598,
											"end": 9756,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 9598,
											"end": 9756,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9768,
											"end": 9790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9793,
											"end": 9854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9793,
											"end": 9854,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9793,
											"end": 9854,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9793,
											"end": 9854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9793,
											"end": 9854,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9793,
											"end": 9854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9793,
											"end": 9854,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9793,
											"end": 9854,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9815,
											"end": 9832,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9793,
											"end": 9854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9793,
											"end": 9854,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9793,
											"end": 9854,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9793,
											"end": 9854,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9793,
											"end": 9854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9793,
											"end": 9854,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9844,
											"end": 9852,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9793,
											"end": 9854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 9793,
											"end": 9854,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9793,
											"end": 9854,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9793,
											"end": 9854,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9793,
											"end": 9854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9768,
											"end": 9854,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9768,
											"end": 9854,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9894,
											"end": 9899,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9865,
											"end": 9891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9877,
											"end": 9890,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9865,
											"end": 9891,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9865,
											"end": 9891,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9891,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9891,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9865,
											"end": 9891,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9891,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9891,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9865,
											"end": 9891,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9865,
											"end": 9891,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9899,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9957,
											"end": 9974,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9925,
											"end": 9975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9925,
											"end": 9975,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9942,
											"end": 9955,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9925,
											"end": 9975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9925,
											"end": 9975,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9925,
											"end": 9975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A8ABE0398416476DB5B05737CD4DA3B3CBDE5012D978A6A6C3FD49D321753536"
										},
										{
											"begin": 9925,
											"end": 9975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9925,
											"end": 9975,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9925,
											"end": 9975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9925,
											"end": 9975,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9925,
											"end": 9975,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9925,
											"end": 9975,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9925,
											"end": 9975,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9925,
											"end": 9975,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9925,
											"end": 9975,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 9562,
											"end": 9983,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9562,
											"end": 9983,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9051,
											"end": 9058,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9078,
											"end": 9088,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 9078,
											"end": 9103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9089,
											"end": 9102,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9103,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9078,
											"end": 9103,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9103,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9078,
											"end": 9103,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9103,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9103,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9103,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9078,
											"end": 9103,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9103,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9103,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9103,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9103,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9078,
											"end": 9103,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9078,
											"end": 9103,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9115,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9104,
											"end": 9114,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9115,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9078,
											"end": 9115,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9115,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9078,
											"end": 9115,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9115,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9115,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9115,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9078,
											"end": 9115,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9115,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9115,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9115,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9078,
											"end": 9115,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9115,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9078,
											"end": 9115,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9115,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9071,
											"end": 9115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9071,
											"end": 9115,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 9123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8620,
											"end": 8633,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8635,
											"end": 8642,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6527,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6528,
											"end": 6541,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6543,
											"end": 6553,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6517,
											"end": 6554,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6517,
											"end": 6554,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6517,
											"end": 6554,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6517,
											"end": 6554,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6517,
											"end": 6554,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6554,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6514,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6554,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6503,
											"end": 6682,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6503,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 6503,
											"end": 6682,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6608,
											"end": 6621,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6630,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6642,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6643,
											"end": 6656,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6658,
											"end": 6668,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6632,
											"end": 6669,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6632,
											"end": 6669,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6632,
											"end": 6669,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6632,
											"end": 6669,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6632,
											"end": 6669,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6669,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "PUSH",
											"source": 10,
											"value": "5FEDAB0900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 6578,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6670,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6503,
											"end": 6682,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 6503,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1544,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8659,
											"end": 8687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8659,
											"end": 8687,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8659,
											"end": 8672,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8659,
											"end": 8687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8659,
											"end": 8687,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8659,
											"end": 8687,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8655,
											"end": 8744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 8655,
											"end": 8744,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8711,
											"end": 8732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8732,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8711,
											"end": 8732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7CB522E900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8711,
											"end": 8732,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8711,
											"end": 8732,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8711,
											"end": 8732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8711,
											"end": 8732,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8711,
											"end": 8732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8732,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8711,
											"end": 8732,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8711,
											"end": 8732,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8711,
											"end": 8732,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8711,
											"end": 8732,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8711,
											"end": 8732,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8655,
											"end": 8744,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 8655,
											"end": 8744,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8754,
											"end": 8799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 8764,
											"end": 8777,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8779,
											"end": 8789,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8791,
											"end": 8798,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8754,
											"end": 8763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 8754,
											"end": 8799,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8754,
											"end": 8799,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 8754,
											"end": 8799,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1544,
											"end": 1545,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1546,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "914"
										},
										{
											"begin": 2223,
											"end": 2263,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7340,
											"end": 7477,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 7340,
											"end": 7477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1544,
											"end": 1545,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7403,
											"end": 7412,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 5820,
											"end": 5841,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 5858,
											"end": 5871,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5873,
											"end": 5880,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5844,
											"end": 5857,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 5844,
											"end": 5881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5844,
											"end": 5881,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 5844,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5820,
											"end": 5881,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5820,
											"end": 5881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5940,
											"end": 5949,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "911"
										},
										{
											"begin": 5924,
											"end": 5937,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5906,
											"end": 5921,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5906,
											"end": 5921,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5906,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 5906,
											"end": 5937,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5906,
											"end": 5937,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5906,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 5906,
											"end": 5937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5906,
											"end": 5937,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 5906,
											"end": 5937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5906,
											"end": 5949,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 6053,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 5902,
											"end": 6053,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6016,
											"end": 6029,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5998,
											"end": 6013,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5998,
											"end": 6013,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 5998,
											"end": 6029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6040,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "911"
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "PUSH",
											"source": 10,
											"value": "F6167F4E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 5973,
											"end": 6041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6041,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 6053,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 5902,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7425,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 1544,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7447,
											"end": 7457,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7459,
											"end": 7468,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 7425,
											"end": 7433,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 7425,
											"end": 7469,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7425,
											"end": 7469,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 7425,
											"end": 7469,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5809,
											"end": 6072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7340,
											"end": 7477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7340,
											"end": 7477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7340,
											"end": 7477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 1579,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1579,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2711,
											"end": 2733,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2719,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2711,
											"end": 2733,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2733,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 2707,
											"end": 2800,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2757,
											"end": 2788,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 2707,
											"end": 2800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2829,
											"end": 2837,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2810,
											"end": 2838,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2810,
											"end": 2838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "911"
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10550,
											"end": 10557,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10570,
											"end": 10592,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10595,
											"end": 10606,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10595,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10607,
											"end": 10620,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10595,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10595,
											"end": 10621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10595,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10595,
											"end": 10621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10595,
											"end": 10621,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10595,
											"end": 10621,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10595,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10595,
											"end": 10621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10595,
											"end": 10621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10595,
											"end": 10621,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10595,
											"end": 10621,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10595,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10595,
											"end": 10621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10595,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10595,
											"end": 10621,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10673,
											"end": 10674,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10646,
											"end": 10675,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10646,
											"end": 10675,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10646,
											"end": 10651,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10646,
											"end": 10661,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10646,
											"end": 10661,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10646,
											"end": 10661,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10646,
											"end": 10675,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10646,
											"end": 10675,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10646,
											"end": 10675,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10642,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 10642,
											"end": 10751,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10725,
											"end": 10738,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10699,
											"end": 10739,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10699,
											"end": 10739,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10699,
											"end": 10739,
											"name": "PUSH",
											"source": 10,
											"value": "C25BEC5600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10699,
											"end": 10739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10699,
											"end": 10739,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10699,
											"end": 10739,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10699,
											"end": 10739,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10699,
											"end": 10739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 10699,
											"end": 10739,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10699,
											"end": 10739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10699,
											"end": 10739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 10699,
											"end": 10739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10699,
											"end": 10739,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 10699,
											"end": 10739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10699,
											"end": 10739,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10699,
											"end": 10739,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10699,
											"end": 10739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10699,
											"end": 10739,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10699,
											"end": 10739,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10699,
											"end": 10739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10699,
											"end": 10739,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10642,
											"end": 10751,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 10642,
											"end": 10751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10771,
											"end": 10802,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10827,
											"end": 10832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10827,
											"end": 10842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10827,
											"end": 10842,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10827,
											"end": 10842,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10771,
											"end": 10843,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10771,
											"end": 10843,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10857,
											"end": 10869,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10873,
											"end": 10890,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10896,
											"end": 10905,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10921,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10896,
											"end": 10921,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10921,
											"name": "PUSH",
											"source": 10,
											"value": "FEAF968C"
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 10896,
											"end": 10923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 10896,
											"end": 10923,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10854,
											"end": 10923,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10854,
											"end": 10923,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10854,
											"end": 10923,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10854,
											"end": 10923,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10854,
											"end": 10923,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10854,
											"end": 10923,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10854,
											"end": 10923,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10949,
											"end": 10950,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10940,
											"end": 10945,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10940,
											"end": 10950,
											"name": "SGT",
											"source": 10
										},
										{
											"begin": 10936,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 10936,
											"end": 11015,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10974,
											"end": 11003,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10974,
											"end": 11003,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10974,
											"end": 11003,
											"name": "PUSH",
											"source": 10,
											"value": "780CFA4700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10974,
											"end": 11003,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10974,
											"end": 11003,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10974,
											"end": 11003,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10974,
											"end": 11003,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10974,
											"end": 11003,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10974,
											"end": 11003,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10974,
											"end": 11003,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10974,
											"end": 11003,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10974,
											"end": 11003,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10974,
											"end": 11003,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10974,
											"end": 11003,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10936,
											"end": 11015,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 10936,
											"end": 11015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1669,
											"end": 1673,
											"name": "PUSH",
											"source": 10,
											"value": "E10"
										},
										{
											"begin": 11047,
											"end": 11056,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11029,
											"end": 11044,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 11029,
											"end": 11056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 11029,
											"end": 11056,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11029,
											"end": 11056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11029,
											"end": 11056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 11029,
											"end": 11056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11029,
											"end": 11056,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 11029,
											"end": 11056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11029,
											"end": 11075,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11025,
											"end": 11133,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11025,
											"end": 11133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 11025,
											"end": 11133,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11121,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11099,
											"end": 11121,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11121,
											"name": "PUSH",
											"source": 10,
											"value": "71A821DF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11099,
											"end": 11121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11121,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11121,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11099,
											"end": 11121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11121,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11099,
											"end": 11121,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11121,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11121,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11121,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11121,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11025,
											"end": 11133,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 11025,
											"end": 11133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11251,
											"end": 11256,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11251,
											"end": 11265,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11251,
											"end": 11265,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11251,
											"end": 11265,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11243,
											"end": 11266,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 11243,
											"end": 11266,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11239,
											"end": 11241,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 11239,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 11239,
											"end": 11266,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11239,
											"end": 11266,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11239,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 11239,
											"end": 11266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11239,
											"end": 11266,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 11239,
											"end": 11266,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11228,
											"end": 11233,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11210,
											"end": 11217,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 11210,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 11210,
											"end": 11234,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11210,
											"end": 11234,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11210,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 11210,
											"end": 11234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11210,
											"end": 11234,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 11210,
											"end": 11234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11209,
											"end": 11267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 11209,
											"end": 11267,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11209,
											"end": 11267,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11209,
											"end": 11267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 11209,
											"end": 11267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11209,
											"end": 11267,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 11209,
											"end": 11267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11202,
											"end": 11267,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 11202,
											"end": 11267,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11202,
											"end": 11267,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11202,
											"end": 11267,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11202,
											"end": 11267,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11202,
											"end": 11267,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 11275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12830,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 12282,
											"end": 12830,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6832,
											"end": 6833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6821,
											"end": 6828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6821,
											"end": 6833,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 6817,
											"end": 6908,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "PUSH",
											"source": 10,
											"value": "FA4E609E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6908,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 6817,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12435,
											"end": 12442,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 12399,
											"end": 12424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12410,
											"end": 12423,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12399,
											"end": 12424,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12399,
											"end": 12424,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12424,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12424,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12399,
											"end": 12424,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12424,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12424,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12399,
											"end": 12424,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12399,
											"end": 12424,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12425,
											"end": 12430,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12399,
											"end": 12431,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12399,
											"end": 12431,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12431,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12431,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12399,
											"end": 12431,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12431,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12431,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12431,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12399,
											"end": 12431,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12399,
											"end": 12431,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12399,
											"end": 12442,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12442,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12442,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 12399,
											"end": 12442,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12442,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 12399,
											"end": 12442,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12442,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 12399,
											"end": 12442,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12442,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12442,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12442,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12442,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12442,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12442,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12442,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12453,
											"end": 12475,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 12469,
											"end": 12474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12453,
											"end": 12468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 12453,
											"end": 12475,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12453,
											"end": 12475,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 12453,
											"end": 12475,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12504,
											"end": 12541,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 12518,
											"end": 12531,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12540,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12504,
											"end": 12517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 12504,
											"end": 12541,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12504,
											"end": 12541,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 12504,
											"end": 12541,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12541,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12541,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12571,
											"end": 12576,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12552,
											"end": 12567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 12552,
											"end": 12567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12552,
											"end": 12576,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12552,
											"end": 12576,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12552,
											"end": 12576,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12552,
											"end": 12576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 12552,
											"end": 12576,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12552,
											"end": 12576,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12552,
											"end": 12576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 12552,
											"end": 12576,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12552,
											"end": 12576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 12552,
											"end": 12576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12552,
											"end": 12576,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12552,
											"end": 12576,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12552,
											"end": 12576,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12552,
											"end": 12576,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12552,
											"end": 12576,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12552,
											"end": 12576,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 12552,
											"end": 12576,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1544,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12593,
											"end": 12621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12593,
											"end": 12621,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12593,
											"end": 12606,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12593,
											"end": 12621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12593,
											"end": 12621,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12593,
											"end": 12621,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12589,
											"end": 12765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 12589,
											"end": 12765,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12638,
											"end": 12670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 12655,
											"end": 12660,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12662,
											"end": 12669,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12638,
											"end": 12654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 12638,
											"end": 12670,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12638,
											"end": 12670,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 12638,
											"end": 12670,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12589,
											"end": 12765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 12589,
											"end": 12765,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12589,
											"end": 12765,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 12589,
											"end": 12765,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 12738,
											"end": 12743,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12745,
											"end": 12752,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12710,
											"end": 12723,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12703,
											"end": 12737,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 12703,
											"end": 12737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12753,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12753,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12753,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12703,
											"end": 12753,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12753,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12753,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 12703,
											"end": 12753,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12589,
											"end": 12765,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 12589,
											"end": 12765,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12807,
											"end": 12812,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12782,
											"end": 12822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12782,
											"end": 12822,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12805,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12782,
											"end": 12822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12782,
											"end": 12822,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12782,
											"end": 12822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "D1C19FBCD4551A5EDFB66D43D2E337C04837AFDA3482B42BDF569A8FCCDAE5FB"
										},
										{
											"begin": 12814,
											"end": 12821,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12782,
											"end": 12822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12782,
											"end": 12822,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12782,
											"end": 12822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 12782,
											"end": 12822,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12782,
											"end": 12822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12782,
											"end": 12822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12782,
											"end": 12822,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12782,
											"end": 12822,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 12782,
											"end": 12822,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12782,
											"end": 12822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12782,
											"end": 12822,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12782,
											"end": 12822,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12782,
											"end": 12822,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12782,
											"end": 12822,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12782,
											"end": 12822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12782,
											"end": 12822,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 12388,
											"end": 12830,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1940,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1704,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 1828,
											"end": 1833,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1835,
											"end": 1839,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1850,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1852,
											"end": 1856,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1810,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1810,
											"end": 1857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1857,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 1810,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1805,
											"end": 1933,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1919,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1921,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1881,
											"end": 1921,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1921,
											"name": "PUSH",
											"source": 7,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1881,
											"end": 1921,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1921,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1921,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1881,
											"end": 1921,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 1881,
											"end": 1921,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1921,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1881,
											"end": 1921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1921,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 1881,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1921,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1881,
											"end": 1921,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1921,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1921,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1921,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1921,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1921,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1933,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1805,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1940,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1940,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1940,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1940,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11736,
											"end": 12094,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 11736,
											"end": 12094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11832,
											"end": 11839,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6832,
											"end": 6833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6821,
											"end": 6828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6821,
											"end": 6833,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 6817,
											"end": 6908,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "PUSH",
											"source": 10,
											"value": "FA4E609E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6896,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6908,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 6817,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11888,
											"end": 11895,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 11852,
											"end": 11877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11863,
											"end": 11876,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11852,
											"end": 11877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11852,
											"end": 11877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11877,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11877,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11852,
											"end": 11877,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11877,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11877,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11852,
											"end": 11877,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11852,
											"end": 11877,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11878,
											"end": 11883,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11852,
											"end": 11884,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11852,
											"end": 11884,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11884,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11884,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11852,
											"end": 11884,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11884,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11884,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11884,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11852,
											"end": 11884,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11852,
											"end": 11884,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11852,
											"end": 11895,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11895,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11895,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11895,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 11852,
											"end": 11895,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11895,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11895,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 11852,
											"end": 11895,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11895,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 11852,
											"end": 11895,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11895,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11895,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11895,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11895,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11895,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11895,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11895,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11906,
											"end": 11927,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 11922,
											"end": 11926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 11906,
											"end": 11921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 11906,
											"end": 11927,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11906,
											"end": 11927,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 11906,
											"end": 11927,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11940,
											"end": 11953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11956,
											"end": 11993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 11970,
											"end": 11983,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11985,
											"end": 11992,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11956,
											"end": 11969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 11956,
											"end": 11993,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11956,
											"end": 11993,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 11956,
											"end": 11993,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11940,
											"end": 11993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11940,
											"end": 11993,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12023,
											"end": 12028,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12004,
											"end": 12019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 12004,
											"end": 12019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12004,
											"end": 12028,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12004,
											"end": 12028,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12004,
											"end": 12028,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12004,
											"end": 12028,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 12004,
											"end": 12028,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12004,
											"end": 12028,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12004,
											"end": 12028,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 12004,
											"end": 12028,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12004,
											"end": 12028,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 12004,
											"end": 12028,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12004,
											"end": 12028,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12004,
											"end": 12028,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12004,
											"end": 12028,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12004,
											"end": 12028,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12004,
											"end": 12028,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12004,
											"end": 12028,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 12004,
											"end": 12028,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12071,
											"end": 12076,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12046,
											"end": 12086,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12056,
											"end": 12069,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12046,
											"end": 12086,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8752A472E571A816AEA92EEC8DAE9BAF628E840F4929FBCC2D155E6233FF68A7"
										},
										{
											"begin": 12078,
											"end": 12085,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12046,
											"end": 12086,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 12046,
											"end": 12086,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12046,
											"end": 12086,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12086,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 12046,
											"end": 12086,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12046,
											"end": 12086,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12086,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12086,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12086,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12086,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 11841,
											"end": 12094,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11736,
											"end": 12094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11736,
											"end": 12094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11736,
											"end": 12094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11736,
											"end": 12094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11736,
											"end": 12094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1858,
											"end": 2024,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1858,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 1929,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 1929,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 1929,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 1918,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1918,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 1914,
											"end": 2017,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 1992,
											"end": 2004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1965,
											"end": 2005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 2017,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 1914,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 2024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3197,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3006,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3096,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13245,
											"end": 13430,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 13245,
											"end": 13430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13309,
											"end": 13318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13305,
											"end": 13423,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13305,
											"end": 13423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 13305,
											"end": 13423,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13354,
											"end": 13355,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13335,
											"end": 13350,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 13335,
											"end": 13350,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 13335,
											"end": 13355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 13335,
											"end": 13355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13305,
											"end": 13423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 13305,
											"end": 13423,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13305,
											"end": 13423,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 13305,
											"end": 13423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13410,
											"end": 13411,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13388,
											"end": 13406,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 13388,
											"end": 13406,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 13388,
											"end": 13411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 13388,
											"end": 13411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13305,
											"end": 13423,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 13305,
											"end": 13423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13245,
											"end": 13430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13245,
											"end": 13430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13554,
											"end": 13768,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 13554,
											"end": 13768,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13628,
											"end": 13637,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13643,
											"end": 13645,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13650,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13643,
											"end": 13650,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13658,
											"end": 13664,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 13643,
											"end": 13669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13627,
											"end": 13669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13627,
											"end": 13669,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13627,
											"end": 13669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13685,
											"end": 13689,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13680,
											"end": 13761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 13680,
											"end": 13761,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13738,
											"end": 13740,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13742,
											"end": 13748,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13749,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13713,
											"end": 13749,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13749,
											"name": "PUSH",
											"source": 10,
											"value": "A36A1DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13713,
											"end": 13749,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13749,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13749,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13713,
											"end": 13749,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 13713,
											"end": 13749,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13749,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13749,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 13713,
											"end": 13749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13749,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 13713,
											"end": 13749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13749,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13713,
											"end": 13749,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13749,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13749,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13749,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13749,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13749,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13680,
											"end": 13761,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 13680,
											"end": 13761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13616,
											"end": 13768,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13554,
											"end": 13768,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13554,
											"end": 13768,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13554,
											"end": 13768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1459,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1251,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1339,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1353,
											"end": 1358,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1371,
											"end": 1375,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1339,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1339,
											"end": 1376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1339,
											"end": 1376,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1339,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1334,
											"end": 1452,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1440,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1400,
											"end": 1440,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1440,
											"name": "PUSH",
											"source": 7,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1400,
											"end": 1440,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1440,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1440,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1400,
											"end": 1440,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1400,
											"end": 1440,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1440,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1400,
											"end": 1440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1400,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1440,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1400,
											"end": 1440,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1440,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1440,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1440,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1440,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1440,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1452,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1334,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1251,
											"end": 1459,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1251,
											"end": 1459,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1251,
											"end": 1459,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1251,
											"end": 1459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10376,
											"end": 11801,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 10376,
											"end": 11801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10540,
											"end": 10552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10565,
											"end": 10580,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10583,
											"end": 10611,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 10583,
											"end": 10611,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 10583,
											"end": 10611,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 10565,
											"end": 10611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10565,
											"end": 10611,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10681,
											"end": 10685,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10675,
											"end": 10686,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10713,
											"end": 10721,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10707,
											"end": 10711,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10722,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10771,
											"end": 10772,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10767,
											"end": 10773,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 10763,
											"end": 10765,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10759,
											"end": 10774,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 10753,
											"end": 10757,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 10749,
											"end": 10775,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10743,
											"end": 10747,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10736,
											"end": 10776,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10823,
											"end": 10824,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10819,
											"end": 10825,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 10815,
											"end": 10817,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10811,
											"end": 10826,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 10807,
											"end": 10809,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10803,
											"end": 10827,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10797,
											"end": 10801,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10790,
											"end": 10828,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10849,
											"end": 10853,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10842,
											"end": 10861,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10926,
											"end": 10930,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10920,
											"end": 10924,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10914,
											"end": 10918,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10908,
											"end": 10912,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10905,
											"end": 10906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10898,
											"end": 10903,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 10891,
											"end": 10896,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 10886,
											"end": 10931,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 10875,
											"end": 10931,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10875,
											"end": 10931,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11146,
											"end": 11147,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11139,
											"end": 11143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11133,
											"end": 11144,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11130,
											"end": 11148,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 11121,
											"end": 11128,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11117,
											"end": 11149,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11107,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 11107,
											"end": 11723,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11280,
											"end": 11286,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11270,
											"end": 11277,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11263,
											"end": 11278,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11259,
											"end": 11287,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11256,
											"end": 11424,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11256,
											"end": 11424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 11256,
											"end": 11424,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11331,
											"end": 11335,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11326,
											"end": 11329,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11311,
											"end": 11354,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 11388,
											"end": 11404,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11383,
											"end": 11386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11376,
											"end": 11405,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11256,
											"end": 11424,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 11256,
											"end": 11424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11704,
											"end": 11705,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11696,
											"end": 11701,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 11684,
											"end": 11702,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 11681,
											"end": 11706,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11662,
											"end": 11678,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11655,
											"end": 11679,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11651,
											"end": 11707,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11642,
											"end": 11649,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11638,
											"end": 11708,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11627,
											"end": 11708,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11627,
											"end": 11708,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11107,
											"end": 11723,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 11107,
											"end": 11723,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11750,
											"end": 11753,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11744,
											"end": 11748,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11737,
											"end": 11754,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11781,
											"end": 11782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11775,
											"end": 11779,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 11768,
											"end": 11783,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10649,
											"end": 11794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10649,
											"end": 11794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10376,
											"end": 11801,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 10376,
											"end": 11801,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 10376,
											"end": 11801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10376,
											"end": 11801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10376,
											"end": 11801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10376,
											"end": 11801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10376,
											"end": 11801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10376,
											"end": 11801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 672,
											"end": 770,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 672,
											"end": 770,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 725,
											"end": 732,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 745,
											"end": 762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 745,
											"end": 762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 672,
											"end": 770,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 672,
											"end": 770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8548,
											"end": 9816,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 8548,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8642,
											"end": 8654,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8667,
											"end": 8682,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8685,
											"end": 8709,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 8685,
											"end": 8709,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 8685,
											"end": 8709,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 8667,
											"end": 8709,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8667,
											"end": 8709,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8779,
											"end": 8783,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8773,
											"end": 8784,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8811,
											"end": 8819,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8805,
											"end": 8809,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8798,
											"end": 8820,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8867,
											"end": 8868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8863,
											"end": 8869,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 8859,
											"end": 8861,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8855,
											"end": 8870,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 8851,
											"end": 8853,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8847,
											"end": 8871,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8841,
											"end": 8845,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8834,
											"end": 8872,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8899,
											"end": 8904,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8893,
											"end": 8897,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8886,
											"end": 8905,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8970,
											"end": 8974,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8964,
											"end": 8968,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8958,
											"end": 8962,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8952,
											"end": 8956,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8949,
											"end": 8950,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8947,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 8935,
											"end": 8940,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8930,
											"end": 8975,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 8919,
											"end": 8975,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8919,
											"end": 8975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9190,
											"end": 9191,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9183,
											"end": 9187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9177,
											"end": 9188,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9192,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9165,
											"end": 9172,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9161,
											"end": 9193,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9151,
											"end": 9767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 9151,
											"end": 9767,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9330,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9307,
											"end": 9322,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9303,
											"end": 9331,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9300,
											"end": 9468,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9300,
											"end": 9468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 9300,
											"end": 9468,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9381,
											"end": 9397,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9379,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9370,
											"end": 9373,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9355,
											"end": 9398,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 9432,
											"end": 9448,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9427,
											"end": 9430,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9420,
											"end": 9449,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9300,
											"end": 9468,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 9300,
											"end": 9468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9748,
											"end": 9749,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9740,
											"end": 9745,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 9728,
											"end": 9746,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 9725,
											"end": 9750,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9706,
											"end": 9722,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9699,
											"end": 9723,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9695,
											"end": 9751,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9693,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9682,
											"end": 9752,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9671,
											"end": 9752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9671,
											"end": 9752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9151,
											"end": 9767,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 9151,
											"end": 9767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9794,
											"end": 9797,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9788,
											"end": 9792,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9781,
											"end": 9798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8747,
											"end": 9809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8747,
											"end": 9809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8548,
											"end": 9816,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8548,
											"end": 9816,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8548,
											"end": 9816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8548,
											"end": 9816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8548,
											"end": 9816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8548,
											"end": 9816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8548,
											"end": 9816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2011,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1997,
											"end": 2006,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1984,
											"end": 2007,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1980,
											"end": 2012,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 2015,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 2205,
											"end": 2212,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2196,
											"end": 2202,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2181,
											"end": 2203,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 2160,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2223,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2262,
											"end": 2264,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2233,
											"end": 2351,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2423,
											"end": 2429,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2458,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2470,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2475,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 2478,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 2668,
											"end": 2675,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 2623,
											"end": 2676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2569,
											"end": 2686,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2364,
											"end": 2693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 2804,
											"end": 2809,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 2786,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 2784,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2774,
											"end": 2811,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2909,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 2823,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2902,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2891,
											"end": 2896,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2887,
											"end": 2903,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2876,
											"end": 2903,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2876,
											"end": 2903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2909,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2909,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2909,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 3027,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 2915,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2998,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 3014,
											"end": 3019,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2998,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 2998,
											"end": 3020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2998,
											"end": 3020,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 2998,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2993,
											"end": 2996,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2986,
											"end": 3021,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 3027,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 3027,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 3027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3357,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 3033,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3150,
											"end": 3154,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3190,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3177,
											"end": 3186,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3173,
											"end": 3191,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3165,
											"end": 3191,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3165,
											"end": 3191,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3201,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 3269,
											"end": 3270,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3267,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3254,
											"end": 3271,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3245,
											"end": 3251,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3201,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 3201,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3201,
											"end": 3272,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 3201,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3282,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 3346,
											"end": 3348,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3335,
											"end": 3344,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3331,
											"end": 3349,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3328,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3282,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 3282,
											"end": 3350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3282,
											"end": 3350,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 3282,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3357,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3357,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3357,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3357,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3357,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3363,
											"end": 3456,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 3363,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3399,
											"end": 3406,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3439,
											"end": 3449,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3432,
											"end": 3437,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3428,
											"end": 3450,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3450,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3450,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3363,
											"end": 3456,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3363,
											"end": 3456,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3363,
											"end": 3456,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3363,
											"end": 3456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3577,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 3462,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3547,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 3564,
											"end": 3569,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3547,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 3547,
											"end": 3570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3547,
											"end": 3570,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 3547,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3545,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3571,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3577,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3577,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3583,
											"end": 3801,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 3583,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3678,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3714,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3701,
											"end": 3710,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3697,
											"end": 3715,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3689,
											"end": 3715,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3689,
											"end": 3715,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3725,
											"end": 3794,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 3791,
											"end": 3792,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3780,
											"end": 3789,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 3793,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3773,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3725,
											"end": 3794,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 3725,
											"end": 3794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3725,
											"end": 3794,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 3725,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3583,
											"end": 3801,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3583,
											"end": 3801,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3583,
											"end": 3801,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3583,
											"end": 3801,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3583,
											"end": 3801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3807,
											"end": 4281,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 3807,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3932,
											"end": 3934,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3920,
											"end": 3929,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3911,
											"end": 3918,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3907,
											"end": 3930,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3903,
											"end": 3935,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3900,
											"end": 4019,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3900,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 3900,
											"end": 4019,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3938,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 3938,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 3938,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3938,
											"end": 4017,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 3938,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3900,
											"end": 4019,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 3900,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4059,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 4128,
											"end": 4135,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4108,
											"end": 4117,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4104,
											"end": 4126,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4083,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 4083,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4083,
											"end": 4136,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 4083,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4073,
											"end": 4136,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4073,
											"end": 4136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4029,
											"end": 4146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4187,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4211,
											"end": 4264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 4256,
											"end": 4263,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4247,
											"end": 4253,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4245,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4232,
											"end": 4254,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4211,
											"end": 4264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 4211,
											"end": 4264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4211,
											"end": 4264,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 4211,
											"end": 4264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4201,
											"end": 4264,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4201,
											"end": 4264,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4156,
											"end": 4274,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3807,
											"end": 4281,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3807,
											"end": 4281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3807,
											"end": 4281,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3807,
											"end": 4281,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3807,
											"end": 4281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3807,
											"end": 4281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4287,
											"end": 4509,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 4287,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4380,
											"end": 4384,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4420,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4407,
											"end": 4416,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4421,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4421,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4431,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 4499,
											"end": 4500,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4488,
											"end": 4497,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4475,
											"end": 4481,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4431,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 4431,
											"end": 4502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4431,
											"end": 4502,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 4431,
											"end": 4502,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4287,
											"end": 4509,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4287,
											"end": 4509,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4287,
											"end": 4509,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4287,
											"end": 4509,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4287,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4515,
											"end": 4847,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 4515,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4636,
											"end": 4640,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4674,
											"end": 4676,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4663,
											"end": 4672,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4659,
											"end": 4677,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4651,
											"end": 4677,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4651,
											"end": 4677,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4687,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 4755,
											"end": 4756,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4744,
											"end": 4753,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4740,
											"end": 4757,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4731,
											"end": 4737,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4687,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 4687,
											"end": 4758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4687,
											"end": 4758,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 4687,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 4836,
											"end": 4838,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4825,
											"end": 4834,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4821,
											"end": 4839,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4818,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 4768,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4840,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 4768,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4515,
											"end": 4847,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4515,
											"end": 4847,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4515,
											"end": 4847,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4515,
											"end": 4847,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4515,
											"end": 4847,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4515,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4853,
											"end": 5295,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 4853,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5002,
											"end": 5006,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5040,
											"end": 5042,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5029,
											"end": 5038,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5025,
											"end": 5043,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5017,
											"end": 5043,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5017,
											"end": 5043,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5053,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 5121,
											"end": 5122,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5110,
											"end": 5119,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5106,
											"end": 5123,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5097,
											"end": 5103,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5053,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 5053,
											"end": 5124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5053,
											"end": 5124,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 5053,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5134,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 5202,
											"end": 5204,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5191,
											"end": 5200,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5187,
											"end": 5205,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5178,
											"end": 5184,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5134,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 5134,
											"end": 5206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5134,
											"end": 5206,
											"name": "tag",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 5134,
											"end": 5206,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5216,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 5284,
											"end": 5286,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5273,
											"end": 5282,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5269,
											"end": 5287,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5260,
											"end": 5266,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5216,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 5216,
											"end": 5288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5216,
											"end": 5288,
											"name": "tag",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 5216,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4853,
											"end": 5295,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 4853,
											"end": 5295,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4853,
											"end": 5295,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4853,
											"end": 5295,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4853,
											"end": 5295,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4853,
											"end": 5295,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4853,
											"end": 5295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5301,
											"end": 5481,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 5301,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5349,
											"end": 5426,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5346,
											"end": 5347,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5339,
											"end": 5427,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5446,
											"end": 5450,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 5443,
											"end": 5444,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5436,
											"end": 5451,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5470,
											"end": 5474,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5467,
											"end": 5468,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5475,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5678,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 5487,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5527,
											"end": 5530,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5546,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 5564,
											"end": 5565,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5546,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 5546,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5546,
											"end": 5566,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 5546,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5541,
											"end": 5566,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5541,
											"end": 5566,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 5598,
											"end": 5599,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 5580,
											"end": 5600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5623,
											"end": 5624,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5616,
											"end": 5625,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5609,
											"end": 5625,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5609,
											"end": 5625,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5644,
											"end": 5647,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5641,
											"end": 5642,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5638,
											"end": 5648,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5671,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 5635,
											"end": 5671,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5651,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 5651,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 5651,
											"end": 5669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5651,
											"end": 5669,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 5651,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5671,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 5635,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5678,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5678,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5678,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5678,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5684,
											"end": 5802,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 5684,
											"end": 5802,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5755,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 5771,
											"end": 5776,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5755,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 5755,
											"end": 5777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5755,
											"end": 5777,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 5755,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5748,
											"end": 5753,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5745,
											"end": 5778,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5735,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 5735,
											"end": 5796,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5792,
											"end": 5793,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5790,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5782,
											"end": 5794,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5735,
											"end": 5796,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 5735,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5684,
											"end": 5802,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5684,
											"end": 5802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5808,
											"end": 5947,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 5808,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5863,
											"end": 5868,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5894,
											"end": 5900,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5888,
											"end": 5901,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5879,
											"end": 5901,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5879,
											"end": 5901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 5910,
											"end": 5941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5941,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 5910,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5808,
											"end": 5947,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5808,
											"end": 5947,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5808,
											"end": 5947,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5808,
											"end": 5947,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5808,
											"end": 5947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5953,
											"end": 6300,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 5953,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6021,
											"end": 6027,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6058,
											"end": 6067,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6049,
											"end": 6056,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6045,
											"end": 6068,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6041,
											"end": 6073,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6157,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 6038,
											"end": 6157,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6076,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 6076,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 6076,
											"end": 6155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6076,
											"end": 6155,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 6076,
											"end": 6155,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6157,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 6038,
											"end": 6157,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6196,
											"end": 6197,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 6275,
											"end": 6282,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6272,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6255,
											"end": 6264,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6251,
											"end": 6273,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6221,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 6221,
											"end": 6283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6221,
											"end": 6283,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 6221,
											"end": 6283,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6211,
											"end": 6283,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6211,
											"end": 6283,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6167,
											"end": 6293,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5953,
											"end": 6300,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5953,
											"end": 6300,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5953,
											"end": 6300,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5953,
											"end": 6300,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5953,
											"end": 6300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6411,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 6306,
											"end": 6411,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6342,
											"end": 6349,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6382,
											"end": 6404,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6375,
											"end": 6380,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6371,
											"end": 6405,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6360,
											"end": 6405,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6360,
											"end": 6405,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6411,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6411,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6411,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6417,
											"end": 6537,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 6417,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6489,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 6506,
											"end": 6511,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6489,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 6489,
											"end": 6512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6489,
											"end": 6512,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 6489,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6482,
											"end": 6487,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6479,
											"end": 6513,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 6469,
											"end": 6531,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 6469,
											"end": 6531,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6527,
											"end": 6528,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6524,
											"end": 6525,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6517,
											"end": 6529,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6469,
											"end": 6531,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 6469,
											"end": 6531,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6417,
											"end": 6537,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6417,
											"end": 6537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6684,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 6543,
											"end": 6684,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6599,
											"end": 6604,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6636,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6624,
											"end": 6637,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6615,
											"end": 6637,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6615,
											"end": 6637,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6646,
											"end": 6678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 6672,
											"end": 6677,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6646,
											"end": 6678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 6646,
											"end": 6678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6646,
											"end": 6678,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 6646,
											"end": 6678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6684,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6684,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6684,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6684,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6690,
											"end": 6766,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 6690,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6726,
											"end": 6733,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6755,
											"end": 6760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6690,
											"end": 6766,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6690,
											"end": 6766,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6690,
											"end": 6766,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6690,
											"end": 6766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6772,
											"end": 6892,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 6772,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6844,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 6861,
											"end": 6866,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6844,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 6844,
											"end": 6867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6844,
											"end": 6867,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 6844,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6837,
											"end": 6842,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6834,
											"end": 6868,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 6824,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 6824,
											"end": 6886,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6882,
											"end": 6883,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6879,
											"end": 6880,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6872,
											"end": 6884,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6824,
											"end": 6886,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 6824,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6772,
											"end": 6892,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6772,
											"end": 6892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6898,
											"end": 7039,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 6898,
											"end": 7039,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6954,
											"end": 6959,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6985,
											"end": 6991,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6979,
											"end": 6992,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6970,
											"end": 6992,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6970,
											"end": 6992,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7001,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 7027,
											"end": 7032,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7001,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 7001,
											"end": 7033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7001,
											"end": 7033,
											"name": "tag",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 7001,
											"end": 7033,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6898,
											"end": 7039,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6898,
											"end": 7039,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6898,
											"end": 7039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6898,
											"end": 7039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6898,
											"end": 7039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7045,
											"end": 7188,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 7045,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7133,
											"end": 7139,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7127,
											"end": 7140,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7118,
											"end": 7140,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7118,
											"end": 7140,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7149,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 7176,
											"end": 7181,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7149,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 7149,
											"end": 7182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7149,
											"end": 7182,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 7149,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7045,
											"end": 7188,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7045,
											"end": 7188,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7045,
											"end": 7188,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7045,
											"end": 7188,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7045,
											"end": 7188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7194,
											"end": 8165,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 7194,
											"end": 8165,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7297,
											"end": 7303,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7305,
											"end": 7311,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7313,
											"end": 7319,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7329,
											"end": 7335,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 7366,
											"end": 7375,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7357,
											"end": 7364,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7376,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7349,
											"end": 7382,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7346,
											"end": 7466,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7346,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 7346,
											"end": 7466,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7385,
											"end": 7464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 7385,
											"end": 7464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 7385,
											"end": 7464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7385,
											"end": 7464,
											"name": "tag",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 7385,
											"end": 7464,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7346,
											"end": 7466,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 7346,
											"end": 7466,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7530,
											"end": 7593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 7585,
											"end": 7592,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7576,
											"end": 7582,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7565,
											"end": 7574,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 7561,
											"end": 7583,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7530,
											"end": 7593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 7530,
											"end": 7593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7530,
											"end": 7593,
											"name": "tag",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 7530,
											"end": 7593,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7520,
											"end": 7593,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 7520,
											"end": 7593,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7476,
											"end": 7603,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7642,
											"end": 7644,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7668,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 7723,
											"end": 7730,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7714,
											"end": 7720,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7703,
											"end": 7712,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 7699,
											"end": 7721,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7668,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 7668,
											"end": 7731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7668,
											"end": 7731,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 7668,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7658,
											"end": 7731,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 7658,
											"end": 7731,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7613,
											"end": 7741,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7780,
											"end": 7782,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7806,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 7862,
											"end": 7869,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7853,
											"end": 7859,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7842,
											"end": 7851,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 7838,
											"end": 7860,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7806,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 7806,
											"end": 7870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7806,
											"end": 7870,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 7806,
											"end": 7870,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7796,
											"end": 7870,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7796,
											"end": 7870,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7751,
											"end": 7880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7919,
											"end": 7921,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7945,
											"end": 8009,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 8001,
											"end": 8008,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7992,
											"end": 7998,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7981,
											"end": 7990,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 7977,
											"end": 7999,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7945,
											"end": 8009,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 7945,
											"end": 8009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7945,
											"end": 8009,
											"name": "tag",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 7945,
											"end": 8009,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7935,
											"end": 8009,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7935,
											"end": 8009,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7890,
											"end": 8019,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8058,
											"end": 8061,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 8085,
											"end": 8148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 8140,
											"end": 8147,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8131,
											"end": 8137,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8120,
											"end": 8129,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 8116,
											"end": 8138,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8085,
											"end": 8148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 8085,
											"end": 8148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8085,
											"end": 8148,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 8085,
											"end": 8148,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8075,
											"end": 8148,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8075,
											"end": 8148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8029,
											"end": 8158,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7194,
											"end": 8165,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7194,
											"end": 8165,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 7194,
											"end": 8165,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7194,
											"end": 8165,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7194,
											"end": 8165,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 7194,
											"end": 8165,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7194,
											"end": 8165,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7194,
											"end": 8165,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7194,
											"end": 8165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8171,
											"end": 8365,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 8171,
											"end": 8365,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8211,
											"end": 8215,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8231,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 8249,
											"end": 8250,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8231,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 8231,
											"end": 8251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8231,
											"end": 8251,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 8231,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8226,
											"end": 8251,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8226,
											"end": 8251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8265,
											"end": 8285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 8283,
											"end": 8284,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8265,
											"end": 8285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 8265,
											"end": 8285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8265,
											"end": 8285,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 8265,
											"end": 8285,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8260,
											"end": 8285,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8260,
											"end": 8285,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8309,
											"end": 8310,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8302,
											"end": 8311,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8294,
											"end": 8311,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8294,
											"end": 8311,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8333,
											"end": 8334,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8327,
											"end": 8331,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8324,
											"end": 8335,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8358,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 8321,
											"end": 8358,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 8338,
											"end": 8356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8358,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 8321,
											"end": 8358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8171,
											"end": 8365,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8171,
											"end": 8365,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8171,
											"end": 8365,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8171,
											"end": 8365,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8171,
											"end": 8365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8473,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 8371,
											"end": 8473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8413,
											"end": 8421,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8460,
											"end": 8465,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8457,
											"end": 8458,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8453,
											"end": 8466,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 8432,
											"end": 8466,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8432,
											"end": 8466,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8473,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8473,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8473,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8479,
											"end": 9327,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 8479,
											"end": 9327,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8540,
											"end": 8545,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8547,
											"end": 8551,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8571,
											"end": 8577,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8562,
											"end": 8577,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8562,
											"end": 8577,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8595,
											"end": 8600,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8586,
											"end": 8600,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8586,
											"end": 8600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8609,
											"end": 9321,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 8609,
											"end": 9321,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8630,
											"end": 8631,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8620,
											"end": 8628,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8617,
											"end": 8632,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8609,
											"end": 9321,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8609,
											"end": 9321,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 8609,
											"end": 9321,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8725,
											"end": 8729,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8720,
											"end": 8723,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8716,
											"end": 8730,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 8710,
											"end": 8714,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8707,
											"end": 8731,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8704,
											"end": 8754,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8704,
											"end": 8754,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 8704,
											"end": 8754,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8734,
											"end": 8752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 8734,
											"end": 8752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 8734,
											"end": 8752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8734,
											"end": 8752,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 8734,
											"end": 8752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8704,
											"end": 8754,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 8704,
											"end": 8754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8784,
											"end": 8785,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8774,
											"end": 8782,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8770,
											"end": 8786,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8767,
											"end": 9218,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8767,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 8767,
											"end": 9218,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9199,
											"end": 9203,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9192,
											"end": 9197,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9188,
											"end": 9204,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 9179,
											"end": 9204,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9179,
											"end": 9204,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8767,
											"end": 9218,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 8767,
											"end": 9218,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9249,
											"end": 9253,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9243,
											"end": 9247,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9239,
											"end": 9254,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 9231,
											"end": 9254,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9231,
											"end": 9254,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9279,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 9302,
											"end": 9310,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9279,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 9279,
											"end": 9311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9279,
											"end": 9311,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 9279,
											"end": 9311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9267,
											"end": 9311,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 9267,
											"end": 9311,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8609,
											"end": 9321,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 8609,
											"end": 9321,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8609,
											"end": 9321,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 8609,
											"end": 9321,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8479,
											"end": 9327,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8479,
											"end": 9327,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8479,
											"end": 9327,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8479,
											"end": 9327,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8479,
											"end": 9327,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8479,
											"end": 9327,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8479,
											"end": 9327,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8479,
											"end": 9327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9333,
											"end": 10406,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 9333,
											"end": 10406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9387,
											"end": 9392,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9578,
											"end": 9586,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9568,
											"end": 9608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 9568,
											"end": 9608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9599,
											"end": 9600,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 9590,
											"end": 9600,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9590,
											"end": 9600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9601,
											"end": 9606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 9601,
											"end": 9606,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9568,
											"end": 9608,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 9568,
											"end": 9608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9627,
											"end": 9631,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9617,
											"end": 9653,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 9617,
											"end": 9653,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9644,
											"end": 9645,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9635,
											"end": 9645,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9635,
											"end": 9645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9646,
											"end": 9651,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 9646,
											"end": 9651,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9617,
											"end": 9653,
											"name": "tag",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 9617,
											"end": 9653,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9713,
											"end": 9717,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9761,
											"end": 9762,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 9756,
											"end": 9783,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9756,
											"end": 9783,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 9756,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 9756,
											"end": 9783,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9797,
											"end": 9798,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 9792,
											"end": 9983,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9792,
											"end": 9983,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 9792,
											"end": 9983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 9792,
											"end": 9983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9706,
											"end": 9983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 9706,
											"end": 9983,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9756,
											"end": 9783,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 9756,
											"end": 9783,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9774,
											"end": 9775,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 9765,
											"end": 9775,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9775,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9776,
											"end": 9781,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9776,
											"end": 9781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 9776,
											"end": 9781,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9792,
											"end": 9983,
											"name": "tag",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 9792,
											"end": 9983,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9837,
											"end": 9840,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 9827,
											"end": 9835,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9824,
											"end": 9841,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9821,
											"end": 9864,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9821,
											"end": 9864,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 9821,
											"end": 9864,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9844,
											"end": 9862,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 9844,
											"end": 9862,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 9844,
											"end": 9862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9844,
											"end": 9862,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 9844,
											"end": 9862,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9821,
											"end": 9864,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 9821,
											"end": 9864,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9893,
											"end": 9901,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9890,
											"end": 9891,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 9886,
											"end": 9902,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 9877,
											"end": 9902,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9877,
											"end": 9902,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9928,
											"end": 9931,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9921,
											"end": 9926,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9918,
											"end": 9932,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9915,
											"end": 9955,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9915,
											"end": 9955,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 9915,
											"end": 9955,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9935,
											"end": 9953,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 9935,
											"end": 9953,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 9935,
											"end": 9953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9935,
											"end": 9953,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 9935,
											"end": 9953,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9915,
											"end": 9955,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 9915,
											"end": 9955,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9968,
											"end": 9973,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9968,
											"end": 9973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 9968,
											"end": 9973,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9706,
											"end": 9983,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 9706,
											"end": 9983,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9706,
											"end": 9983,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10092,
											"end": 10094,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10082,
											"end": 10090,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10073,
											"end": 10076,
											"name": "PUSH",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 10067,
											"end": 10071,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10064,
											"end": 10077,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10060,
											"end": 10096,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10042,
											"end": 10044,
											"name": "PUSH",
											"source": 11,
											"value": "4E"
										},
										{
											"begin": 10032,
											"end": 10040,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10029,
											"end": 10045,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10024,
											"end": 10026,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 10018,
											"end": 10022,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10015,
											"end": 10027,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10011,
											"end": 10046,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9995,
											"end": 10106,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 9992,
											"end": 10238,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9992,
											"end": 10238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 9992,
											"end": 10238,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10148,
											"end": 10156,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10142,
											"end": 10146,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10138,
											"end": 10157,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 10129,
											"end": 10157,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10129,
											"end": 10157,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10183,
											"end": 10186,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10176,
											"end": 10181,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10173,
											"end": 10187,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10170,
											"end": 10210,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10170,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 10170,
											"end": 10210,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10190,
											"end": 10208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 10190,
											"end": 10208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 10190,
											"end": 10208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10190,
											"end": 10208,
											"name": "tag",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 10190,
											"end": 10208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10170,
											"end": 10210,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 10170,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10223,
											"end": 10228,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 10223,
											"end": 10228,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9992,
											"end": 10238,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 9992,
											"end": 10238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10263,
											"end": 10305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 10301,
											"end": 10304,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10291,
											"end": 10299,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10285,
											"end": 10289,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10282,
											"end": 10283,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10263,
											"end": 10305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 10263,
											"end": 10305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10263,
											"end": 10305,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 10263,
											"end": 10305,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10248,
											"end": 10305,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10248,
											"end": 10305,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10248,
											"end": 10305,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10248,
											"end": 10305,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10337,
											"end": 10341,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10332,
											"end": 10335,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10328,
											"end": 10342,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10321,
											"end": 10326,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10318,
											"end": 10343,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10315,
											"end": 10366,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10315,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 10315,
											"end": 10366,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 10346,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10315,
											"end": 10366,
											"name": "tag",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 10315,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10395,
											"end": 10399,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10388,
											"end": 10393,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10384,
											"end": 10400,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 10375,
											"end": 10400,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10375,
											"end": 10400,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9333,
											"end": 10406,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 9333,
											"end": 10406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9333,
											"end": 10406,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9333,
											"end": 10406,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9333,
											"end": 10406,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9333,
											"end": 10406,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9333,
											"end": 10406,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9333,
											"end": 10406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10412,
											"end": 10697,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 10412,
											"end": 10697,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10472,
											"end": 10477,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10496,
											"end": 10519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 10514,
											"end": 10518,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10496,
											"end": 10519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 10496,
											"end": 10519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10496,
											"end": 10519,
											"name": "tag",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 10496,
											"end": 10519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10488,
											"end": 10519,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10488,
											"end": 10519,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10540,
											"end": 10567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 10558,
											"end": 10566,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10540,
											"end": 10567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 10540,
											"end": 10567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10540,
											"end": 10567,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 10540,
											"end": 10567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10528,
											"end": 10567,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10528,
											"end": 10567,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10586,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 10623,
											"end": 10689,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10613,
											"end": 10621,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10607,
											"end": 10611,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10586,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 10586,
											"end": 10690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10586,
											"end": 10690,
											"name": "tag",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 10586,
											"end": 10690,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10577,
											"end": 10690,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10577,
											"end": 10690,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10412,
											"end": 10697,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10412,
											"end": 10697,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10412,
											"end": 10697,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10412,
											"end": 10697,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10412,
											"end": 10697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 11113,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 10703,
											"end": 11113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10743,
											"end": 10750,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10766,
											"end": 10786,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 10784,
											"end": 10785,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10766,
											"end": 10786,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 10766,
											"end": 10786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10766,
											"end": 10786,
											"name": "tag",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 10766,
											"end": 10786,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10761,
											"end": 10786,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10761,
											"end": 10786,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10800,
											"end": 10820,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 10818,
											"end": 10819,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10800,
											"end": 10820,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 10800,
											"end": 10820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10800,
											"end": 10820,
											"name": "tag",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 10800,
											"end": 10820,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10795,
											"end": 10820,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10795,
											"end": 10820,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10855,
											"end": 10856,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10852,
											"end": 10853,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10848,
											"end": 10857,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 10877,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 10895,
											"end": 10906,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10877,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 10877,
											"end": 10907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10877,
											"end": 10907,
											"name": "tag",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 10877,
											"end": 10907,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10866,
											"end": 10907,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10866,
											"end": 10907,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11056,
											"end": 11057,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11047,
											"end": 11054,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11043,
											"end": 11058,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 11040,
											"end": 11041,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11037,
											"end": 11059,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 11017,
											"end": 11018,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11010,
											"end": 11019,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10990,
											"end": 11073,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 10967,
											"end": 11106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 10967,
											"end": 11106,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11086,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 11086,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 11086,
											"end": 11104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11086,
											"end": 11104,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 11086,
											"end": 11104,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10967,
											"end": 11106,
											"name": "tag",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 10967,
											"end": 11106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10751,
											"end": 11113,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 11113,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 11113,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 11113,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 11113,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 11113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11119,
											"end": 11299,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 11119,
											"end": 11299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11167,
											"end": 11244,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11164,
											"end": 11165,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11157,
											"end": 11245,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11264,
											"end": 11268,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 11261,
											"end": 11262,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11254,
											"end": 11269,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11288,
											"end": 11292,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 11285,
											"end": 11286,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11278,
											"end": 11293,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11305,
											"end": 11490,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 11305,
											"end": 11490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11345,
											"end": 11346,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11362,
											"end": 11382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 11380,
											"end": 11381,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11362,
											"end": 11382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 11362,
											"end": 11382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11362,
											"end": 11382,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 11362,
											"end": 11382,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11357,
											"end": 11382,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11357,
											"end": 11382,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11396,
											"end": 11416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 11414,
											"end": 11415,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11396,
											"end": 11416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 11396,
											"end": 11416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11396,
											"end": 11416,
											"name": "tag",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 11396,
											"end": 11416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11391,
											"end": 11416,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11391,
											"end": 11416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11435,
											"end": 11436,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11425,
											"end": 11460,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 11425,
											"end": 11460,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11440,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 11440,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 11440,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11440,
											"end": 11458,
											"name": "tag",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 11440,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11425,
											"end": 11460,
											"name": "tag",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 11425,
											"end": 11460,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11482,
											"end": 11483,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11479,
											"end": 11480,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11475,
											"end": 11484,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 11470,
											"end": 11484,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11470,
											"end": 11484,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11305,
											"end": 11490,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11305,
											"end": 11490,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11305,
											"end": 11490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11305,
											"end": 11490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11305,
											"end": 11490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11496,
											"end": 11693,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 11496,
											"end": 11693,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11535,
											"end": 11538,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11554,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 11571,
											"end": 11572,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11554,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 11554,
											"end": 11573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11554,
											"end": 11573,
											"name": "tag",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 11554,
											"end": 11573,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11549,
											"end": 11573,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11549,
											"end": 11573,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11587,
											"end": 11606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 11604,
											"end": 11605,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11587,
											"end": 11606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 11587,
											"end": 11606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11587,
											"end": 11606,
											"name": "tag",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 11587,
											"end": 11606,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11582,
											"end": 11606,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11582,
											"end": 11606,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11629,
											"end": 11630,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11626,
											"end": 11627,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11622,
											"end": 11631,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11615,
											"end": 11631,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11615,
											"end": 11631,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11652,
											"end": 11662,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11647,
											"end": 11650,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11644,
											"end": 11663,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 11641,
											"end": 11686,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11641,
											"end": 11686,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 11641,
											"end": 11686,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11666,
											"end": 11684,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 11666,
											"end": 11684,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 11666,
											"end": 11684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11666,
											"end": 11684,
											"name": "tag",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 11666,
											"end": 11684,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11641,
											"end": 11686,
											"name": "tag",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 11641,
											"end": 11686,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11496,
											"end": 11693,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11496,
											"end": 11693,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11496,
											"end": 11693,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11496,
											"end": 11693,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11496,
											"end": 11693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11699,
											"end": 11846,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 11699,
											"end": 11846,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11800,
											"end": 11811,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11837,
											"end": 11840,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11822,
											"end": 11840,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11822,
											"end": 11840,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11699,
											"end": 11846,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11699,
											"end": 11846,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11699,
											"end": 11846,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11699,
											"end": 11846,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11699,
											"end": 11846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11852,
											"end": 11966,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 11852,
											"end": 11966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11852,
											"end": 11966,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11852,
											"end": 11966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11972,
											"end": 12370,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 11972,
											"end": 12370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12131,
											"end": 12134,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12152,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 12233,
											"end": 12234,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12228,
											"end": 12231,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12152,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 12152,
											"end": 12235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12152,
											"end": 12235,
											"name": "tag",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 12152,
											"end": 12235,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12145,
											"end": 12235,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12145,
											"end": 12235,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12244,
											"end": 12337,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 12333,
											"end": 12336,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12244,
											"end": 12337,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 12244,
											"end": 12337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12244,
											"end": 12337,
											"name": "tag",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 12244,
											"end": 12337,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12362,
											"end": 12363,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12357,
											"end": 12360,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12353,
											"end": 12364,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12346,
											"end": 12364,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12346,
											"end": 12364,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11972,
											"end": 12370,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11972,
											"end": 12370,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11972,
											"end": 12370,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11972,
											"end": 12370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12376,
											"end": 12755,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 12376,
											"end": 12755,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12560,
											"end": 12563,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12582,
											"end": 12729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 12725,
											"end": 12728,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12582,
											"end": 12729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 12582,
											"end": 12729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12582,
											"end": 12729,
											"name": "tag",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 12582,
											"end": 12729,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12575,
											"end": 12729,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12575,
											"end": 12729,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12746,
											"end": 12749,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12739,
											"end": 12749,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12739,
											"end": 12749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12376,
											"end": 12755,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12376,
											"end": 12755,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12376,
											"end": 12755,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12376,
											"end": 12755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 13093,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 12761,
											"end": 13093,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12882,
											"end": 12886,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12920,
											"end": 12922,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12909,
											"end": 12918,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12905,
											"end": 12923,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12897,
											"end": 12923,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12897,
											"end": 12923,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 13004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 13001,
											"end": 13002,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12990,
											"end": 12999,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12986,
											"end": 13003,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12977,
											"end": 12983,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 13004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 12933,
											"end": 13004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 13004,
											"name": "tag",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 12933,
											"end": 13004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13014,
											"end": 13086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 13082,
											"end": 13084,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13071,
											"end": 13080,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13067,
											"end": 13085,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13058,
											"end": 13064,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13014,
											"end": 13086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 13014,
											"end": 13086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13014,
											"end": 13086,
											"name": "tag",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 13014,
											"end": 13086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 13093,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 13093,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 13093,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 13093,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 13093,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 13093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"lib/openzeppelin-contracts/contracts/access/Ownable.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"src/Kipu-Bank_v2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ETH_ADDRESS()": "a734f06e",
							"ORACLE_HEARTBEAT()": "4a83c3b7",
							"deposit()": "d0e30db0",
							"depositToken(address,uint256)": "338b5dea",
							"getMyBalance(address)": "7e3ef7cd",
							"getTotalEthBalance()": "287cc96b",
							"getValueInUsd(address,uint256)": "fe3192f6",
							"i_bankCap()": "f6687af7",
							"i_withdrawLimit()": "c801fb40",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"s_balances(address,address)": "dccd58e3",
							"s_tokenInfo(address)": "432017ca",
							"s_totalDeposits()": "52963c2b",
							"s_totalUsdValue()": "3b1a4ec4",
							"s_totalWithdrawals()": "f3db702c",
							"setPriceFeed(address,address)": "76e11286",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d",
							"withdrawToken(address,uint256)": "9e281a98"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bankCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawLimit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"KipuBank__AmountMustBeGreaterThanZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"attempted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"KipuBank__ExceedsBankCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"attempted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"KipuBank__ExceedsWithdrawLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"}],\"name\":\"KipuBank__InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"KipuBank__NotAToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"KipuBank__OracleCompromised\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"KipuBank__PriceFeedNotSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"KipuBank__StalePrice\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"KipuBank__TransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"}],\"name\":\"PriceFeedUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"ETH_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ORACLE_HEARTBEAT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getMyBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getValueInUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_bankCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_withdrawLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_tokenInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalDeposits\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalUsdValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalWithdrawals\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeedAddress\",\"type\":\"address\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Santiago Carmenes\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_bankCap\":\"Total USD limit for the bank\",\"_withdrawLimit\":\"Maximum withdrawal limit per transaction\"}},\"deposit()\":{\"details\":\"Uses withinBankCap modifier to enforce bank cap\"},\"depositToken(address,uint256)\":{\"params\":{\"_amount\":\"Amount of tokens to deposit\",\"_tokenAddress\":\"Address of the ERC20 token\"}},\"getMyBalance(address)\":{\"params\":{\"_tokenAddress\":\"Address of the ERC20 token\"},\"returns\":{\"_0\":\"balance Amount of tokens available for the user\"}},\"getTotalEthBalance()\":{\"returns\":{\"_0\":\"totalBalance Total ETH stored in the contract\"}},\"getValueInUsd(address,uint256)\":{\"params\":{\"_amount\":\"Amount of tokens\",\"_tokenAddress\":\"Address of the token\"},\"returns\":{\"_0\":\"valueInUsd Value in USD with decimals\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setPriceFeed(address,address)\":{\"params\":{\"_tokenAddress\":\"Address of the token\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"details\":\"Uses withinWithdrawLimit and hasSufficientBalance modifiers\",\"params\":{\"_amount\":\"Amount of ETH to withdraw\"}},\"withdrawToken(address,uint256)\":{\"params\":{\"_amount\":\"Amount of tokens to withdraw\",\"_tokenAddress\":\"Address of the ERC20 token\"}}},\"stateVariables\":{\"i_bankCap\":{\"details\":\"Chose to use uint256 since ERC20 tokens also use uint256 for amounts\"},\"s_balances\":{\"details\":\"mapping(TokenAddress => mapping(UserAddress => Amount)) \"},\"s_tokenInfo\":{\"details\":\"mapping(TokenAddress => TokenInfo)\"}},\"title\":\"KipuBank - A simple bank with deposit and withdrawal limits\",\"version\":1},\"userdoc\":{\"errors\":{\"KipuBank__ExceedsBankCap(uint256,uint256)\":[{\"notice\":\"-----------------------------------------------------------------------------------------------                                         ERRORS -----------------------------------------------------------------------------------------------\"}]},\"events\":{\"Deposited(address,address,uint256)\":{\"notice\":\"Emitted upon ETH deposit\"},\"PriceFeedUpdated(address,address)\":{\"notice\":\"Emitted when a price feed is updated\"},\"Withdrawn(address,address,uint256)\":{\"notice\":\"Emitted upon ETH withdrawal\"}},\"kind\":\"user\",\"methods\":{\"ETH_ADDRESS()\":{\"notice\":\"ETH address constant\"},\"ORACLE_HEARTBEAT()\":{\"notice\":\"The maximum age of a price feed update (e.g., 1 hour)\"},\"constructor\":{\"notice\":\"Constructor to initialize bank cap and withdrawal limit\"},\"deposit()\":{\"notice\":\"Calls internal deposit function for ETH deposits\"},\"depositToken(address,uint256)\":{\"notice\":\"Deposit ERC20 tokens into the bank\"},\"getMyBalance(address)\":{\"notice\":\"Check your own token balance\"},\"getTotalEthBalance()\":{\"notice\":\"Check the total balance of the bank\"},\"getValueInUsd(address,uint256)\":{\"notice\":\"Get value of a token amount in USD\"},\"i_bankCap()\":{\"notice\":\"Total ETH limit that can be stored in the bank\"},\"i_withdrawLimit()\":{\"notice\":\"ETH limit that can be withdrawn in a single transaction\"},\"s_balances(address,address)\":{\"notice\":\"User balances mapping\"},\"s_tokenInfo(address)\":{\"notice\":\"Token information mapping\"},\"s_totalDeposits()\":{\"notice\":\"Total number of historical deposits\"},\"s_totalUsdValue()\":{\"notice\":\"Total USD value stored in the bank\"},\"s_totalWithdrawals()\":{\"notice\":\"Total number of historical withdrawals\"},\"setPriceFeed(address,address)\":{\"notice\":\"Set the price feed address for a token\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw ETH from the bank\"},\"withdrawToken(address,uint256)\":{\"notice\":\"Withdraw ERC20 tokens from the bank\"}},\"notice\":\"This contract allows users to deposit and withdraw ETH with security limits\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Kipu-Bank_v2.sol\":\"KipuBank\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":kipubank/=src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf9510b93a8b01dac3ac6b4f0acc347b0361b4bcb0482a15c2bcf0dcd8f68e2fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8d1c366bfb117b6094402363a8a8d09abc483c33d1d704bd4a61282888a28de\",\"dweb:/ipfs/QmNQwmbRwpzhoh7FET1VwVHMZq9LPpf3Ag7tpVrhxSgrez\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe889e9f6b8469155c967f403ad7508eaa66af8cad1cb9a003536a8e4f281d348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e32c81c8d84199eda0de40d33bb77c7acbb482e3f545d5cfba8195af0a88e0\",\"dweb:/ipfs/Qmaf1WAinzjYWGNxRzCTmn2QABFWS912HwC8eiD7cyTgis\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x27d48fb11259528345803c0aa48dde8e2d495bb96cfd244191505dbd80d9cf5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://137014f0ec2156eeb5472b07eafba7630e39db6648ca7627afbb87f023676b9e\",\"dweb:/ipfs/QmYhDHgKSUmDyWnqFGq8UbaYATsUVCHkdG5EgwrUVsZuUC\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xc6ebdb3497d4662bd3aa8bc48bf356f7912a5fa42f9bb4f8584817cadf165784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8caaa17034e30866b5df3b1f0ebd60abcda8757e3aa141962b5c07a69608ffae\",\"dweb:/ipfs/QmW3bspXQY8Khz4c63uUcRCnprSKcWJT8avaKqvkWo9NF4\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xc708c0fc983c4e74902c46b56f09d08688cf59561e819a069ea7bcdb506cf0f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edac73f72cd3359f06b188458c74036ac06a586886db3345cc4c12b527a5bc7d\",\"dweb:/ipfs/QmUkZZp9x8UnzHgGj6otpwYYVaxo6ZHSKH8Yr97wFu8Ydc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa2d847c6ad19f5b8ac7c6f4c462bb4c1fd76307cb17478c49743354cf122f77f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcb88894b8d6c2967694114eceba85a4dd40d7adea390e20e766657cb6d5d4be\",\"dweb:/ipfs/QmQQVNAzL8PnhUCYzSvSoiEzuqNtEroBmyBgqCJ9hbKJ5B\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x720e6c9abddab40e1c4801517e852b641acc71b599857038dcc55d6d932ed174\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9272084af787a62081ef3243bbc80c9eecc17ca453dba80a5582645ac12415e4\",\"dweb:/ipfs/QmaVBuLsASZy3QYj8AxTRuR483sJJTYspvy7sB3epRcYTA\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x773c2fd57770fb2dfb89ef76d4fad4a25d143b5d0ac26c8172cb947bff56ed3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0663124601928d5f570f7e86f9f918e143f4a0b065f3512f3378bdc0fcd6e514\",\"dweb:/ipfs/QmTi6ZMYnaHgiscJhyxA7Ebf6dsABGYgciQT9vMHa2ewrA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x564310f4788f096e1c1e77edd645999aa7fbad46dd545d7a722f70d5cfe19033\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://844ba854105b8a3e4cfb2cc37de926020beb97b238e85e00df05b79be953cec9\",\"dweb:/ipfs/QmWG5HLDsFRNe3A2ZxvKcB79tqJN9V5yTwcBUjUPYhDki3\"]},\"src/Kipu-Bank_v2.sol\":{\"keccak256\":\"0x3da1c0bdf3fe3c76aa6fa1126d862757f3f2de256dadf03bebb3ea435ea8b5f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fc3b2a3539f29bf59ac4a41f9336ed9327feaa66b2c94d5a4fc2d4fb2c0b06b\",\"dweb:/ipfs/Qmb31M73MVW27KEPNCKZDbeVExA3LjojFxy9ooiuP4y7yv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 54,
								"contract": "src/Kipu-Bank_v2.sol:KipuBank",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 917,
								"contract": "src/Kipu-Bank_v2.sol:KipuBank",
								"label": "s_totalUsdValue",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 920,
								"contract": "src/Kipu-Bank_v2.sol:KipuBank",
								"label": "s_totalDeposits",
								"offset": 0,
								"slot": "2",
								"type": "t_uint32"
							},
							{
								"astId": 923,
								"contract": "src/Kipu-Bank_v2.sol:KipuBank",
								"label": "s_totalWithdrawals",
								"offset": 4,
								"slot": "2",
								"type": "t_uint32"
							},
							{
								"astId": 936,
								"contract": "src/Kipu-Bank_v2.sol:KipuBank",
								"label": "s_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 942,
								"contract": "src/Kipu-Bank_v2.sol:KipuBank",
								"label": "s_tokenInfo",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(TokenInfo)929_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(TokenInfo)929_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct KipuBank.TokenInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenInfo)929_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(TokenInfo)929_storage": {
								"encoding": "inplace",
								"label": "struct KipuBank.TokenInfo",
								"members": [
									{
										"astId": 926,
										"contract": "src/Kipu-Bank_v2.sol:KipuBank",
										"label": "priceFeed",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 928,
										"contract": "src/Kipu-Bank_v2.sol:KipuBank",
										"label": "decimals",
										"offset": 20,
										"slot": "0",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"errors": {
							"KipuBank__ExceedsBankCap(uint256,uint256)": [
								{
									"notice": "-----------------------------------------------------------------------------------------------                                         ERRORS -----------------------------------------------------------------------------------------------"
								}
							]
						},
						"events": {
							"Deposited(address,address,uint256)": {
								"notice": "Emitted upon ETH deposit"
							},
							"PriceFeedUpdated(address,address)": {
								"notice": "Emitted when a price feed is updated"
							},
							"Withdrawn(address,address,uint256)": {
								"notice": "Emitted upon ETH withdrawal"
							}
						},
						"kind": "user",
						"methods": {
							"ETH_ADDRESS()": {
								"notice": "ETH address constant"
							},
							"ORACLE_HEARTBEAT()": {
								"notice": "The maximum age of a price feed update (e.g., 1 hour)"
							},
							"constructor": {
								"notice": "Constructor to initialize bank cap and withdrawal limit"
							},
							"deposit()": {
								"notice": "Calls internal deposit function for ETH deposits"
							},
							"depositToken(address,uint256)": {
								"notice": "Deposit ERC20 tokens into the bank"
							},
							"getMyBalance(address)": {
								"notice": "Check your own token balance"
							},
							"getTotalEthBalance()": {
								"notice": "Check the total balance of the bank"
							},
							"getValueInUsd(address,uint256)": {
								"notice": "Get value of a token amount in USD"
							},
							"i_bankCap()": {
								"notice": "Total ETH limit that can be stored in the bank"
							},
							"i_withdrawLimit()": {
								"notice": "ETH limit that can be withdrawn in a single transaction"
							},
							"s_balances(address,address)": {
								"notice": "User balances mapping"
							},
							"s_tokenInfo(address)": {
								"notice": "Token information mapping"
							},
							"s_totalDeposits()": {
								"notice": "Total number of historical deposits"
							},
							"s_totalUsdValue()": {
								"notice": "Total USD value stored in the bank"
							},
							"s_totalWithdrawals()": {
								"notice": "Total number of historical withdrawals"
							},
							"setPriceFeed(address,address)": {
								"notice": "Set the price feed address for a token"
							},
							"withdraw(uint256)": {
								"notice": "Withdraw ETH from the bank"
							},
							"withdrawToken(address,uint256)": {
								"notice": "Withdraw ERC20 tokens from the bank"
							}
						},
						"notice": "This contract allows users to deposit and withdraw ETH with security limits",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "124:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "160:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "168:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "194:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "194:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "193:7:0"
									},
									"scope": 45,
									"src": "151:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "216:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "227:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "253:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "253:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "252:15:0"
									},
									"scope": 45,
									"src": "207:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "316:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "315:9:0"
									},
									"scope": 45,
									"src": "274:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "340:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "366:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "359:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "359:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "352:27:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "410:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "403:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "403:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "426:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "419:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "419:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "442:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "434:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "461:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "453:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "479:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "472:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "472:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:93:0"
									},
									"scope": 45,
									"src": "331:165:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "511:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "526:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "574:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "567:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "567:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "590:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "583:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "583:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "606:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "598:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "625:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "617:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "643:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "636:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "636:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "566:93:0"
									},
									"scope": 45,
									"src": "502:158:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "114:549:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:632:0"
				},
				"id": 0
			},
			"lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							872
						],
						"Ownable": [
							193
						]
					},
					"id": 194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 194,
							"sourceUnit": 873,
							"src": "133:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 872,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 51,
										"name": "Context",
										"nameLocations": [
											"711:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 872,
										"src": "711:7:1"
									},
									"id": 52,
									"nodeType": "InheritanceSpecifier",
									"src": "711:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 50,
								"nodeType": "StructuredDocumentation",
								"src": "182:498:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 193,
							"linearizedBaseContracts": [
								193,
								872
							],
							"name": "Ownable",
							"nameLocation": "700:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 54,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "742:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "726:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 53,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "726:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "757:87:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 59,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "856:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "891:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "883:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:17:1"
									},
									"src": "850:50:1"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "908:84:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 64,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1004:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1032:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1024:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1023:15:1"
									},
									"src": "998:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 70,
									"name": "OwnershipTransferred",
									"nameLocation": "1053:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1090:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1074:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1121:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1105:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:57:1"
									},
									"src": "1047:84:1"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1296:158:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 76,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1311:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1335:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1327:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 77,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1327:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1327:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1311:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 90,
												"nodeType": "IfStatement",
												"src": "1307:97:1",
												"trueBody": {
													"id": 89,
													"nodeType": "Block",
													"src": "1339:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 85,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1389:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 84,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1381:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 83,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1381:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1381:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 82,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "1361:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1361:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 88,
															"nodeType": "RevertStatement",
															"src": "1354:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 92,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "1433:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 91,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1414:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "1414:32:1"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1139:117:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 96,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1282:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1274:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:22:1"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1296:0:1"
									},
									"scope": 193,
									"src": "1262:192:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1568:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 99,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1579:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1579:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1579:13:1"
											},
											{
												"id": 102,
												"nodeType": "PlaceholderStatement",
												"src": "1603:1:1"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "1462:79:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 104,
									"name": "onlyOwner",
									"nameLocation": "1556:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1565:2:1"
									},
									"src": "1547:65:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1748:32:1",
										"statements": [
											{
												"expression": {
													"id": 110,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "1766:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 109,
												"id": 111,
												"nodeType": "Return",
												"src": "1759:13:1"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1620:67:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1702:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1707:2:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1739:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1738:9:1"
									},
									"scope": 193,
									"src": "1693:87:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1903:121:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 117,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1918:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1918:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 119,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "1929:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1929:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1918:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 128,
												"nodeType": "IfStatement",
												"src": "1914:103:1",
												"trueBody": {
													"id": 127,
													"nodeType": "Block",
													"src": "1943:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 123,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 854,
																			"src": "1992:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1992:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 122,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "1965:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1965:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 126,
															"nodeType": "RevertStatement",
															"src": "1958:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "1788:64:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1867:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:2:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1903:0:1"
									},
									"scope": 193,
									"src": "1858:166:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "2422:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2460:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2452:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 137,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2452:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2452:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 136,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2433:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2433:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2433:30:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "2032:330:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 134,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 133,
												"name": "onlyOwner",
												"nameLocations": [
													"2412:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2412:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2412:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2377:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2394:2:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2422:0:1"
									},
									"scope": 193,
									"src": "2368:103:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "2696:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 152,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2711:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2731:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2723:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 153,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2723:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2723:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2711:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"nodeType": "IfStatement",
												"src": "2707:93:1",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "2735:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2785:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2777:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 159,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2777:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2777:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 158,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "2757:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2757:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 164,
															"nodeType": "RevertStatement",
															"src": "2750:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2829:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 167,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2810:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2810:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "2810:28:1"
											}
										]
									},
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "2479:141:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 150,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 149,
												"name": "onlyOwner",
												"nameLocations": [
													"2686:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2686:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2686:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2635:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2661:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2653:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:18:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2696:0:1"
									},
									"scope": 193,
									"src": "2626:220:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "3069:128:1",
										"statements": [
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3088:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "3080:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 178,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3080:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 181,
												"initialValue": {
													"id": 180,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "3099:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3080:25:1"
											},
											{
												"expression": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 182,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "3116:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 183,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "3125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3116:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "3116:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 187,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3170:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 188,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "3180:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 186,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "3149:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3149:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "EmitStatement",
												"src": "3144:45:1"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2854:146:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3015:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3042:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "3034:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3034:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3033:18:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3069:0:1"
									},
									"scope": 193,
									"src": "3006:191:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 194,
							"src": "682:2518:1",
							"usedErrors": [
								59,
								64
							],
							"usedEvents": [
								70
							]
						}
					],
					"src": "105:3097:1"
				},
				"id": 1
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							275
						],
						"IERC165": [
							884
						],
						"IERC20": [
							361
						]
					},
					"id": 276,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 195,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:2"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 197,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 276,
							"sourceUnit": 284,
							"src": "138:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 196,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 361,
										"src": "146:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 199,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 276,
							"sourceUnit": 280,
							"src": "176:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 198,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 884,
										"src": "184:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 201,
										"name": "IERC20",
										"nameLocations": [
											"605:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 361,
										"src": "605:6:2"
									},
									"id": 202,
									"nodeType": "InheritanceSpecifier",
									"src": "605:6:2"
								},
								{
									"baseName": {
										"id": 203,
										"name": "IERC165",
										"nameLocations": [
											"613:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 884,
										"src": "613:7:2"
									},
									"id": 204,
									"nodeType": "InheritanceSpecifier",
									"src": "613:7:2"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 200,
								"nodeType": "StructuredDocumentation",
								"src": "218:363:2",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 275,
							"linearizedBaseContracts": [
								275,
								884,
								361
							],
							"name": "IERC1363",
							"nameLocation": "593:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "1175:376:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1566:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1590:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1582:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1602:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1594:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1581:27:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1627:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 211,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1627:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1626:6:2"
									},
									"scope": 275,
									"src": "1557:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "1641:460:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 226,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2116:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2140:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2132:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2132:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2152:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2144:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2144:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2174:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2159:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2159:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2131:48:2"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2198:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2198:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:6:2"
									},
									"scope": 275,
									"src": "2107:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "2212:460:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2687:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2715:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2707:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2707:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2729:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2721:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2741:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2733:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2733:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2706:41:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2766:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:6:2"
									},
									"scope": 275,
									"src": "2678:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2780:544:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3339:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3367:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3359:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3381:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3373:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3373:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3393:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3385:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3385:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3415:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3400:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3400:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3358:62:2"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3439:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3439:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3438:6:2"
									},
									"scope": 275,
									"src": "3330:115:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3453:396:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3864:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3887:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3879:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3879:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3904:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3896:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3896:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3878:32:2"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3929:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 259,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3929:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3928:6:2"
									},
									"scope": 275,
									"src": "3855:80:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "3943:485:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4443:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4466:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4458:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4458:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4483:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4475:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4475:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4505:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4490:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4490:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4457:53:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4529:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4529:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4528:6:2"
									},
									"scope": 275,
									"src": "4434:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 276,
							"src": "583:3955:2",
							"usedErrors": [],
							"usedEvents": [
								295,
								304
							]
						}
					],
					"src": "110:4430:2"
				},
				"id": 2
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							884
						]
					},
					"id": 280,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 277,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "109:25:3"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 279,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 280,
							"sourceUnit": 885,
							"src": "138:59:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 278,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 884,
										"src": "146:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "109:90:3"
				},
				"id": 3
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							361
						]
					},
					"id": 284,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 281,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "108:25:4"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 283,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 284,
							"sourceUnit": 362,
							"src": "137:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 282,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 361,
										"src": "145:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "108:80:4"
				},
				"id": 4
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							361
						]
					},
					"id": 362,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 285,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "109:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 286,
								"nodeType": "StructuredDocumentation",
								"src": "138:73:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 361,
							"linearizedBaseContracts": [
								361
							],
							"name": "IERC20",
							"nameLocation": "223:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "237:163:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 295,
									"name": "Transfer",
									"nameLocation": "412:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "437:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "421:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "459:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "443:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "471:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "463:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "420:57:5"
									},
									"src": "406:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "486:151:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 304,
									"name": "Approval",
									"nameLocation": "649:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "674:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "658:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "697:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "681:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "714:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "706:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "657:63:5"
									},
									"src": "643:78:5"
								},
								{
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "729:67:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "811:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "822:2:5"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "848:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:9:5"
									},
									"scope": 361,
									"src": "802:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "865:73:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "953:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "971:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "963:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "963:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:17:5"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1003:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1003:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:9:5"
									},
									"scope": 361,
									"src": "944:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "1020:219:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1254:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1271:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1263:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1283:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1275:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1275:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:27:5"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1308:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 325,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1308:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1307:6:5"
									},
									"scope": 361,
									"src": "1245:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "1322:270:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 338,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1607:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1625:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1617:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1617:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1640:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1632:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1632:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1616:32:5"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1672:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1671:9:5"
									},
									"scope": 361,
									"src": "1598:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1689:681:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2385:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2401:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "2393:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2393:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2418:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "2410:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2410:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2392:32:5"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "2443:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 345,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2443:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:6:5"
									},
									"scope": 361,
									"src": "2376:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "2457:305:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 360,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2777:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2798:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2790:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2790:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2812:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2804:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2804:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2824:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2816:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2816:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2789:41:5"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2849:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2849:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2848:6:5"
									},
									"scope": 361,
									"src": "2768:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 362,
							"src": "213:2645:5",
							"usedErrors": [],
							"usedEvents": [
								295,
								304
							]
						}
					],
					"src": "109:2751:5"
				},
				"id": 5
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							361
						],
						"IERC20Metadata": [
							387
						]
					},
					"id": 388,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 363,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:6"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 388,
							"sourceUnit": 362,
							"src": "156:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 364,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 361,
										"src": "164:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 367,
										"name": "IERC20",
										"nameLocations": [
											"316:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 361,
										"src": "316:6:6"
									},
									"id": 368,
									"nodeType": "InheritanceSpecifier",
									"src": "316:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 366,
								"nodeType": "StructuredDocumentation",
								"src": "197:89:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 387,
							"linearizedBaseContracts": [
								387,
								361
							],
							"name": "IERC20Metadata",
							"nameLocation": "298:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "330:56:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 374,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "401:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:2:6"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "431:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "431:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:15:6"
									},
									"scope": 387,
									"src": "392:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "454:58:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 380,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "527:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:2:6"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "559:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 377,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:15:6"
									},
									"scope": 387,
									"src": "518:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "582:67:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 386,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "664:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "672:2:6"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "698:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 383,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "698:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:7:6"
									},
									"scope": 387,
									"src": "655:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 388,
							"src": "288:420:6",
							"usedErrors": [],
							"usedEvents": [
								295,
								304
							]
						}
					],
					"src": "128:582:6"
				},
				"id": 6
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							275
						],
						"IERC20": [
							361
						],
						"SafeERC20": [
							842
						]
					},
					"id": 843,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 389,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:7"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 391,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 843,
							"sourceUnit": 362,
							"src": "146:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 390,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 361,
										"src": "154:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 843,
							"sourceUnit": 276,
							"src": "185:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 392,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 275,
										"src": "193:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 394,
								"nodeType": "StructuredDocumentation",
								"src": "247:466:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 842,
							"linearizedBaseContracts": [
								842
							],
							"name": "SafeERC20",
							"nameLocation": "723:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "740:67:7",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 399,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "819:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "852:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "844:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:15:7"
									},
									"src": "813:46:7"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "867:73:7",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 408,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "952:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "993:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "985:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1010:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "1002:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1036:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "1028:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "984:70:7"
									},
									"src": "946:109:7"
								},
								{
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "1323:136:7",
										"statements": [
											{
												"condition": {
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1338:38:7",
													"subExpression": {
														"arguments": [
															{
																"id": 420,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "1353:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$361",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 421,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "1360:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 422,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "1364:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1371:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$361",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 419,
															"name": "_safeTransfer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "1339:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$_t_bool_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,address,uint256,bool) returns (bool)"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1339:37:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 434,
												"nodeType": "IfStatement",
												"src": "1334:118:7",
												"trueBody": {
													"id": 433,
													"nodeType": "Block",
													"src": "1378:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 429,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 412,
																				"src": "1433:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$361",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$361",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1425:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 427,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1425:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1425:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 426,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "1400:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1400:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 432,
															"nodeType": "RevertStatement",
															"src": "1393:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "1063:182:7",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1260:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1280:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "1273:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 411,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 410,
														"name": "IERC20",
														"nameLocations": [
															"1273:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "1273:6:7"
													},
													"referencedDeclaration": 361,
													"src": "1273:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1295:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "1287:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1307:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "1299:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1272:41:7"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1323:0:7"
									},
									"scope": 842,
									"src": "1251:208:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "1794:146:7",
										"statements": [
											{
												"condition": {
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1809:48:7",
													"subExpression": {
														"arguments": [
															{
																"id": 450,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "1828:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$361",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 451,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 442,
																"src": "1835:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 452,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "1841:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 453,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "1845:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1852:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$361",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 449,
															"name": "_safeTransferFrom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "1810:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,address,address,uint256,bool) returns (bool)"
															}
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1810:47:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 465,
												"nodeType": "IfStatement",
												"src": "1805:128:7",
												"trueBody": {
													"id": 464,
													"nodeType": "Block",
													"src": "1859:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 460,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 440,
																				"src": "1914:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$361",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$361",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1906:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 458,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1906:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1906:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 457,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "1881:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1881:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 463,
															"nodeType": "RevertStatement",
															"src": "1874:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "1467:231:7",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1713:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1737:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "1730:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 439,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 438,
														"name": "IERC20",
														"nameLocations": [
															"1730:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "1730:6:7"
													},
													"referencedDeclaration": 361,
													"src": "1730:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1752:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "1744:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1766:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "1758:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1758:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1778:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "1770:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1729:55:7"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1794:0:7"
									},
									"scope": 842,
									"src": "1704:236:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "2172:64:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 481,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "2204:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 482,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "2211:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 483,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "2215:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2222:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 480,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "2190:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$_t_bool_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,address,uint256,bool) returns (bool)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2190:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 479,
												"id": 486,
												"nodeType": "Return",
												"src": "2183:45:7"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "1948:128:7",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "2091:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2114:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2107:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 470,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 469,
														"name": "IERC20",
														"nameLocations": [
															"2107:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "2107:6:7"
													},
													"referencedDeclaration": 361,
													"src": "2107:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2129:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2121:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2121:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2141:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2133:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2106:41:7"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2166:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 477,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2166:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2165:6:7"
									},
									"scope": 842,
									"src": "2082:154:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "2490:74:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 504,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "2526:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 505,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "2533:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "2539:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 507,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "2543:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2550:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 503,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "2508:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,address,address,uint256,bool) returns (bool)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2508:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 502,
												"id": 510,
												"nodeType": "Return",
												"src": "2501:55:7"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "2244:132:7",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2391:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2418:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2411:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 491,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 490,
														"name": "IERC20",
														"nameLocations": [
															"2411:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "2411:6:7"
													},
													"referencedDeclaration": 361,
													"src": "2411:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2433:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2425:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2447:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2439:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2439:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2459:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2451:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2410:55:7"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2484:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 500,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2484:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2483:6:7"
									},
									"scope": 842,
									"src": "2382:182:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "3317:142:7",
										"statements": [
											{
												"assignments": [
													524
												],
												"declarations": [
													{
														"constant": false,
														"id": 524,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3336:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 542,
														"src": "3328:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 523,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3328:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 533,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 529,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3375:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$842",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$842",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3367:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 527,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3367:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3367:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "3382:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 525,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "3351:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3357:9:7",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "3351:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3351:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3328:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "3414:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "3421:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 537,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "3430:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 538,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "3445:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3430:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 534,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "3401:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3401:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "3401:50:7"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "2572:653:7",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3240:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3269:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3262:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 515,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 514,
														"name": "IERC20",
														"nameLocations": [
															"3262:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "3262:6:7"
													},
													"referencedDeclaration": 361,
													"src": "3262:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3284:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3276:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3276:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3301:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3293:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3293:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:46:7"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3317:0:7"
									},
									"scope": 842,
									"src": "3231:228:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "4236:378:7",
										"statements": [
											{
												"id": 584,
												"nodeType": "UncheckedBlock",
												"src": "4247:360:7",
												"statements": [
													{
														"assignments": [
															555
														],
														"declarations": [
															{
																"constant": false,
																"id": 555,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4280:16:7",
																"nodeType": "VariableDeclaration",
																"scope": 584,
																"src": "4272:24:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 554,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4272:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 564,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 560,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4323:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$842",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$842",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4315:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 558,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4315:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4315:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 562,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "4330:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 556,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 547,
																	"src": "4299:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$361",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4305:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 338,
																"src": "4299:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4299:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4272:66:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 565,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 555,
																"src": "4357:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 566,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "4376:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4357:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 575,
														"nodeType": "IfStatement",
														"src": "4353:162:7",
														"trueBody": {
															"id": 574,
															"nodeType": "Block",
															"src": "4395:120:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 569,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 549,
																				"src": "4454:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 570,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 555,
																				"src": "4463:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 571,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "4481:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 568,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 408,
																			"src": "4421:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4421:78:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 573,
																	"nodeType": "RevertStatement",
																	"src": "4414:85:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 577,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 547,
																	"src": "4542:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$361",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 578,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "4549:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 579,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 555,
																		"src": "4558:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 580,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "4577:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4558:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$361",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 576,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "4529:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4529:66:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 583,
														"nodeType": "ExpressionStatement",
														"src": "4529:66:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "3467:665:7",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4147:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4176:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "4169:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 546,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 545,
														"name": "IERC20",
														"nameLocations": [
															"4169:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "4169:6:7"
													},
													"referencedDeclaration": 361,
													"src": "4169:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4191:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "4183:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4183:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4208:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "4200:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4200:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4168:58:7"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4236:0:7"
									},
									"scope": 842,
									"src": "4138:476:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5279:295:7",
										"statements": [
											{
												"condition": {
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5294:43:7",
													"subExpression": {
														"arguments": [
															{
																"id": 598,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "5308:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$361",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 599,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "5315:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 600,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "5324:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5331:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$361",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 597,
															"name": "_safeApprove",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "5295:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$_t_bool_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,address,uint256,bool) returns (bool)"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5295:42:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "5290:277:7",
												"trueBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "5339:228:7",
													"statements": [
														{
															"condition": {
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "5358:38:7",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 605,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 590,
																			"src": "5372:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$361",
																				"typeString": "contract IERC20"
																			}
																		},
																		{
																			"id": 606,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 592,
																			"src": "5379:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"hexValue": "30",
																			"id": 607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5388:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		{
																			"hexValue": "74727565",
																			"id": 608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5391:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$361",
																				"typeString": "contract IERC20"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 604,
																		"name": "_safeApprove",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 841,
																		"src": "5359:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$_t_bool_$returns$_t_bool_$",
																			"typeString": "function (contract IERC20,address,uint256,bool) returns (bool)"
																		}
																	},
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5359:37:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 618,
															"nodeType": "IfStatement",
															"src": "5354:91:7",
															"trueBody": {
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 614,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 590,
																					"src": "5438:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$361",
																						"typeString": "contract IERC20"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC20_$361",
																						"typeString": "contract IERC20"
																					}
																				],
																				"id": 613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5430:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 612,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5430:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5430:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 611,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 399,
																		"src": "5405:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5405:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 617,
																"nodeType": "RevertStatement",
																"src": "5398:47:7"
															}
														},
														{
															"condition": {
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "5464:42:7",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 620,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 590,
																			"src": "5478:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$361",
																				"typeString": "contract IERC20"
																			}
																		},
																		{
																			"id": 621,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 592,
																			"src": "5485:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 622,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 594,
																			"src": "5494:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "74727565",
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5501:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$361",
																				"typeString": "contract IERC20"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 619,
																		"name": "_safeApprove",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 841,
																		"src": "5465:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$_t_bool_$returns$_t_bool_$",
																			"typeString": "function (contract IERC20,address,uint256,bool) returns (bool)"
																		}
																	},
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5465:41:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 633,
															"nodeType": "IfStatement",
															"src": "5460:95:7",
															"trueBody": {
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 629,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 590,
																					"src": "5548:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$361",
																						"typeString": "contract IERC20"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC20_$361",
																						"typeString": "contract IERC20"
																					}
																				],
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5540:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 627,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5540:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5540:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 626,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 399,
																		"src": "5515:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5515:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 632,
																"nodeType": "RevertStatement",
																"src": "5508:47:7"
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 587,
										"nodeType": "StructuredDocumentation",
										"src": "4622:574:7",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5211:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5231:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5224:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 589,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 588,
														"name": "IERC20",
														"nameLocations": [
															"5224:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "5224:6:7"
													},
													"referencedDeclaration": 361,
													"src": "5224:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5246:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5238:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5238:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5263:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5255:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5255:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5223:46:7"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:7"
									},
									"scope": 842,
									"src": "5202:372:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "6032:225:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 650,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "6047:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6050:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6047:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6055:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6047:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6065:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6047:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6135:39:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 664,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "6158:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 665,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "6162:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 666,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "6169:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 662,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "6136:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$275",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6142:15:7",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 226,
																"src": "6136:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6136:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 677,
													"nodeType": "IfStatement",
													"src": "6131:119:7",
													"trueBody": {
														"id": 676,
														"nodeType": "Block",
														"src": "6176:74:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 672,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 641,
																					"src": "6231:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 671,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6223:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 670,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6223:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6223:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 669,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 399,
																		"src": "6198:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6198:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 675,
																"nodeType": "RevertStatement",
																"src": "6191:47:7"
															}
														]
													}
												},
												"id": 678,
												"nodeType": "IfStatement",
												"src": "6043:207:7",
												"trueBody": {
													"id": 661,
													"nodeType": "Block",
													"src": "6068:57:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 656,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "6096:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 657,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "6103:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 658,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 645,
																		"src": "6107:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 655,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 436,
																	"src": "6083:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6083:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 660,
															"nodeType": "ExpressionStatement",
															"src": "6083:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5582:341:7",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that relies on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5938:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5970:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "5961:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$275",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 640,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 639,
														"name": "IERC1363",
														"nameLocations": [
															"5961:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 275,
														"src": "5961:8:7"
													},
													"referencedDeclaration": 275,
													"src": "5961:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$275",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5985:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "5977:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5977:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5997:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "5989:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5989:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6017:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "6004:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 646,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6004:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:62:7"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6032:0:7"
									},
									"scope": 842,
									"src": "5929:328:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "6793:245:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 695,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "6808:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6811:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6808:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6816:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6808:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6826:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6808:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6906:49:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 710,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "6933:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 711,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 688,
																	"src": "6939:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 712,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "6943:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 713,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 692,
																	"src": "6950:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 708,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "6907:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$275",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6913:19:7",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 252,
																"src": "6907:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6907:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 724,
													"nodeType": "IfStatement",
													"src": "6902:129:7",
													"trueBody": {
														"id": 723,
														"nodeType": "Block",
														"src": "6957:74:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 719,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 684,
																					"src": "7012:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 718,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7004:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 717,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7004:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7004:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 716,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 399,
																		"src": "6979:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6979:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 722,
																"nodeType": "RevertStatement",
																"src": "6972:47:7"
															}
														]
													}
												},
												"id": 725,
												"nodeType": "IfStatement",
												"src": "6804:227:7",
												"trueBody": {
													"id": 707,
													"nodeType": "Block",
													"src": "6829:67:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 701,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 684,
																		"src": "6861:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 702,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 686,
																		"src": "6868:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 703,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 688,
																		"src": "6874:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 704,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 690,
																		"src": "6878:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 700,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "6844:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6844:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 706,
															"nodeType": "ExpressionStatement",
															"src": "6844:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "6265:349:7",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that relies on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6629:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6675:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "6666:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$275",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 683,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 682,
														"name": "IERC1363",
														"nameLocations": [
															"6666:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 275,
														"src": "6666:8:7"
													},
													"referencedDeclaration": 275,
													"src": "6666:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$275",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6699:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "6691:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6691:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6722:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "6714:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6714:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6743:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "6735:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6735:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6772:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "6759:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 691,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6759:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6655:128:7"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6793:0:7"
									},
									"scope": 842,
									"src": "6620:418:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "7819:224:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 740,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 733,
																"src": "7834:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7837:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7834:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7842:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7834:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7852:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7834:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7922:38:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 754,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "7944:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 755,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "7948:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 756,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "7955:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 752,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "7923:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$275",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7929:14:7",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 274,
																"src": "7923:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7923:37:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 767,
													"nodeType": "IfStatement",
													"src": "7918:118:7",
													"trueBody": {
														"id": 766,
														"nodeType": "Block",
														"src": "7962:74:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 762,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 731,
																					"src": "8017:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 761,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8009:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 760,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "8009:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8009:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 759,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 399,
																		"src": "7984:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7984:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 765,
																"nodeType": "RevertStatement",
																"src": "7977:47:7"
															}
														]
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "7830:206:7",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "7855:57:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 746,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 731,
																		"src": "7883:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 747,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 733,
																		"src": "7890:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 748,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 735,
																		"src": "7894:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 745,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "7870:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7870:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 750,
															"nodeType": "ExpressionStatement",
															"src": "7870:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "7046:665:7",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Oppositely, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7726:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7757:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "7748:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$275",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 730,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 729,
														"name": "IERC1363",
														"nameLocations": [
															"7748:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 275,
														"src": "7748:8:7"
													},
													"referencedDeclaration": 275,
													"src": "7748:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$275",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7772:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "7764:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7764:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7784:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "7776:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7776:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7804:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "7791:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 736,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7791:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7747:62:7"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7819:0:7"
									},
									"scope": 842,
									"src": "7717:326:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "8656:1160:7",
										"statements": [
											{
												"assignments": [
													786
												],
												"declarations": [
													{
														"constant": false,
														"id": 786,
														"mutability": "mutable",
														"name": "selector",
														"nameLocation": "8674:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 792,
														"src": "8667:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"typeName": {
															"id": 785,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "8667:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 790,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 787,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "8685:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$361_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8692:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 328,
														"src": "8685:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "8701:8:7",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "8685:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8667:42:7"
											},
											{
												"AST": {
													"nativeSrc": "8747:1062:7",
													"nodeType": "YulBlock",
													"src": "8747:1062:7",
													"statements": [
														{
															"nativeSrc": "8762:22:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8762:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8779:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8779:4:7",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8773:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8773:5:7"
																},
																"nativeSrc": "8773:11:7",
																"nodeType": "YulFunctionCall",
																"src": "8773:11:7"
															},
															"variables": [
																{
																	"name": "fmp",
																	"nativeSrc": "8766:3:7",
																	"nodeType": "YulTypedName",
																	"src": "8766:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8805:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8805:4:7",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "selector",
																		"nativeSrc": "8811:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "8811:8:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8798:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8798:6:7"
																},
																"nativeSrc": "8798:22:7",
																"nodeType": "YulFunctionCall",
																"src": "8798:22:7"
															},
															"nativeSrc": "8798:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "8798:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8841:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8841:4:7",
																		"type": "",
																		"value": "0x04"
																	},
																	{
																		"arguments": [
																			{
																				"name": "to",
																				"nativeSrc": "8851:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "8851:2:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8859:2:7",
																						"nodeType": "YulLiteral",
																						"src": "8859:2:7",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8867:1:7",
																								"nodeType": "YulLiteral",
																								"src": "8867:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "8863:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8863:3:7"
																						},
																						"nativeSrc": "8863:6:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8863:6:7"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "8855:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8855:3:7"
																				},
																				"nativeSrc": "8855:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8855:15:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8847:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8847:3:7"
																		},
																		"nativeSrc": "8847:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8847:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8834:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8834:6:7"
																},
																"nativeSrc": "8834:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8834:38:7"
															},
															"nativeSrc": "8834:38:7",
															"nodeType": "YulExpressionStatement",
															"src": "8834:38:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8893:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8893:4:7",
																		"type": "",
																		"value": "0x24"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8899:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8899:5:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8886:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8886:6:7"
																},
																"nativeSrc": "8886:19:7",
																"nodeType": "YulFunctionCall",
																"src": "8886:19:7"
															},
															"nativeSrc": "8886:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "8886:19:7"
														},
														{
															"nativeSrc": "8919:56:7",
															"nodeType": "YulAssignment",
															"src": "8919:56:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8935:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8935:3:7"
																		},
																		"nativeSrc": "8935:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8935:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8942:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8942:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8949:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8949:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8952:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8952:4:7",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8958:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8958:4:7",
																		"type": "",
																		"value": "0x44"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8964:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8964:4:7",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8970:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8970:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8930:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8930:4:7"
																},
																"nativeSrc": "8930:45:7",
																"nodeType": "YulFunctionCall",
																"src": "8930:45:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "8919:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8919:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9195:572:7",
																"nodeType": "YulBlock",
																"src": "9195:572:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "9332:136:7",
																			"nodeType": "YulBlock",
																			"src": "9332:136:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "fmp",
																								"nativeSrc": "9370:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "9370:3:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9375:4:7",
																								"nodeType": "YulLiteral",
																								"src": "9375:4:7",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nativeSrc": "9381:14:7",
																									"nodeType": "YulIdentifier",
																									"src": "9381:14:7"
																								},
																								"nativeSrc": "9381:16:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9381:16:7"
																							}
																						],
																						"functionName": {
																							"name": "returndatacopy",
																							"nativeSrc": "9355:14:7",
																							"nodeType": "YulIdentifier",
																							"src": "9355:14:7"
																						},
																						"nativeSrc": "9355:43:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9355:43:7"
																					},
																					"nativeSrc": "9355:43:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "9355:43:7"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "fmp",
																								"nativeSrc": "9427:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "9427:3:7"
																							},
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nativeSrc": "9432:14:7",
																									"nodeType": "YulIdentifier",
																									"src": "9432:14:7"
																								},
																								"nativeSrc": "9432:16:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9432:16:7"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "9420:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "9420:6:7"
																						},
																						"nativeSrc": "9420:29:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9420:29:7"
																					},
																					"nativeSrc": "9420:29:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "9420:29:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "success",
																							"nativeSrc": "9314:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "9314:7:7"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nativeSrc": "9307:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9307:6:7"
																					},
																					"nativeSrc": "9307:15:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9307:15:7"
																				},
																				{
																					"name": "bubble",
																					"nativeSrc": "9324:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9324:6:7"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9303:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9303:3:7"
																			},
																			"nativeSrc": "9303:28:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9303:28:7"
																		},
																		"nativeSrc": "9300:168:7",
																		"nodeType": "YulIf",
																		"src": "9300:168:7"
																	},
																	{
																		"nativeSrc": "9671:81:7",
																		"nodeType": "YulAssignment",
																		"src": "9671:81:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "success",
																					"nativeSrc": "9686:7:7",
																					"nodeType": "YulIdentifier",
																					"src": "9686:7:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [],
																									"functionName": {
																										"name": "returndatasize",
																										"nativeSrc": "9706:14:7",
																										"nodeType": "YulIdentifier",
																										"src": "9706:14:7"
																									},
																									"nativeSrc": "9706:16:7",
																									"nodeType": "YulFunctionCall",
																									"src": "9706:16:7"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nativeSrc": "9699:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "9699:6:7"
																							},
																							"nativeSrc": "9699:24:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9699:24:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "token",
																											"nativeSrc": "9740:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "9740:5:7"
																										}
																									],
																									"functionName": {
																										"name": "extcodesize",
																										"nativeSrc": "9728:11:7",
																										"nodeType": "YulIdentifier",
																										"src": "9728:11:7"
																									},
																									"nativeSrc": "9728:18:7",
																									"nodeType": "YulFunctionCall",
																									"src": "9728:18:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9748:1:7",
																									"nodeType": "YulLiteral",
																									"src": "9748:1:7",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "gt",
																								"nativeSrc": "9725:2:7",
																								"nodeType": "YulIdentifier",
																								"src": "9725:2:7"
																							},
																							"nativeSrc": "9725:25:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9725:25:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "9695:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "9695:3:7"
																					},
																					"nativeSrc": "9695:56:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9695:56:7"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9682:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9682:3:7"
																			},
																			"nativeSrc": "9682:70:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9682:70:7"
																		},
																		"variableNames": [
																			{
																				"name": "success",
																				"nativeSrc": "9671:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9671:7:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "success",
																				"nativeSrc": "9165:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9165:7:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9183:4:7",
																								"nodeType": "YulLiteral",
																								"src": "9183:4:7",
																								"type": "",
																								"value": "0x00"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nativeSrc": "9177:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "9177:5:7"
																						},
																						"nativeSrc": "9177:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9177:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9190:1:7",
																						"nodeType": "YulLiteral",
																						"src": "9190:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9174:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "9174:2:7"
																				},
																				"nativeSrc": "9174:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9174:18:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9161:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9161:3:7"
																		},
																		"nativeSrc": "9161:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9161:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9154:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9154:6:7"
																},
																"nativeSrc": "9154:40:7",
																"nodeType": "YulFunctionCall",
																"src": "9154:40:7"
															},
															"nativeSrc": "9151:616:7",
															"nodeType": "YulIf",
															"src": "9151:616:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9788:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9788:4:7",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "fmp",
																		"nativeSrc": "9794:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9794:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9781:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9781:6:7"
																},
																"nativeSrc": "9781:17:7",
																"nodeType": "YulFunctionCall",
																"src": "9781:17:7"
															},
															"nativeSrc": "9781:17:7",
															"nodeType": "YulExpressionStatement",
															"src": "9781:17:7"
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 780,
														"isOffset": false,
														"isSlot": false,
														"src": "9324:6:7",
														"valueSize": 1
													},
													{
														"declaration": 786,
														"isOffset": false,
														"isSlot": false,
														"src": "8811:8:7",
														"valueSize": 1
													},
													{
														"declaration": 783,
														"isOffset": false,
														"isSlot": false,
														"src": "8919:7:7",
														"valueSize": 1
													},
													{
														"declaration": 783,
														"isOffset": false,
														"isSlot": false,
														"src": "9165:7:7",
														"valueSize": 1
													},
													{
														"declaration": 783,
														"isOffset": false,
														"isSlot": false,
														"src": "9314:7:7",
														"valueSize": 1
													},
													{
														"declaration": 783,
														"isOffset": false,
														"isSlot": false,
														"src": "9671:7:7",
														"valueSize": 1
													},
													{
														"declaration": 783,
														"isOffset": false,
														"isSlot": false,
														"src": "9686:7:7",
														"valueSize": 1
													},
													{
														"declaration": 776,
														"isOffset": false,
														"isSlot": false,
														"src": "8851:2:7",
														"valueSize": 1
													},
													{
														"declaration": 774,
														"isOffset": false,
														"isSlot": false,
														"src": "8942:5:7",
														"valueSize": 1
													},
													{
														"declaration": 774,
														"isOffset": false,
														"isSlot": false,
														"src": "9740:5:7",
														"valueSize": 1
													},
													{
														"declaration": 778,
														"isOffset": false,
														"isSlot": false,
														"src": "8899:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 791,
												"nodeType": "InlineAssembly",
												"src": "8722:1087:7"
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "8051:491:7",
										"text": " @dev Imitates a Solidity `token.transfer(to, value)` call, relaxing the requirement on the return value: the\n return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param to The recipient of the tokens\n @param value The amount of token to transfer\n @param bubble Behavior switch if the transfer call reverts: bubble the revert reason or return a false boolean."
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "8557:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8578:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "8571:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 773,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 772,
														"name": "IERC20",
														"nameLocations": [
															"8571:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "8571:6:7"
													},
													"referencedDeclaration": 361,
													"src": "8571:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8593:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "8585:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8585:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8605:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "8597:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8597:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "bubble",
												"nameLocation": "8617:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "8612:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 779,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8612:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8570:54:7"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8647:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "8642:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 782,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8642:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8641:14:7"
									},
									"scope": 842,
									"src": "8548:1268:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "10554:1247:7",
										"statements": [
											{
												"assignments": [
													811
												],
												"declarations": [
													{
														"constant": false,
														"id": 811,
														"mutability": "mutable",
														"name": "selector",
														"nameLocation": "10572:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 817,
														"src": "10565:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"typeName": {
															"id": 810,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "10565:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 812,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "10583:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$361_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10590:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "10583:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "10603:8:7",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "10583:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10565:46:7"
											},
											{
												"AST": {
													"nativeSrc": "10649:1145:7",
													"nodeType": "YulBlock",
													"src": "10649:1145:7",
													"statements": [
														{
															"nativeSrc": "10664:22:7",
															"nodeType": "YulVariableDeclaration",
															"src": "10664:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10681:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10681:4:7",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10675:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "10675:5:7"
																},
																"nativeSrc": "10675:11:7",
																"nodeType": "YulFunctionCall",
																"src": "10675:11:7"
															},
															"variables": [
																{
																	"name": "fmp",
																	"nativeSrc": "10668:3:7",
																	"nodeType": "YulTypedName",
																	"src": "10668:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10707:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10707:4:7",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "selector",
																		"nativeSrc": "10713:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "10713:8:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10700:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10700:6:7"
																},
																"nativeSrc": "10700:22:7",
																"nodeType": "YulFunctionCall",
																"src": "10700:22:7"
															},
															"nativeSrc": "10700:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "10700:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10743:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10743:4:7",
																		"type": "",
																		"value": "0x04"
																	},
																	{
																		"arguments": [
																			{
																				"name": "from",
																				"nativeSrc": "10753:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10753:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "10763:2:7",
																						"nodeType": "YulLiteral",
																						"src": "10763:2:7",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10771:1:7",
																								"nodeType": "YulLiteral",
																								"src": "10771:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "10767:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "10767:3:7"
																						},
																						"nativeSrc": "10767:6:7",
																						"nodeType": "YulFunctionCall",
																						"src": "10767:6:7"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "10759:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10759:3:7"
																				},
																				"nativeSrc": "10759:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10759:15:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10749:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10749:3:7"
																		},
																		"nativeSrc": "10749:26:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10749:26:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10736:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10736:6:7"
																},
																"nativeSrc": "10736:40:7",
																"nodeType": "YulFunctionCall",
																"src": "10736:40:7"
															},
															"nativeSrc": "10736:40:7",
															"nodeType": "YulExpressionStatement",
															"src": "10736:40:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10797:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10797:4:7",
																		"type": "",
																		"value": "0x24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "to",
																				"nativeSrc": "10807:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "10807:2:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "10815:2:7",
																						"nodeType": "YulLiteral",
																						"src": "10815:2:7",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10823:1:7",
																								"nodeType": "YulLiteral",
																								"src": "10823:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "10819:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "10819:3:7"
																						},
																						"nativeSrc": "10819:6:7",
																						"nodeType": "YulFunctionCall",
																						"src": "10819:6:7"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "10811:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10811:3:7"
																				},
																				"nativeSrc": "10811:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10811:15:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10803:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10803:3:7"
																		},
																		"nativeSrc": "10803:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10803:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10790:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10790:6:7"
																},
																"nativeSrc": "10790:38:7",
																"nodeType": "YulFunctionCall",
																"src": "10790:38:7"
															},
															"nativeSrc": "10790:38:7",
															"nodeType": "YulExpressionStatement",
															"src": "10790:38:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10849:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10849:4:7",
																		"type": "",
																		"value": "0x44"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "10855:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "10855:5:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10842:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10842:6:7"
																},
																"nativeSrc": "10842:19:7",
																"nodeType": "YulFunctionCall",
																"src": "10842:19:7"
															},
															"nativeSrc": "10842:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "10842:19:7"
														},
														{
															"nativeSrc": "10875:56:7",
															"nodeType": "YulAssignment",
															"src": "10875:56:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "10891:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10891:3:7"
																		},
																		"nativeSrc": "10891:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10891:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "10898:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "10898:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10905:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10905:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10908:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10908:4:7",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10914:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10914:4:7",
																		"type": "",
																		"value": "0x64"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10920:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10920:4:7",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10926:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10926:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "10886:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10886:4:7"
																},
																"nativeSrc": "10886:45:7",
																"nodeType": "YulFunctionCall",
																"src": "10886:45:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "10875:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "10875:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11151:572:7",
																"nodeType": "YulBlock",
																"src": "11151:572:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "11288:136:7",
																			"nodeType": "YulBlock",
																			"src": "11288:136:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "fmp",
																								"nativeSrc": "11326:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "11326:3:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11331:4:7",
																								"nodeType": "YulLiteral",
																								"src": "11331:4:7",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nativeSrc": "11337:14:7",
																									"nodeType": "YulIdentifier",
																									"src": "11337:14:7"
																								},
																								"nativeSrc": "11337:16:7",
																								"nodeType": "YulFunctionCall",
																								"src": "11337:16:7"
																							}
																						],
																						"functionName": {
																							"name": "returndatacopy",
																							"nativeSrc": "11311:14:7",
																							"nodeType": "YulIdentifier",
																							"src": "11311:14:7"
																						},
																						"nativeSrc": "11311:43:7",
																						"nodeType": "YulFunctionCall",
																						"src": "11311:43:7"
																					},
																					"nativeSrc": "11311:43:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "11311:43:7"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "fmp",
																								"nativeSrc": "11383:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "11383:3:7"
																							},
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nativeSrc": "11388:14:7",
																									"nodeType": "YulIdentifier",
																									"src": "11388:14:7"
																								},
																								"nativeSrc": "11388:16:7",
																								"nodeType": "YulFunctionCall",
																								"src": "11388:16:7"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "11376:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "11376:6:7"
																						},
																						"nativeSrc": "11376:29:7",
																						"nodeType": "YulFunctionCall",
																						"src": "11376:29:7"
																					},
																					"nativeSrc": "11376:29:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "11376:29:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "success",
																							"nativeSrc": "11270:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "11270:7:7"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nativeSrc": "11263:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "11263:6:7"
																					},
																					"nativeSrc": "11263:15:7",
																					"nodeType": "YulFunctionCall",
																					"src": "11263:15:7"
																				},
																				{
																					"name": "bubble",
																					"nativeSrc": "11280:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "11280:6:7"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11259:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "11259:3:7"
																			},
																			"nativeSrc": "11259:28:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11259:28:7"
																		},
																		"nativeSrc": "11256:168:7",
																		"nodeType": "YulIf",
																		"src": "11256:168:7"
																	},
																	{
																		"nativeSrc": "11627:81:7",
																		"nodeType": "YulAssignment",
																		"src": "11627:81:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "success",
																					"nativeSrc": "11642:7:7",
																					"nodeType": "YulIdentifier",
																					"src": "11642:7:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [],
																									"functionName": {
																										"name": "returndatasize",
																										"nativeSrc": "11662:14:7",
																										"nodeType": "YulIdentifier",
																										"src": "11662:14:7"
																									},
																									"nativeSrc": "11662:16:7",
																									"nodeType": "YulFunctionCall",
																									"src": "11662:16:7"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nativeSrc": "11655:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "11655:6:7"
																							},
																							"nativeSrc": "11655:24:7",
																							"nodeType": "YulFunctionCall",
																							"src": "11655:24:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "token",
																											"nativeSrc": "11696:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "11696:5:7"
																										}
																									],
																									"functionName": {
																										"name": "extcodesize",
																										"nativeSrc": "11684:11:7",
																										"nodeType": "YulIdentifier",
																										"src": "11684:11:7"
																									},
																									"nativeSrc": "11684:18:7",
																									"nodeType": "YulFunctionCall",
																									"src": "11684:18:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "11704:1:7",
																									"nodeType": "YulLiteral",
																									"src": "11704:1:7",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "gt",
																								"nativeSrc": "11681:2:7",
																								"nodeType": "YulIdentifier",
																								"src": "11681:2:7"
																							},
																							"nativeSrc": "11681:25:7",
																							"nodeType": "YulFunctionCall",
																							"src": "11681:25:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "11651:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "11651:3:7"
																					},
																					"nativeSrc": "11651:56:7",
																					"nodeType": "YulFunctionCall",
																					"src": "11651:56:7"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11638:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "11638:3:7"
																			},
																			"nativeSrc": "11638:70:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11638:70:7"
																		},
																		"variableNames": [
																			{
																				"name": "success",
																				"nativeSrc": "11627:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11627:7:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "success",
																				"nativeSrc": "11121:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11121:7:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11139:4:7",
																								"nodeType": "YulLiteral",
																								"src": "11139:4:7",
																								"type": "",
																								"value": "0x00"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nativeSrc": "11133:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "11133:5:7"
																						},
																						"nativeSrc": "11133:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "11133:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11146:1:7",
																						"nodeType": "YulLiteral",
																						"src": "11146:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11130:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "11130:2:7"
																				},
																				"nativeSrc": "11130:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11130:18:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11117:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11117:3:7"
																		},
																		"nativeSrc": "11117:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11117:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11110:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11110:6:7"
																},
																"nativeSrc": "11110:40:7",
																"nodeType": "YulFunctionCall",
																"src": "11110:40:7"
															},
															"nativeSrc": "11107:616:7",
															"nodeType": "YulIf",
															"src": "11107:616:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11744:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11744:4:7",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "fmp",
																		"nativeSrc": "11750:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11750:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11737:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11737:6:7"
																},
																"nativeSrc": "11737:17:7",
																"nodeType": "YulFunctionCall",
																"src": "11737:17:7"
															},
															"nativeSrc": "11737:17:7",
															"nodeType": "YulExpressionStatement",
															"src": "11737:17:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11775:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11775:4:7",
																		"type": "",
																		"value": "0x60"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11781:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11781:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11768:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11768:6:7"
																},
																"nativeSrc": "11768:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11768:15:7"
															},
															"nativeSrc": "11768:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11768:15:7"
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 805,
														"isOffset": false,
														"isSlot": false,
														"src": "11280:6:7",
														"valueSize": 1
													},
													{
														"declaration": 799,
														"isOffset": false,
														"isSlot": false,
														"src": "10753:4:7",
														"valueSize": 1
													},
													{
														"declaration": 811,
														"isOffset": false,
														"isSlot": false,
														"src": "10713:8:7",
														"valueSize": 1
													},
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "10875:7:7",
														"valueSize": 1
													},
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "11121:7:7",
														"valueSize": 1
													},
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "11270:7:7",
														"valueSize": 1
													},
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "11627:7:7",
														"valueSize": 1
													},
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "11642:7:7",
														"valueSize": 1
													},
													{
														"declaration": 801,
														"isOffset": false,
														"isSlot": false,
														"src": "10807:2:7",
														"valueSize": 1
													},
													{
														"declaration": 797,
														"isOffset": false,
														"isSlot": false,
														"src": "10898:5:7",
														"valueSize": 1
													},
													{
														"declaration": 797,
														"isOffset": false,
														"isSlot": false,
														"src": "11696:5:7",
														"valueSize": 1
													},
													{
														"declaration": 803,
														"isOffset": false,
														"isSlot": false,
														"src": "10855:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 816,
												"nodeType": "InlineAssembly",
												"src": "10624:1170:7"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "9824:546:7",
										"text": " @dev Imitates a Solidity `token.transferFrom(from, to, value)` call, relaxing the requirement on the return\n value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param from The sender of the tokens\n @param to The recipient of the tokens\n @param value The amount of token to transfer\n @param bubble Behavior switch if the transfer call reverts: bubble the revert reason or return a false boolean."
									},
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "10385:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "10420:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "10413:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 796,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 795,
														"name": "IERC20",
														"nameLocations": [
															"10413:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "10413:6:7"
													},
													"referencedDeclaration": 361,
													"src": "10413:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10444:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "10436:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10467:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "10459:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10459:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10488:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "10480:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10480:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "bubble",
												"nameLocation": "10509:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "10504:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 804,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10504:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10402:120:7"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "10545:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "10540:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 807,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10540:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10539:14:7"
									},
									"scope": 842,
									"src": "10376:1425:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "12425:1164:7",
										"statements": [
											{
												"assignments": [
													834
												],
												"declarations": [
													{
														"constant": false,
														"id": 834,
														"mutability": "mutable",
														"name": "selector",
														"nameLocation": "12443:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 840,
														"src": "12436:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"typeName": {
															"id": 833,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "12436:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 838,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 835,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "12454:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$361_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12461:7:7",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 348,
														"src": "12454:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function IERC20.approve(address,uint256) returns (bool)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "12469:8:7",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "12454:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12436:41:7"
											},
											{
												"AST": {
													"nativeSrc": "12515:1067:7",
													"nodeType": "YulBlock",
													"src": "12515:1067:7",
													"statements": [
														{
															"nativeSrc": "12530:22:7",
															"nodeType": "YulVariableDeclaration",
															"src": "12530:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12547:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12547:4:7",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12541:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "12541:5:7"
																},
																"nativeSrc": "12541:11:7",
																"nodeType": "YulFunctionCall",
																"src": "12541:11:7"
															},
															"variables": [
																{
																	"name": "fmp",
																	"nativeSrc": "12534:3:7",
																	"nodeType": "YulTypedName",
																	"src": "12534:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12573:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12573:4:7",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "selector",
																		"nativeSrc": "12579:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "12579:8:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12566:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12566:6:7"
																},
																"nativeSrc": "12566:22:7",
																"nodeType": "YulFunctionCall",
																"src": "12566:22:7"
															},
															"nativeSrc": "12566:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "12566:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12609:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12609:4:7",
																		"type": "",
																		"value": "0x04"
																	},
																	{
																		"arguments": [
																			{
																				"name": "spender",
																				"nativeSrc": "12619:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12619:7:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "12632:2:7",
																						"nodeType": "YulLiteral",
																						"src": "12632:2:7",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12640:1:7",
																								"nodeType": "YulLiteral",
																								"src": "12640:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "12636:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "12636:3:7"
																						},
																						"nativeSrc": "12636:6:7",
																						"nodeType": "YulFunctionCall",
																						"src": "12636:6:7"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "12628:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12628:3:7"
																				},
																				"nativeSrc": "12628:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12628:15:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12615:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12615:3:7"
																		},
																		"nativeSrc": "12615:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12615:29:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12602:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12602:6:7"
																},
																"nativeSrc": "12602:43:7",
																"nodeType": "YulFunctionCall",
																"src": "12602:43:7"
															},
															"nativeSrc": "12602:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "12602:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12666:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12666:4:7",
																		"type": "",
																		"value": "0x24"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "12672:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "12672:5:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12659:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12659:6:7"
																},
																"nativeSrc": "12659:19:7",
																"nodeType": "YulFunctionCall",
																"src": "12659:19:7"
															},
															"nativeSrc": "12659:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "12659:19:7"
														},
														{
															"nativeSrc": "12692:56:7",
															"nodeType": "YulAssignment",
															"src": "12692:56:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "12708:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12708:3:7"
																		},
																		"nativeSrc": "12708:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12708:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "12715:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "12715:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12722:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12722:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12725:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12725:4:7",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12731:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12731:4:7",
																		"type": "",
																		"value": "0x44"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12737:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12737:4:7",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12743:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12743:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "12703:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12703:4:7"
																},
																"nativeSrc": "12703:45:7",
																"nodeType": "YulFunctionCall",
																"src": "12703:45:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "12692:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "12692:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12968:572:7",
																"nodeType": "YulBlock",
																"src": "12968:572:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "13105:136:7",
																			"nodeType": "YulBlock",
																			"src": "13105:136:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "fmp",
																								"nativeSrc": "13143:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "13143:3:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "13148:4:7",
																								"nodeType": "YulLiteral",
																								"src": "13148:4:7",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nativeSrc": "13154:14:7",
																									"nodeType": "YulIdentifier",
																									"src": "13154:14:7"
																								},
																								"nativeSrc": "13154:16:7",
																								"nodeType": "YulFunctionCall",
																								"src": "13154:16:7"
																							}
																						],
																						"functionName": {
																							"name": "returndatacopy",
																							"nativeSrc": "13128:14:7",
																							"nodeType": "YulIdentifier",
																							"src": "13128:14:7"
																						},
																						"nativeSrc": "13128:43:7",
																						"nodeType": "YulFunctionCall",
																						"src": "13128:43:7"
																					},
																					"nativeSrc": "13128:43:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "13128:43:7"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "fmp",
																								"nativeSrc": "13200:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "13200:3:7"
																							},
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nativeSrc": "13205:14:7",
																									"nodeType": "YulIdentifier",
																									"src": "13205:14:7"
																								},
																								"nativeSrc": "13205:16:7",
																								"nodeType": "YulFunctionCall",
																								"src": "13205:16:7"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "13193:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "13193:6:7"
																						},
																						"nativeSrc": "13193:29:7",
																						"nodeType": "YulFunctionCall",
																						"src": "13193:29:7"
																					},
																					"nativeSrc": "13193:29:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "13193:29:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "success",
																							"nativeSrc": "13087:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "13087:7:7"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nativeSrc": "13080:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "13080:6:7"
																					},
																					"nativeSrc": "13080:15:7",
																					"nodeType": "YulFunctionCall",
																					"src": "13080:15:7"
																				},
																				{
																					"name": "bubble",
																					"nativeSrc": "13097:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "13097:6:7"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13076:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "13076:3:7"
																			},
																			"nativeSrc": "13076:28:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13076:28:7"
																		},
																		"nativeSrc": "13073:168:7",
																		"nodeType": "YulIf",
																		"src": "13073:168:7"
																	},
																	{
																		"nativeSrc": "13444:81:7",
																		"nodeType": "YulAssignment",
																		"src": "13444:81:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "success",
																					"nativeSrc": "13459:7:7",
																					"nodeType": "YulIdentifier",
																					"src": "13459:7:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [],
																									"functionName": {
																										"name": "returndatasize",
																										"nativeSrc": "13479:14:7",
																										"nodeType": "YulIdentifier",
																										"src": "13479:14:7"
																									},
																									"nativeSrc": "13479:16:7",
																									"nodeType": "YulFunctionCall",
																									"src": "13479:16:7"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nativeSrc": "13472:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "13472:6:7"
																							},
																							"nativeSrc": "13472:24:7",
																							"nodeType": "YulFunctionCall",
																							"src": "13472:24:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "token",
																											"nativeSrc": "13513:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "13513:5:7"
																										}
																									],
																									"functionName": {
																										"name": "extcodesize",
																										"nativeSrc": "13501:11:7",
																										"nodeType": "YulIdentifier",
																										"src": "13501:11:7"
																									},
																									"nativeSrc": "13501:18:7",
																									"nodeType": "YulFunctionCall",
																									"src": "13501:18:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "13521:1:7",
																									"nodeType": "YulLiteral",
																									"src": "13521:1:7",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "gt",
																								"nativeSrc": "13498:2:7",
																								"nodeType": "YulIdentifier",
																								"src": "13498:2:7"
																							},
																							"nativeSrc": "13498:25:7",
																							"nodeType": "YulFunctionCall",
																							"src": "13498:25:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "13468:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "13468:3:7"
																					},
																					"nativeSrc": "13468:56:7",
																					"nodeType": "YulFunctionCall",
																					"src": "13468:56:7"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13455:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "13455:3:7"
																			},
																			"nativeSrc": "13455:70:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13455:70:7"
																		},
																		"variableNames": [
																			{
																				"name": "success",
																				"nativeSrc": "13444:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "13444:7:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "success",
																				"nativeSrc": "12938:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12938:7:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12956:4:7",
																								"nodeType": "YulLiteral",
																								"src": "12956:4:7",
																								"type": "",
																								"value": "0x00"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nativeSrc": "12950:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "12950:5:7"
																						},
																						"nativeSrc": "12950:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "12950:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12963:1:7",
																						"nodeType": "YulLiteral",
																						"src": "12963:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12947:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "12947:2:7"
																				},
																				"nativeSrc": "12947:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12947:18:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12934:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12934:3:7"
																		},
																		"nativeSrc": "12934:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12934:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12927:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12927:6:7"
																},
																"nativeSrc": "12927:40:7",
																"nodeType": "YulFunctionCall",
																"src": "12927:40:7"
															},
															"nativeSrc": "12924:616:7",
															"nodeType": "YulIf",
															"src": "12924:616:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13561:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13561:4:7",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "fmp",
																		"nativeSrc": "13567:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13567:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13554:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13554:6:7"
																},
																"nativeSrc": "13554:17:7",
																"nodeType": "YulFunctionCall",
																"src": "13554:17:7"
															},
															"nativeSrc": "13554:17:7",
															"nodeType": "YulExpressionStatement",
															"src": "13554:17:7"
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 828,
														"isOffset": false,
														"isSlot": false,
														"src": "13097:6:7",
														"valueSize": 1
													},
													{
														"declaration": 834,
														"isOffset": false,
														"isSlot": false,
														"src": "12579:8:7",
														"valueSize": 1
													},
													{
														"declaration": 824,
														"isOffset": false,
														"isSlot": false,
														"src": "12619:7:7",
														"valueSize": 1
													},
													{
														"declaration": 831,
														"isOffset": false,
														"isSlot": false,
														"src": "12692:7:7",
														"valueSize": 1
													},
													{
														"declaration": 831,
														"isOffset": false,
														"isSlot": false,
														"src": "12938:7:7",
														"valueSize": 1
													},
													{
														"declaration": 831,
														"isOffset": false,
														"isSlot": false,
														"src": "13087:7:7",
														"valueSize": 1
													},
													{
														"declaration": 831,
														"isOffset": false,
														"isSlot": false,
														"src": "13444:7:7",
														"valueSize": 1
													},
													{
														"declaration": 831,
														"isOffset": false,
														"isSlot": false,
														"src": "13459:7:7",
														"valueSize": 1
													},
													{
														"declaration": 822,
														"isOffset": false,
														"isSlot": false,
														"src": "12715:5:7",
														"valueSize": 1
													},
													{
														"declaration": 822,
														"isOffset": false,
														"isSlot": false,
														"src": "13513:5:7",
														"valueSize": 1
													},
													{
														"declaration": 826,
														"isOffset": false,
														"isSlot": false,
														"src": "12672:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 839,
												"nodeType": "InlineAssembly",
												"src": "12490:1092:7"
											}
										]
									},
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "11809:498:7",
										"text": " @dev Imitates a Solidity `token.approve(spender, value)` call, relaxing the requirement on the return value:\n the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param spender The spender of the tokens\n @param value The amount of token to transfer\n @param bubble Behavior switch if the transfer call reverts: bubble the revert reason or return a false boolean."
									},
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeApprove",
									"nameLocation": "12322:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "12342:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "12335:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 821,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 820,
														"name": "IERC20",
														"nameLocations": [
															"12335:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "12335:6:7"
													},
													"referencedDeclaration": 361,
													"src": "12335:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12357:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "12349:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12349:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12374:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "12366:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "bubble",
												"nameLocation": "12386:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "12381:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12381:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12334:59:7"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "12416:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "12411:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 830,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12411:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12410:14:7"
									},
									"scope": 842,
									"src": "12313:1276:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 843,
							"src": "715:12877:7",
							"usedErrors": [
								399,
								408
							],
							"usedEvents": []
						}
					],
					"src": "118:13476:7"
				},
				"id": 7
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							872
						]
					},
					"id": 873,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 844,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 845,
								"nodeType": "StructuredDocumentation",
								"src": "132:505:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 872,
							"linearizedBaseContracts": [
								872
							],
							"name": "Context",
							"nameLocation": "657:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "734:36:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 850,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "752:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "756:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "752:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 849,
												"id": 852,
												"nodeType": "Return",
												"src": "745:17:8"
											}
										]
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "681:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:2:8"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "725:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:9:8"
									},
									"scope": 872,
									"src": "672:98:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "845:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 859,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "863:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "867:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "863:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 858,
												"id": 861,
												"nodeType": "Return",
												"src": "856:15:8"
											}
										]
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "787:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:8"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "829:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 856,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "829:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:16:8"
									},
									"scope": 872,
									"src": "778:101:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "959:27:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "977:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 867,
												"id": 869,
												"nodeType": "Return",
												"src": "970:8:8"
											}
										]
									},
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "896:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:2:8"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "950:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "949:9:8"
									},
									"scope": 872,
									"src": "887:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 873,
							"src": "639:350:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "104:887:8"
				},
				"id": 8
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							884
						]
					},
					"id": 885,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 874,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "118:25:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 875,
								"nodeType": "StructuredDocumentation",
								"src": "147:288:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 884,
							"linearizedBaseContracts": [
								884
							],
							"name": "IERC165",
							"nameLocation": "447:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "462:347:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 883,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "824:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "849:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "842:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 877,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "842:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "841:20:9"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "885:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 880,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "885:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:6:9"
									},
									"scope": 884,
									"src": "815:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 885,
							"src": "437:457:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:778:9"
				},
				"id": 9
			},
			"src/Kipu-Bank_v2.sol": {
				"ast": {
					"absolutePath": "src/Kipu-Bank_v2.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"Context": [
							872
						],
						"IERC1363": [
							275
						],
						"IERC20": [
							361
						],
						"IERC20Metadata": [
							387
						],
						"KipuBank": [
							1561
						],
						"Ownable": [
							193
						],
						"SafeERC20": [
							842
						]
					},
					"id": 1562,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 886,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:10"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
							"file": "openzeppelin-contracts/contracts/access/Ownable.sol",
							"id": 887,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1562,
							"sourceUnit": 194,
							"src": "317:61:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 888,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1562,
							"sourceUnit": 388,
							"src": "380:84:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1562,
							"sourceUnit": 843,
							"src": "466:74:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"file": "chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"id": 890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1562,
							"sourceUnit": 46,
							"src": "542:100:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 892,
										"name": "Ownable",
										"nameLocations": [
											"859:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 193,
										"src": "859:7:10"
									},
									"id": 893,
									"nodeType": "InheritanceSpecifier",
									"src": "859:7:10"
								}
							],
							"canonicalName": "KipuBank",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 891,
								"nodeType": "StructuredDocumentation",
								"src": "646:192:10",
								"text": "@title KipuBank - A simple bank with deposit and withdrawal limits\n @author Santiago Carmenes\n @notice This contract allows users to deposit and withdraw ETH with security limits"
							},
							"fullyImplemented": true,
							"id": 1561,
							"linearizedBaseContracts": [
								1561,
								193,
								872
							],
							"name": "KipuBank",
							"nameLocation": "847:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 897,
									"libraryName": {
										"id": 894,
										"name": "SafeERC20",
										"nameLocations": [
											"1155:9:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 842,
										"src": "1155:9:10"
									},
									"nodeType": "UsingForDirective",
									"src": "1149:27:10",
									"typeName": {
										"id": 896,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 895,
											"name": "IERC20",
											"nameLocations": [
												"1169:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 361,
											"src": "1169:6:10"
										},
										"referencedDeclaration": 361,
										"src": "1169:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$361",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "1460:32:10",
										"text": "@notice ETH address constant"
									},
									"functionSelector": "a734f06e",
									"id": 904,
									"mutability": "constant",
									"name": "ETH_ADDRESS",
									"nameLocation": "1522:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1561,
									"src": "1498:48:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 899,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1498:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30",
												"id": 902,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1544:1:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 901,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1536:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 900,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1536:7:10",
												"typeDescriptions": {}
											}
										},
										"id": 903,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1536:10:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "1555:65:10",
										"text": "@notice The maximum age of a price feed update (e.g., 1 hour)"
									},
									"functionSelector": "4a83c3b7",
									"id": 908,
									"mutability": "constant",
									"name": "ORACLE_HEARTBEAT",
									"nameLocation": "1650:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 1561,
									"src": "1626:47:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 906,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1626:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33363030",
										"id": 907,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1669:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3600_by_1",
											"typeString": "int_const 3600"
										},
										"value": "3600"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "1960:141:10",
										"text": "@notice Total ETH limit that can be stored in the bank\n @dev Chose to use uint256 since ERC20 tokens also use uint256 for amounts"
									},
									"functionSelector": "f6687af7",
									"id": 911,
									"mutability": "immutable",
									"name": "i_bankCap",
									"nameLocation": "2132:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 1561,
									"src": "2107:34:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 910,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2107:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 912,
										"nodeType": "StructuredDocumentation",
										"src": "2150:67:10",
										"text": "@notice ETH limit that can be withdrawn in a single transaction"
									},
									"functionSelector": "c801fb40",
									"id": 914,
									"mutability": "immutable",
									"name": "i_withdrawLimit",
									"nameLocation": "2248:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1561,
									"src": "2223:40:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 913,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2223:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "2272:46:10",
										"text": "@notice Total USD value stored in the bank"
									},
									"functionSelector": "3b1a4ec4",
									"id": 917,
									"mutability": "mutable",
									"name": "s_totalUsdValue",
									"nameLocation": "2339:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1561,
									"src": "2324:30:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 916,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2324:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "2363:47:10",
										"text": "@notice Total number of historical deposits"
									},
									"functionSelector": "52963c2b",
									"id": 920,
									"mutability": "mutable",
									"name": "s_totalDeposits",
									"nameLocation": "2430:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1561,
									"src": "2416:29:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 919,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "2416:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "2454:50:10",
										"text": "@notice Total number of historical withdrawals"
									},
									"functionSelector": "f3db702c",
									"id": 923,
									"mutability": "mutable",
									"name": "s_totalWithdrawals",
									"nameLocation": "2524:18:10",
									"nodeType": "VariableDeclaration",
									"scope": 1561,
									"src": "2510:32:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 922,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "2510:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "KipuBank.TokenInfo",
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "2551:63:10",
										"text": "@notice Struct to hold all relevant information for a token"
									},
									"id": 929,
									"members": [
										{
											"constant": false,
											"id": 926,
											"mutability": "mutable",
											"name": "priceFeed",
											"nameLocation": "2656:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 929,
											"src": "2648:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 925,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2648:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 928,
											"mutability": "mutable",
											"name": "decimals",
											"nameLocation": "2682:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 929,
											"src": "2676:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 927,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2676:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenInfo",
									"nameLocation": "2627:9:10",
									"nodeType": "StructDefinition",
									"scope": 1561,
									"src": "2620:78:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "2975:104:10",
										"text": "@notice User balances mapping\n @dev mapping(TokenAddress => mapping(UserAddress => Amount)) "
									},
									"functionSelector": "dccd58e3",
									"id": 936,
									"mutability": "mutable",
									"name": "s_balances",
									"nameLocation": "3140:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 1561,
									"src": "3085:65:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 935,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 931,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3093:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3085:47:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 934,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 932,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3112:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3104:27:10",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 933,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3123:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "3159:86:10",
										"text": "@notice Token information mapping\n @dev mapping(TokenAddress => TokenInfo)"
									},
									"functionSelector": "432017ca",
									"id": 942,
									"mutability": "mutable",
									"name": "s_tokenInfo",
									"nameLocation": "3288:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1561,
									"src": "3251:48:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$929_storage_$",
										"typeString": "mapping(address => struct KipuBank.TokenInfo)"
									},
									"typeName": {
										"id": 941,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 938,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3259:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3251:29:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$929_storage_$",
											"typeString": "mapping(address => struct KipuBank.TokenInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 940,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 939,
												"name": "TokenInfo",
												"nameLocations": [
													"3270:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 929,
												"src": "3270:9:10"
											},
											"referencedDeclaration": 929,
											"src": "3270:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenInfo_$929_storage_ptr",
												"typeString": "struct KipuBank.TokenInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "3578:36:10",
										"text": "@notice Emitted upon ETH deposit"
									},
									"eventSelector": "8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a7",
									"id": 951,
									"name": "Deposited",
									"nameLocation": "3626:9:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3652:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "3636:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3636:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3675:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "3659:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3659:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3689:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "3681:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3681:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3635:61:10"
									},
									"src": "3620:77:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "3705:39:10",
										"text": "@notice Emitted upon ETH withdrawal"
									},
									"eventSelector": "d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb",
									"id": 960,
									"name": "Withdrawn",
									"nameLocation": "3756:9:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3782:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3766:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3766:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3805:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3789:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3789:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3819:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3811:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3811:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3765:61:10"
									},
									"src": "3750:77:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "3835:48:10",
										"text": "@notice Emitted when a price feed is updated"
									},
									"eventSelector": "a8abe0398416476db5b05737cd4da3b3cbde5012d978a6a6c3fd49d321753536",
									"id": 967,
									"name": "PriceFeedUpdated",
									"nameLocation": "3895:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3928:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3912:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3912:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"indexed": true,
												"mutability": "mutable",
												"name": "feed",
												"nameLocation": "3951:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3935:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3935:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3911:45:10"
									},
									"src": "3889:68:10"
								},
								{
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "3967:262:10",
										"text": "-----------------------------------------------------------------------------------------------\n                                         ERRORS\n -----------------------------------------------------------------------------------------------"
									},
									"errorSelector": "f6167f4e",
									"id": 974,
									"name": "KipuBank__ExceedsBankCap",
									"nameLocation": "4241:24:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "attempted",
												"nameLocation": "4274:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "4266:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4266:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "4293:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "4285:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4285:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4265:32:10"
									},
									"src": "4235:63:10"
								},
								{
									"errorSelector": "63101996",
									"id": 980,
									"name": "KipuBank__ExceedsWithdrawLimit",
									"nameLocation": "4310:30:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "attempted",
												"nameLocation": "4349:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "4341:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4341:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "limit",
												"nameLocation": "4368:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "4360:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4360:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4340:34:10"
									},
									"src": "4304:71:10"
								},
								{
									"errorSelector": "5fedab09",
									"id": 988,
									"name": "KipuBank__InsufficientBalance",
									"nameLocation": "4387:29:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4425:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "4417:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4417:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "requested",
												"nameLocation": "4440:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "4432:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4432:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "available",
												"nameLocation": "4459:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "4451:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4451:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4416:53:10"
									},
									"src": "4381:89:10"
								},
								{
									"errorSelector": "a36a1dba",
									"id": 994,
									"name": "KipuBank__TransferFailed",
									"nameLocation": "4482:24:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4515:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "4507:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4507:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4527:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "4519:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4519:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4506:28:10"
									},
									"src": "4476:59:10"
								},
								{
									"errorSelector": "7cb522e9",
									"id": 996,
									"name": "KipuBank__NotAToken",
									"nameLocation": "4547:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4566:2:10"
									},
									"src": "4541:28:10"
								},
								{
									"errorSelector": "fa4e609e",
									"id": 998,
									"name": "KipuBank__AmountMustBeGreaterThanZero",
									"nameLocation": "4581:37:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4618:2:10"
									},
									"src": "4575:46:10"
								},
								{
									"errorSelector": "c25bec56",
									"id": 1002,
									"name": "KipuBank__PriceFeedNotSet",
									"nameLocation": "4633:25:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "4667:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "4659:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4659:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4658:22:10"
									},
									"src": "4627:54:10"
								},
								{
									"errorSelector": "780cfa47",
									"id": 1004,
									"name": "KipuBank__OracleCompromised",
									"nameLocation": "4693:27:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4720:2:10"
									},
									"src": "4687:36:10"
								},
								{
									"errorSelector": "71a821df",
									"id": 1006,
									"name": "KipuBank__StalePrice",
									"nameLocation": "4735:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4755:2:10"
									},
									"src": "4729:29:10"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "5312:82:10",
										"statements": [
											{
												"expression": {
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1018,
														"name": "i_bankCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "5323:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1019,
														"name": "_bankCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "5335:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5323:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "5323:20:10"
											},
											{
												"expression": {
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1022,
														"name": "i_withdrawLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "5354:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1023,
														"name": "_withdrawLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "5372:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5354:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "5354:32:10"
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "5039:193:10",
										"text": "@notice Constructor to initialize bank cap and withdrawal limit\n @param _bankCap Total USD limit for the bank\n @param _withdrawLimit Maximum withdrawal limit per transaction"
									},
									"id": 1027,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1014,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5300:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5304:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5300:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1016,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1013,
												"name": "Ownable",
												"nameLocations": [
													"5292:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 193,
												"src": "5292:7:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5292:19:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "_bankCap",
												"nameLocation": "5258:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "5250:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5250:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "_withdrawLimit",
												"nameLocation": "5276:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "5268:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5268:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5249:42:10"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5312:0:10"
									},
									"scope": 1561,
									"src": "5238:156:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "5809:263:10",
										"statements": [
											{
												"assignments": [
													1035
												],
												"declarations": [
													{
														"constant": false,
														"id": 1035,
														"mutability": "mutable",
														"name": "incomingValue",
														"nameLocation": "5828:13:10",
														"nodeType": "VariableDeclaration",
														"scope": 1056,
														"src": "5820:21:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1034,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5820:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1040,
												"initialValue": {
													"arguments": [
														{
															"id": 1037,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "5858:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1038,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "5873:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1036,
														"name": "getValueInUsd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "5844:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5844:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5820:61:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1041,
															"name": "s_totalUsdValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "5906:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1042,
															"name": "incomingValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "5924:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5906:31:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1044,
														"name": "i_bankCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "5940:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5906:43:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1054,
												"nodeType": "IfStatement",
												"src": "5902:151:10",
												"trueBody": {
													"id": 1053,
													"nodeType": "Block",
													"src": "5951:102:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1047,
																			"name": "s_totalUsdValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 917,
																			"src": "5998:15:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1048,
																			"name": "incomingValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "6016:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5998:31:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1050,
																		"name": "i_bankCap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 911,
																		"src": "6031:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1046,
																	"name": "KipuBank__ExceedsBankCap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "5973:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5973:68:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1052,
															"nodeType": "RevertStatement",
															"src": "5966:75:10"
														}
													]
												}
											},
											{
												"id": 1055,
												"nodeType": "PlaceholderStatement",
												"src": "6063:1:10"
											}
										]
									},
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "5674:66:10",
										"text": "@notice Ensures the deposit does not exceed the total bank cap"
									},
									"id": 1057,
									"name": "withinBankCap",
									"nameLocation": "5755:13:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "5777:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5769:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5769:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5800:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5792:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5792:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5768:40:10"
									},
									"src": "5746:326:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "6208:151:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1062,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "6223:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1063,
														"name": "i_withdrawLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "6233:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6223:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1071,
												"nodeType": "IfStatement",
												"src": "6219:121:10",
												"trueBody": {
													"id": 1070,
													"nodeType": "Block",
													"src": "6250:90:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1066,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1060,
																		"src": "6303:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1067,
																		"name": "i_withdrawLimit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 914,
																		"src": "6312:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1065,
																	"name": "KipuBank__ExceedsWithdrawLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "6272:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6272:56:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1069,
															"nodeType": "RevertStatement",
															"src": "6265:63:10"
														}
													]
												}
											},
											{
												"id": 1072,
												"nodeType": "PlaceholderStatement",
												"src": "6350:1:10"
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "6080:76:10",
										"text": "@notice Ensures the withdrawal does not exceed the per-transaction limit"
									},
									"id": 1074,
									"name": "withinWithdrawLimit",
									"nameLocation": "6171:19:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6199:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "6191:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6191:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6190:17:10"
									},
									"src": "6162:197:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "6492:209:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1081,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "6507:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1082,
																"name": "s_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "6517:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1084,
															"indexExpression": {
																"id": 1083,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1077,
																"src": "6528:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6517:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1087,
														"indexExpression": {
															"expression": {
																"id": 1085,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6543:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6547:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6543:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6517:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6507:47:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1101,
												"nodeType": "IfStatement",
												"src": "6503:179:10",
												"trueBody": {
													"id": 1100,
													"nodeType": "Block",
													"src": "6556:126:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1090,
																		"name": "_tokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "6608:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1091,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1079,
																		"src": "6623:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"baseExpression": {
																			"baseExpression": {
																				"id": 1092,
																				"name": "s_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 936,
																				"src": "6632:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																					"typeString": "mapping(address => mapping(address => uint256))"
																				}
																			},
																			"id": 1094,
																			"indexExpression": {
																				"id": 1093,
																				"name": "_tokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1077,
																				"src": "6643:13:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6632:25:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1097,
																		"indexExpression": {
																			"expression": {
																				"id": 1095,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "6658:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6662:6:10",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "6658:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6632:37:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1089,
																	"name": "KipuBank__InsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "6578:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6578:92:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1099,
															"nodeType": "RevertStatement",
															"src": "6571:99:10"
														}
													]
												}
											},
											{
												"id": 1102,
												"nodeType": "PlaceholderStatement",
												"src": "6692:1:10"
											}
										]
									},
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "6367:49:10",
										"text": "@notice Ensures the user has sufficient funds"
									},
									"id": 1104,
									"name": "hasSufficientBalance",
									"nameLocation": "6431:20:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "6460:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "6452:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6452:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6483:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "6475:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6475:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6451:40:10"
									},
									"src": "6422:279:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "6806:121:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1109,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "6821:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6832:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6821:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1116,
												"nodeType": "IfStatement",
												"src": "6817:91:10",
												"trueBody": {
													"id": 1115,
													"nodeType": "Block",
													"src": "6835:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1112,
																	"name": "KipuBank__AmountMustBeGreaterThanZero",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "6857:37:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6857:39:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1114,
															"nodeType": "RevertStatement",
															"src": "6850:46:10"
														}
													]
												}
											},
											{
												"id": 1117,
												"nodeType": "PlaceholderStatement",
												"src": "6918:1:10"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "6709:51:10",
										"text": "@notice Ensures the amount is greater than zero"
									},
									"id": 1119,
									"name": "nonZeroAmount",
									"nameLocation": "6775:13:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6797:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "6789:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6789:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6788:17:10"
									},
									"src": "6766:161:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "7414:63:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1129,
															"name": "ETH_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "7434:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1130,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7447:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7451:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7447:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1132,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7459:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7463:5:10",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "7459:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1128,
														"name": "_deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "7425:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:44:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "7425:44:10"
											}
										]
									},
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "7212:122:10",
										"text": "@notice Calls internal deposit function for ETH deposits\n @dev Uses withinBankCap modifier to enforce bank cap"
									},
									"functionSelector": "d0e30db0",
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1123,
													"name": "ETH_ADDRESS",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 904,
													"src": "7390:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"expression": {
														"id": 1124,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7403:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7407:5:10",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "7403:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1122,
												"name": "withinBankCap",
												"nameLocations": [
													"7376:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1057,
												"src": "7376:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "7376:37:10"
										}
									],
									"name": "deposit",
									"nameLocation": "7349:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7356:2:10"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7414:0:10"
									},
									"scope": 1561,
									"src": "7340:137:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "7755:247:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1149,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "7770:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1150,
														"name": "ETH_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "7787:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7770:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1156,
												"nodeType": "IfStatement",
												"src": "7766:89:10",
												"trueBody": {
													"id": 1155,
													"nodeType": "Block",
													"src": "7800:55:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1152,
																	"name": "KipuBank__NotAToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "7822:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7822:21:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1154,
															"nodeType": "RevertStatement",
															"src": "7815:28:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1161,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7904:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7908:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7904:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1165,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7924:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_KipuBank_$1561",
																		"typeString": "contract KipuBank"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_KipuBank_$1561",
																		"typeString": "contract KipuBank"
																	}
																],
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7916:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1163,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7916:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7916:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1167,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "7931:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1158,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "7872:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1157,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "7865:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$361_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7865:21:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														"id": 1160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7887:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 467,
														"src": "7865:38:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$361_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7865:74:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "7865:74:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1171,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "7959:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1172,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7974:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7978:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7974:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1174,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "7986:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1170,
														"name": "_deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "7950:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7950:44:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "7950:44:10"
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "7485:155:10",
										"text": "@notice Deposit ERC20 tokens into the bank\n @param _tokenAddress Address of the ERC20 token\n @param _amount Amount of tokens to deposit"
									},
									"functionSelector": "338b5dea",
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1145,
													"name": "_tokenAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1140,
													"src": "7731:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1146,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1142,
													"src": "7746:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1147,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1144,
												"name": "withinBankCap",
												"nameLocations": [
													"7717:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1057,
												"src": "7717:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "7717:37:10"
										}
									],
									"name": "depositToken",
									"nameLocation": "7655:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "7676:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "7668:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7668:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7699:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "7691:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7691:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7667:40:10"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7755:0:10"
									},
									"scope": 1561,
									"src": "7646:356:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "8294:62:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1192,
															"name": "ETH_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "8315:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1193,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8328:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8332:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8328:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1195,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "8340:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1191,
														"name": "_withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "8305:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8305:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "8305:43:10"
											}
										]
									},
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "8010:162:10",
										"text": "@notice Withdraw ETH from the bank\n @param _amount Amount of ETH to withdraw\n @dev Uses withinWithdrawLimit and hasSufficientBalance modifiers"
									},
									"functionSelector": "2e1a7d4d",
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1184,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1181,
													"src": "8242:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1185,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1183,
												"name": "withinWithdrawLimit",
												"nameLocations": [
													"8222:19:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1074,
												"src": "8222:19:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8222:28:10"
										},
										{
											"arguments": [
												{
													"id": 1187,
													"name": "ETH_ADDRESS",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 904,
													"src": "8272:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1188,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1181,
													"src": "8285:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1189,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1186,
												"name": "hasSufficientBalance",
												"nameLocations": [
													"8251:20:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1104,
												"src": "8251:20:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8251:42:10"
										}
									],
									"name": "withdraw",
									"nameLocation": "8187:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8204:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "8196:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8196:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8195:17:10"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8294:0:10"
									},
									"scope": 1561,
									"src": "8178:178:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "8644:163:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1211,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "8659:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1212,
														"name": "ETH_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "8676:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8659:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1218,
												"nodeType": "IfStatement",
												"src": "8655:89:10",
												"trueBody": {
													"id": 1217,
													"nodeType": "Block",
													"src": "8689:55:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1214,
																	"name": "KipuBank__NotAToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "8711:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8711:21:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1216,
															"nodeType": "RevertStatement",
															"src": "8704:28:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1220,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "8764:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1221,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8779:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8783:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8779:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1223,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "8791:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1219,
														"name": "_withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "8754:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8754:45:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1225,
												"nodeType": "ExpressionStatement",
												"src": "8754:45:10"
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "8364:157:10",
										"text": "@notice Withdraw ERC20 tokens from the bank\n @param _tokenAddress Address of the ERC20 token\n @param _amount Amount of tokens to withdraw"
									},
									"functionSelector": "9e281a98",
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1207,
													"name": "_tokenAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1202,
													"src": "8620:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1208,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1204,
													"src": "8635:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1209,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1206,
												"name": "hasSufficientBalance",
												"nameLocations": [
													"8599:20:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1104,
												"src": "8599:20:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8599:44:10"
										}
									],
									"name": "withdrawToken",
									"nameLocation": "8536:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "8558:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "8550:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8550:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8581:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "8573:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8573:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8549:40:10"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8644:0:10"
									},
									"scope": 1561,
									"src": "8527:280:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "9060:63:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1235,
															"name": "s_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "9078:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1237,
														"indexExpression": {
															"id": 1236,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "9089:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9078:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1240,
													"indexExpression": {
														"expression": {
															"id": 1238,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9104:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9108:6:10",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "9104:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9078:37:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1234,
												"id": 1241,
												"nodeType": "Return",
												"src": "9071:44:10"
											}
										]
									},
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "8815:162:10",
										"text": "@notice Check your own token balance\n @param _tokenAddress Address of the ERC20 token\n @return balance Amount of tokens available for the user"
									},
									"functionSelector": "7e3ef7cd",
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyBalance",
									"nameLocation": "8992:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "9013:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "9005:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9005:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9004:23:10"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "9051:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9051:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9050:9:10"
									},
									"scope": 1561,
									"src": "8983:140:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "9309:47:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1251,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "9335:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_KipuBank_$1561",
																	"typeString": "contract KipuBank"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_KipuBank_$1561",
																	"typeString": "contract KipuBank"
																}
															],
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9327:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1249,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9327:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9327:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9341:7:10",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "9327:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1248,
												"id": 1254,
												"nodeType": "Return",
												"src": "9320:28:10"
											}
										]
									},
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "9131:110:10",
										"text": "@notice Check the total balance of the bank\n @return totalBalance Total ETH stored in the contract"
									},
									"functionSelector": "287cc96b",
									"id": 1256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalEthBalance",
									"nameLocation": "9256:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9274:2:10"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "9300:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9300:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9299:9:10"
									},
									"scope": 1561,
									"src": "9247:109:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1306,
										"nodeType": "Block",
										"src": "9562:421:10",
										"statements": [
											{
												"assignments": [
													1267
												],
												"declarations": [
													{
														"constant": false,
														"id": 1267,
														"mutability": "mutable",
														"name": "decimals",
														"nameLocation": "9579:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 1306,
														"src": "9573:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1266,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "9573:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1268,
												"nodeType": "VariableDeclarationStatement",
												"src": "9573:14:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1269,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "9602:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1270,
														"name": "ETH_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "9619:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9602:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1285,
													"nodeType": "Block",
													"src": "9678:78:10",
													"statements": [
														{
															"expression": {
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1277,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "9693:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1279,
																					"name": "_tokenAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1259,
																					"src": "9719:13:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1278,
																				"name": "IERC20Metadata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 387,
																				"src": "9704:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$387_$",
																					"typeString": "type(contract IERC20Metadata)"
																				}
																			},
																			"id": 1280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9704:29:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Metadata_$387",
																				"typeString": "contract IERC20Metadata"
																			}
																		},
																		"id": 1281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9734:8:10",
																		"memberName": "decimals",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 386,
																		"src": "9704:38:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																			"typeString": "function () view external returns (uint8)"
																		}
																	},
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9704:40:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "9693:51:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1284,
															"nodeType": "ExpressionStatement",
															"src": "9693:51:10"
														}
													]
												},
												"id": 1286,
												"nodeType": "IfStatement",
												"src": "9598:158:10",
												"trueBody": {
													"id": 1276,
													"nodeType": "Block",
													"src": "9632:40:10",
													"statements": [
														{
															"expression": {
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1272,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "9647:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "3138",
																	"id": 1273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9658:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "9647:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1275,
															"nodeType": "ExpressionStatement",
															"src": "9647:13:10"
														}
													]
												}
											},
											{
												"assignments": [
													1289
												],
												"declarations": [
													{
														"constant": false,
														"id": 1289,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "9785:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1306,
														"src": "9768:22:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenInfo_$929_memory_ptr",
															"typeString": "struct KipuBank.TokenInfo"
														},
														"typeName": {
															"id": 1288,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1287,
																"name": "TokenInfo",
																"nameLocations": [
																	"9768:9:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 929,
																"src": "9768:9:10"
															},
															"referencedDeclaration": 929,
															"src": "9768:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenInfo_$929_storage_ptr",
																"typeString": "struct KipuBank.TokenInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1294,
												"initialValue": {
													"arguments": [
														{
															"id": 1291,
															"name": "_priceFeedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "9815:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1292,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "9844:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1290,
														"name": "TokenInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "9793:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_TokenInfo_$929_storage_ptr_$",
															"typeString": "type(struct KipuBank.TokenInfo storage pointer)"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"9804:9:10",
														"9834:8:10"
													],
													"names": [
														"priceFeed",
														"decimals"
													],
													"nodeType": "FunctionCall",
													"src": "9793:61:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenInfo_$929_memory_ptr",
														"typeString": "struct KipuBank.TokenInfo memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9768:86:10"
											},
											{
												"expression": {
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1295,
															"name": "s_tokenInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "9865:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$929_storage_$",
																"typeString": "mapping(address => struct KipuBank.TokenInfo storage ref)"
															}
														},
														"id": 1297,
														"indexExpression": {
															"id": 1296,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "9877:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9865:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenInfo_$929_storage",
															"typeString": "struct KipuBank.TokenInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1298,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "9894:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenInfo_$929_memory_ptr",
															"typeString": "struct KipuBank.TokenInfo memory"
														}
													},
													"src": "9865:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenInfo_$929_storage",
														"typeString": "struct KipuBank.TokenInfo storage ref"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "9865:34:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1302,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "9942:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1303,
															"name": "_priceFeedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "9957:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1301,
														"name": "PriceFeedUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "9925:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9925:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "EmitStatement",
												"src": "9920:55:10"
											}
										]
									},
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "9364:101:10",
										"text": "@notice Set the price feed address for a token\n @param _tokenAddress Address of the token"
									},
									"functionSelector": "76e11286",
									"id": 1307,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1264,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1263,
												"name": "onlyOwner",
												"nameLocations": [
													"9552:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "9552:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9552:9:10"
										}
									],
									"name": "setPriceFeed",
									"nameLocation": "9480:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "9501:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "9493:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9493:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "_priceFeedAddress",
												"nameLocation": "9524:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "9516:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9516:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9492:50:10"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9562:0:10"
									},
									"scope": 1561,
									"src": "9471:512:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "10559:716:10",
										"statements": [
											{
												"assignments": [
													1319
												],
												"declarations": [
													{
														"constant": false,
														"id": 1319,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "10587:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1389,
														"src": "10570:22:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenInfo_$929_memory_ptr",
															"typeString": "struct KipuBank.TokenInfo"
														},
														"typeName": {
															"id": 1318,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1317,
																"name": "TokenInfo",
																"nameLocations": [
																	"10570:9:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 929,
																"src": "10570:9:10"
															},
															"referencedDeclaration": 929,
															"src": "10570:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenInfo_$929_storage_ptr",
																"typeString": "struct KipuBank.TokenInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1323,
												"initialValue": {
													"baseExpression": {
														"id": 1320,
														"name": "s_tokenInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "10595:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$929_storage_$",
															"typeString": "mapping(address => struct KipuBank.TokenInfo storage ref)"
														}
													},
													"id": 1322,
													"indexExpression": {
														"id": 1321,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "10607:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10595:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenInfo_$929_storage",
														"typeString": "struct KipuBank.TokenInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10570:51:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1324,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "10646:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenInfo_$929_memory_ptr",
																"typeString": "struct KipuBank.TokenInfo memory"
															}
														},
														"id": 1325,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10652:9:10",
														"memberName": "priceFeed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 926,
														"src": "10646:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10673:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10665:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1326,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10665:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10665:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10646:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1336,
												"nodeType": "IfStatement",
												"src": "10642:109:10",
												"trueBody": {
													"id": 1335,
													"nodeType": "Block",
													"src": "10677:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1332,
																		"name": "_tokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1310,
																		"src": "10725:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1331,
																	"name": "KipuBank__PriceFeedNotSet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "10699:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10699:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1334,
															"nodeType": "RevertStatement",
															"src": "10692:47:10"
														}
													]
												}
											},
											{
												"assignments": [
													1339
												],
												"declarations": [
													{
														"constant": false,
														"id": 1339,
														"mutability": "mutable",
														"name": "priceFeed",
														"nameLocation": "10793:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1389,
														"src": "10771:31:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"id": 1338,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1337,
																"name": "AggregatorV3Interface",
																"nameLocations": [
																	"10771:21:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 45,
																"src": "10771:21:10"
															},
															"referencedDeclaration": 45,
															"src": "10771:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1344,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1341,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "10827:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenInfo_$929_memory_ptr",
																	"typeString": "struct KipuBank.TokenInfo memory"
																}
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10833:9:10",
															"memberName": "priceFeed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 926,
															"src": "10827:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1340,
														"name": "AggregatorV3Interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "10805:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
															"typeString": "type(contract AggregatorV3Interface)"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10805:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10771:72:10"
											},
											{
												"assignments": [
													null,
													1346,
													null,
													1348,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1346,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "10864:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1389,
														"src": "10857:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1345,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "10857:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													{
														"constant": false,
														"id": 1348,
														"mutability": "mutable",
														"name": "updatedAt",
														"nameLocation": "10881:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1389,
														"src": "10873:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1347,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10873:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1352,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1349,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "10896:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10906:15:10",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "10896:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10896:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10854:69:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1353,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "10940:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10949:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10940:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1360,
												"nodeType": "IfStatement",
												"src": "10936:79:10",
												"trueBody": {
													"id": 1359,
													"nodeType": "Block",
													"src": "10952:63:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1356,
																	"name": "KipuBank__OracleCompromised",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "10974:27:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10974:29:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1358,
															"nodeType": "RevertStatement",
															"src": "10967:36:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1361,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "11029:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11035:9:10",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "11029:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1363,
															"name": "updatedAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1348,
															"src": "11047:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11029:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1365,
														"name": "ORACLE_HEARTBEAT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "11059:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11029:46:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1371,
												"nodeType": "IfStatement",
												"src": "11025:108:10",
												"trueBody": {
													"id": 1370,
													"nodeType": "Block",
													"src": "11077:56:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1367,
																	"name": "KipuBank__StalePrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1006,
																	"src": "11099:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11099:22:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1369,
															"nodeType": "RevertStatement",
															"src": "11092:29:10"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1372,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1312,
																	"src": "11210:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1375,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1346,
																			"src": "11228:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11220:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1373,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11220:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11220:14:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11210:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1378,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11209:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11239:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1382,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1319,
																				"src": "11251:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenInfo_$929_memory_ptr",
																					"typeString": "struct KipuBank.TokenInfo memory"
																				}
																			},
																			"id": 1383,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11257:8:10",
																			"memberName": "decimals",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 928,
																			"src": "11251:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11243:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1380,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11243:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11243:23:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11239:27:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1386,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11238:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11209:58:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1316,
												"id": 1388,
												"nodeType": "Return",
												"src": "11202:65:10"
											}
										]
									},
									"documentation": {
										"id": 1308,
										"nodeType": "StructuredDocumentation",
										"src": "10267:193:10",
										"text": "@notice Get value of a token amount in USD\n @param _tokenAddress Address of the token\n @param _amount Amount of tokens\n @return valueInUsd Value in USD with decimals"
									},
									"functionSelector": "fe3192f6",
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getValueInUsd",
									"nameLocation": "10475:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "10497:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "10489:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10489:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "10520:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "10512:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10512:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10488:40:10"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "10550:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10550:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10549:9:10"
									},
									"scope": 1561,
									"src": "10466:809:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "11841:253:10",
										"statements": [
											{
												"expression": {
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1403,
																"name": "s_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "11852:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1406,
															"indexExpression": {
																"id": 1404,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1393,
																"src": "11863:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11852:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1407,
														"indexExpression": {
															"id": 1405,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "11878:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11852:32:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1408,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1397,
														"src": "11888:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11852:43:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "11852:43:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "74727565",
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11922:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1411,
														"name": "_updateCounters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "11906:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11906:21:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "11906:21:10"
											},
											{
												"assignments": [
													1416
												],
												"declarations": [
													{
														"constant": false,
														"id": 1416,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "11948:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1432,
														"src": "11940:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1415,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11940:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1421,
												"initialValue": {
													"arguments": [
														{
															"id": 1418,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "11970:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1419,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "11985:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1417,
														"name": "getValueInUsd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "11956:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11956:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11940:53:10"
											},
											{
												"expression": {
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1422,
														"name": "s_totalUsdValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "12004:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1423,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "12023:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12004:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "12004:24:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1427,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "12056:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1428,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "12071:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1429,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "12078:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1426,
														"name": "Deposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "12046:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12046:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1431,
												"nodeType": "EmitStatement",
												"src": "12041:45:10"
											}
										]
									},
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "11564:166:10",
										"text": "@notice Updates user balance upon deposit\n @param _tokenAddress Token address\n @param _user User address\n @param _amount Amount to deposit"
									},
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1400,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1397,
													"src": "11832:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1401,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1399,
												"name": "nonZeroAmount",
												"nameLocations": [
													"11818:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1119,
												"src": "11818:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "11818:22:10"
										}
									],
									"name": "_deposit",
									"nameLocation": "11745:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "11762:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "11754:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11754:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "11785:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "11777:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11777:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "11800:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "11792:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11792:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11753:55:10"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11841:0:10"
									},
									"scope": 1561,
									"src": "11736:358:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1494,
										"nodeType": "Block",
										"src": "12388:442:10",
										"statements": [
											{
												"expression": {
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1446,
																"name": "s_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "12399:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1449,
															"indexExpression": {
																"id": 1447,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1436,
																"src": "12410:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12399:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1450,
														"indexExpression": {
															"id": 1448,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "12425:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12399:32:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1451,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "12435:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12399:43:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "12399:43:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "66616c7365",
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12469:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1454,
														"name": "_updateCounters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "12453:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12453:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1457,
												"nodeType": "ExpressionStatement",
												"src": "12453:22:10"
											},
											{
												"assignments": [
													1459
												],
												"declarations": [
													{
														"constant": false,
														"id": 1459,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "12496:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1494,
														"src": "12488:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1458,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12488:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1464,
												"initialValue": {
													"arguments": [
														{
															"id": 1461,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "12518:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1462,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "12533:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1460,
														"name": "getValueInUsd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "12504:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12504:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12488:53:10"
											},
											{
												"expression": {
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1465,
														"name": "s_totalUsdValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "12552:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1466,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "12571:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12552:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1468,
												"nodeType": "ExpressionStatement",
												"src": "12552:24:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1469,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "12593:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1470,
														"name": "ETH_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "12610:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12593:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1486,
													"nodeType": "Block",
													"src": "12688:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1482,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1438,
																		"src": "12738:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1483,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1440,
																		"src": "12745:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1479,
																				"name": "_tokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1436,
																				"src": "12710:13:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1478,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 361,
																			"src": "12703:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$361_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12703:21:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12725:12:10",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 436,
																	"src": "12703:34:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$361_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12703:50:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1485,
															"nodeType": "ExpressionStatement",
															"src": "12703:50:10"
														}
													]
												},
												"id": 1487,
												"nodeType": "IfStatement",
												"src": "12589:176:10",
												"trueBody": {
													"id": 1477,
													"nodeType": "Block",
													"src": "12623:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1473,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1438,
																		"src": "12655:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1474,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1440,
																		"src": "12662:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1472,
																	"name": "_safeTransferEth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1541,
																	"src": "12638:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12638:32:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1476,
															"nodeType": "ExpressionStatement",
															"src": "12638:32:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1489,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "12792:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1490,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "12807:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1491,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "12814:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1488,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "12782:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12782:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1493,
												"nodeType": "EmitStatement",
												"src": "12777:45:10"
											}
										]
									},
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "12106:170:10",
										"text": "@notice Updates user balance upon withdrawal\n @param _tokenAddress Token address\n @param _user User address\n @param _amount Amount to withdraw"
									},
									"id": 1495,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1443,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1440,
													"src": "12379:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1444,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1442,
												"name": "nonZeroAmount",
												"nameLocations": [
													"12365:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1119,
												"src": "12365:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "12365:22:10"
										}
									],
									"name": "_withdraw",
									"nameLocation": "12291:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "12309:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "12301:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12301:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "12332:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "12324:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12324:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "12347:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "12339:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12339:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12300:55:10"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12388:0:10"
									},
									"scope": 1561,
									"src": "12282:548:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1513,
										"nodeType": "Block",
										"src": "13294:136:10",
										"statements": [
											{
												"condition": {
													"id": 1501,
													"name": "isDeposit",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1498,
													"src": "13309:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1511,
													"nodeType": "Block",
													"src": "13373:50:10",
													"statements": [
														{
															"expression": {
																"id": 1509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1507,
																	"name": "s_totalWithdrawals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "13388:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13410:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13388:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1510,
															"nodeType": "ExpressionStatement",
															"src": "13388:23:10"
														}
													]
												},
												"id": 1512,
												"nodeType": "IfStatement",
												"src": "13305:118:10",
												"trueBody": {
													"id": 1506,
													"nodeType": "Block",
													"src": "13320:47:10",
													"statements": [
														{
															"expression": {
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1502,
																	"name": "s_totalDeposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "13335:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13354:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13335:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1505,
															"nodeType": "ExpressionStatement",
															"src": "13335:20:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1496,
										"nodeType": "StructuredDocumentation",
										"src": "13119:120:10",
										"text": "@notice Updates the deposit and withdrawal counters\n @param isDeposit True for deposit, false for withdrawal"
									},
									"id": 1514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateCounters",
									"nameLocation": "13254:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "isDeposit",
												"nameLocation": "13275:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "13270:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13270:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13269:16:10"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13294:0:10"
									},
									"scope": 1561,
									"src": "13245:185:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1540,
										"nodeType": "Block",
										"src": "13616:152:10",
										"statements": [
											{
												"assignments": [
													1523,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1523,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "13633:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1540,
														"src": "13628:9:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1522,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13628:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1530,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13666:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1524,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "13643:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13646:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "13643:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1526,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "13658:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "13643:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13643:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13627:42:10"
											},
											{
												"condition": {
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13684:5:10",
													"subExpression": {
														"id": 1531,
														"name": "sent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "13685:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1539,
												"nodeType": "IfStatement",
												"src": "13680:81:10",
												"trueBody": {
													"id": 1538,
													"nodeType": "Block",
													"src": "13691:70:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1534,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1517,
																		"src": "13738:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1535,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1519,
																		"src": "13742:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1533,
																	"name": "KipuBank__TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "13713:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256) pure returns (error)"
																	}
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13713:36:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1537,
															"nodeType": "RevertStatement",
															"src": "13706:43:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1515,
										"nodeType": "StructuredDocumentation",
										"src": "13438:110:10",
										"text": "@notice Safe ETH transfer\n @param to Recipient's address\n @param amount ETH amount to send"
									},
									"id": 1541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferEth",
									"nameLocation": "13563:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13588:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "13580:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13580:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13600:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "13592:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13592:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13579:28:10"
									},
									"returnParameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13616:0:10"
									},
									"scope": 1561,
									"src": "13554:214:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1550,
										"nodeType": "Block",
										"src": "14227:33:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1545,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "14238:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_KipuBank_$1561",
																"typeString": "contract KipuBank"
															}
														},
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14243:7:10",
														"memberName": "deposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1137,
														"src": "14238:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$",
															"typeString": "function () payable external"
														}
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14238:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1549,
												"nodeType": "ExpressionStatement",
												"src": "14238:14:10"
											}
										]
									},
									"documentation": {
										"id": 1542,
										"nodeType": "StructuredDocumentation",
										"src": "14064:130:10",
										"text": "@notice Receive function to handle direct ETH transfers\n @dev The use of this.deposit is because deposit() is external"
									},
									"id": 1551,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14207:2:10"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14227:0:10"
									},
									"scope": 1561,
									"src": "14200:60:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1559,
										"nodeType": "Block",
										"src": "14296:33:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1554,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "14307:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_KipuBank_$1561",
																"typeString": "contract KipuBank"
															}
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14312:7:10",
														"memberName": "deposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1137,
														"src": "14307:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$",
															"typeString": "function () payable external"
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14307:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1558,
												"nodeType": "ExpressionStatement",
												"src": "14307:14:10"
											}
										]
									},
									"id": 1560,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14276:2:10"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14296:0:10"
									},
									"scope": 1561,
									"src": "14268:61:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1562,
							"src": "838:13494:10",
							"usedErrors": [
								59,
								64,
								399,
								974,
								980,
								988,
								994,
								996,
								998,
								1002,
								1004,
								1006
							],
							"usedEvents": [
								70,
								951,
								960,
								967
							]
						}
					],
					"src": "33:14299:10"
				},
				"id": 10
			}
		}
	}
}